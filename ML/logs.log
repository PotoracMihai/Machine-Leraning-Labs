2025-02-13 13:17:20,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-13 13:17:20,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-13 13:17:20,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-13 13:17:20,009:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-13 13:17:21,532:INFO:PyCaret RegressionExperiment
2025-02-13 13:17:21,532:INFO:Logging name: reg-default-name
2025-02-13 13:17:21,532:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-13 13:17:21,532:INFO:version 3.3.2
2025-02-13 13:17:21,532:INFO:Initializing setup()
2025-02-13 13:17:21,532:INFO:self.USI: c14c
2025-02-13 13:17:21,532:INFO:self._variable_keys: {'USI', 'transform_target_param', 'exp_id', 'gpu_n_jobs_param', 'fold_shuffle_param', 'exp_name_log', 'seed', 'y_test', 'data', 'pipeline', 'y', 'X', '_ml_usecase', 'n_jobs_param', 'memory', 'X_test', 'idx', 'html_param', 'logging_param', 'fold_generator', 'target_param', 'y_train', '_available_plots', 'fold_groups_param', 'log_plots_param', 'X_train', 'gpu_param'}
2025-02-13 13:17:21,534:INFO:Checking environment
2025-02-13 13:17:21,534:INFO:python_version: 3.11.7
2025-02-13 13:17:21,534:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2025-02-13 13:17:21,534:INFO:machine: AMD64
2025-02-13 13:17:21,534:INFO:platform: Windows-10-10.0.19045-SP0
2025-02-13 13:17:21,534:INFO:Memory: svmem(total=14515879936, available=4050206720, percent=72.1, used=10465673216, free=4050206720)
2025-02-13 13:17:21,534:INFO:Physical Core: 4
2025-02-13 13:17:21,534:INFO:Logical Core: 8
2025-02-13 13:17:21,534:INFO:Checking libraries
2025-02-13 13:17:21,534:INFO:System:
2025-02-13 13:17:21,534:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2025-02-13 13:17:21,534:INFO:executable: D:\Ciclul III ASEM\New folder\python.exe
2025-02-13 13:17:21,534:INFO:   machine: Windows-10-10.0.19045-SP0
2025-02-13 13:17:21,534:INFO:PyCaret required dependencies:
2025-02-13 13:17:25,299:INFO:                 pip: 23.3.1
2025-02-13 13:17:25,299:INFO:          setuptools: 68.2.2
2025-02-13 13:17:25,299:INFO:             pycaret: 3.3.2
2025-02-13 13:17:25,299:INFO:             IPython: 8.20.0
2025-02-13 13:17:25,299:INFO:          ipywidgets: 7.6.5
2025-02-13 13:17:25,299:INFO:                tqdm: 4.65.0
2025-02-13 13:17:25,299:INFO:               numpy: 1.26.4
2025-02-13 13:17:25,299:INFO:              pandas: 2.1.4
2025-02-13 13:17:25,299:INFO:              jinja2: 3.1.3
2025-02-13 13:17:25,299:INFO:               scipy: 1.11.4
2025-02-13 13:17:25,299:INFO:              joblib: 1.2.0
2025-02-13 13:17:25,299:INFO:             sklearn: 1.4.2
2025-02-13 13:17:25,299:INFO:                pyod: 2.0.3
2025-02-13 13:17:25,299:INFO:            imblearn: 0.13.0
2025-02-13 13:17:25,299:INFO:   category_encoders: 2.7.0
2025-02-13 13:17:25,299:INFO:            lightgbm: 4.5.0
2025-02-13 13:17:25,299:INFO:               numba: 0.59.0
2025-02-13 13:17:25,299:INFO:            requests: 2.31.0
2025-02-13 13:17:25,299:INFO:          matplotlib: 3.7.5
2025-02-13 13:17:25,299:INFO:          scikitplot: 0.3.7
2025-02-13 13:17:25,299:INFO:         yellowbrick: 1.5
2025-02-13 13:17:25,299:INFO:              plotly: 5.24.1
2025-02-13 13:17:25,299:INFO:    plotly-resampler: Not installed
2025-02-13 13:17:25,299:INFO:             kaleido: 0.2.1
2025-02-13 13:17:25,299:INFO:           schemdraw: 0.15
2025-02-13 13:17:25,299:INFO:         statsmodels: 0.14.0
2025-02-13 13:17:25,302:INFO:              sktime: 0.26.0
2025-02-13 13:17:25,302:INFO:               tbats: 1.1.3
2025-02-13 13:17:25,302:INFO:            pmdarima: 2.0.4
2025-02-13 13:17:25,302:INFO:              psutil: 5.9.0
2025-02-13 13:17:25,302:INFO:          markupsafe: 2.1.3
2025-02-13 13:17:25,302:INFO:             pickle5: Not installed
2025-02-13 13:17:25,305:INFO:         cloudpickle: 2.2.1
2025-02-13 13:17:25,305:INFO:         deprecation: 2.1.0
2025-02-13 13:17:25,305:INFO:              xxhash: 3.5.0
2025-02-13 13:17:25,305:INFO:           wurlitzer: Not installed
2025-02-13 13:17:25,305:INFO:PyCaret optional dependencies:
2025-02-13 13:17:25,355:INFO:                shap: Not installed
2025-02-13 13:17:25,355:INFO:           interpret: Not installed
2025-02-13 13:17:25,355:INFO:                umap: Not installed
2025-02-13 13:17:25,355:INFO:     ydata_profiling: Not installed
2025-02-13 13:17:25,355:INFO:  explainerdashboard: Not installed
2025-02-13 13:17:25,355:INFO:             autoviz: Not installed
2025-02-13 13:17:25,355:INFO:           fairlearn: Not installed
2025-02-13 13:17:25,355:INFO:          deepchecks: Not installed
2025-02-13 13:17:25,355:INFO:             xgboost: Not installed
2025-02-13 13:17:25,355:INFO:            catboost: Not installed
2025-02-13 13:17:25,355:INFO:              kmodes: Not installed
2025-02-13 13:17:25,355:INFO:             mlxtend: Not installed
2025-02-13 13:17:25,355:INFO:       statsforecast: Not installed
2025-02-13 13:17:25,355:INFO:        tune_sklearn: Not installed
2025-02-13 13:17:25,355:INFO:                 ray: Not installed
2025-02-13 13:17:25,355:INFO:            hyperopt: Not installed
2025-02-13 13:17:25,355:INFO:              optuna: Not installed
2025-02-13 13:17:25,355:INFO:               skopt: Not installed
2025-02-13 13:17:25,355:INFO:              mlflow: Not installed
2025-02-13 13:17:25,355:INFO:              gradio: Not installed
2025-02-13 13:17:25,355:INFO:             fastapi: Not installed
2025-02-13 13:17:25,355:INFO:             uvicorn: Not installed
2025-02-13 13:17:25,355:INFO:              m2cgen: Not installed
2025-02-13 13:17:25,355:INFO:           evidently: Not installed
2025-02-13 13:17:25,355:INFO:               fugue: Not installed
2025-02-13 13:17:25,355:INFO:           streamlit: 1.30.0
2025-02-13 13:17:25,355:INFO:             prophet: Not installed
2025-02-13 13:17:25,355:INFO:None
2025-02-13 13:17:25,355:INFO:Set up data.
2025-02-13 13:17:25,377:INFO:Set up folding strategy.
2025-02-13 13:17:25,377:INFO:Set up train/test split.
2025-02-13 13:17:25,431:INFO:Set up index.
2025-02-13 13:17:25,431:INFO:Assigning column types.
2025-02-13 13:17:25,434:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-13 13:17:25,434:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-13 13:17:25,447:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-13 13:17:25,458:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:25,607:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:25,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:25,692:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:25,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:25,694:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-13 13:17:25,699:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-13 13:17:25,707:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:25,863:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:26,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:26,095:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-13 13:17:26,106:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,114:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,241:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,348:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,354:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:26,354:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:26,362:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,367:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,639:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,798:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:26,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:26,799:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-13 13:17:26,824:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:26,936:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:27,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:27,061:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:27,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:27,301:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-13 13:17:27,425:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,509:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:27,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:27,631:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,861:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:27,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:27,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:27,861:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-13 13:17:28,113:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:28,227:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:28,231:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:28,503:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:28,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:28,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:28,672:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-13 13:17:28,889:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:28,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:29,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:29,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:29,237:INFO:Preparing preprocessing pipeline...
2025-02-13 13:17:29,237:INFO:Set up simple imputation.
2025-02-13 13:17:29,246:INFO:Set up encoding of ordinal features.
2025-02-13 13:17:29,249:INFO:Set up encoding of categorical features.
2025-02-13 13:17:29,249:INFO:Set up removing multicollinearity.
2025-02-13 13:17:29,350:INFO:Finished creating preprocessing pipeline.
2025-02-13 13:17:29,391:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Mihai\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleIm...
                ('ordinal_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9)))])
2025-02-13 13:17:29,391:INFO:Creating final display dataframe.
2025-02-13 13:17:29,919:INFO:Setup _display_container:                     Description             Value
0                    Session id              5773
1                        Target               cnt
2                   Target type        Regression
3           Original data shape         (511, 13)
4        Transformed data shape         (511, 12)
5   Transformed train set shape         (357, 12)
6    Transformed test set shape         (154, 12)
7              Numeric features                11
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15     Remove multicollinearity              True
16  Multicollinearity threshold               0.9
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              c14c
2025-02-13 13:17:30,171:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:30,171:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:30,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:30,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:30,557:INFO:setup() successfully completed in 9.02s...............
2025-02-13 13:17:30,557:INFO:Initializing compare_models()
2025-02-13 13:17:30,557:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000161DE823890>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000161DE823890>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-02-13 13:17:30,558:INFO:Checking exceptions
2025-02-13 13:17:30,559:INFO:Preparing display monitor
2025-02-13 13:17:30,777:INFO:Initializing Linear Regression
2025-02-13 13:17:30,777:INFO:Total runtime is 0.0 minutes
2025-02-13 13:17:30,784:INFO:SubProcess create_model() called ==================================
2025-02-13 13:17:30,784:INFO:Initializing create_model()
2025-02-13 13:17:30,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000161DE823890>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000161E3C86490>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:17:30,785:INFO:Checking exceptions
2025-02-13 13:17:30,785:INFO:Importing libraries
2025-02-13 13:17:30,785:INFO:Copying training dataset
2025-02-13 13:17:30,805:INFO:Defining folds
2025-02-13 13:17:30,806:INFO:Declaring metric variables
2025-02-13 13:17:30,812:INFO:Importing untrained model
2025-02-13 13:17:30,818:INFO:Linear Regression Imported successfully
2025-02-13 13:17:30,834:INFO:Starting cross validation
2025-02-13 13:17:30,850:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:17:55,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-13 13:17:55,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-13 13:17:55,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-13 13:17:55,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-13 13:17:56,267:INFO:PyCaret RegressionExperiment
2025-02-13 13:17:56,267:INFO:Logging name: reg-default-name
2025-02-13 13:17:56,267:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-13 13:17:56,267:INFO:version 3.3.2
2025-02-13 13:17:56,271:INFO:Initializing setup()
2025-02-13 13:17:56,271:INFO:self.USI: 9434
2025-02-13 13:17:56,271:INFO:self._variable_keys: {'idx', 'exp_id', 'y_train', 'gpu_n_jobs_param', 'USI', 'y', 'gpu_param', 'y_test', 'logging_param', 'memory', 'seed', 'log_plots_param', 'target_param', '_available_plots', 'n_jobs_param', 'pipeline', 'X', 'transform_target_param', 'data', 'html_param', 'X_test', '_ml_usecase', 'fold_generator', 'fold_groups_param', 'fold_shuffle_param', 'exp_name_log', 'X_train'}
2025-02-13 13:17:56,271:INFO:Checking environment
2025-02-13 13:17:56,271:INFO:python_version: 3.11.7
2025-02-13 13:17:56,271:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2025-02-13 13:17:56,271:INFO:machine: AMD64
2025-02-13 13:17:56,271:INFO:platform: Windows-10-10.0.19045-SP0
2025-02-13 13:17:56,271:INFO:Memory: svmem(total=14515879936, available=4656975872, percent=67.9, used=9858904064, free=4656975872)
2025-02-13 13:17:56,271:INFO:Physical Core: 4
2025-02-13 13:17:56,271:INFO:Logical Core: 8
2025-02-13 13:17:56,271:INFO:Checking libraries
2025-02-13 13:17:56,271:INFO:System:
2025-02-13 13:17:56,271:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2025-02-13 13:17:56,271:INFO:executable: D:\Ciclul III ASEM\New folder\python.exe
2025-02-13 13:17:56,271:INFO:   machine: Windows-10-10.0.19045-SP0
2025-02-13 13:17:56,271:INFO:PyCaret required dependencies:
2025-02-13 13:17:58,278:INFO:                 pip: 23.3.1
2025-02-13 13:17:58,278:INFO:          setuptools: 68.2.2
2025-02-13 13:17:58,278:INFO:             pycaret: 3.3.2
2025-02-13 13:17:58,278:INFO:             IPython: 8.20.0
2025-02-13 13:17:58,278:INFO:          ipywidgets: 7.6.5
2025-02-13 13:17:58,278:INFO:                tqdm: 4.65.0
2025-02-13 13:17:58,282:INFO:               numpy: 1.26.4
2025-02-13 13:17:58,282:INFO:              pandas: 2.1.4
2025-02-13 13:17:58,282:INFO:              jinja2: 3.1.3
2025-02-13 13:17:58,282:INFO:               scipy: 1.11.4
2025-02-13 13:17:58,282:INFO:              joblib: 1.2.0
2025-02-13 13:17:58,282:INFO:             sklearn: 1.4.2
2025-02-13 13:17:58,282:INFO:                pyod: 2.0.3
2025-02-13 13:17:58,282:INFO:            imblearn: 0.13.0
2025-02-13 13:17:58,282:INFO:   category_encoders: 2.7.0
2025-02-13 13:17:58,282:INFO:            lightgbm: 4.5.0
2025-02-13 13:17:58,282:INFO:               numba: 0.59.0
2025-02-13 13:17:58,282:INFO:            requests: 2.31.0
2025-02-13 13:17:58,282:INFO:          matplotlib: 3.7.5
2025-02-13 13:17:58,283:INFO:          scikitplot: 0.3.7
2025-02-13 13:17:58,283:INFO:         yellowbrick: 1.5
2025-02-13 13:17:58,283:INFO:              plotly: 5.24.1
2025-02-13 13:17:58,283:INFO:    plotly-resampler: Not installed
2025-02-13 13:17:58,283:INFO:             kaleido: 0.2.1
2025-02-13 13:17:58,283:INFO:           schemdraw: 0.15
2025-02-13 13:17:58,283:INFO:         statsmodels: 0.14.0
2025-02-13 13:17:58,283:INFO:              sktime: 0.26.0
2025-02-13 13:17:58,283:INFO:               tbats: 1.1.3
2025-02-13 13:17:58,283:INFO:            pmdarima: 2.0.4
2025-02-13 13:17:58,283:INFO:              psutil: 5.9.0
2025-02-13 13:17:58,283:INFO:          markupsafe: 2.1.3
2025-02-13 13:17:58,283:INFO:             pickle5: Not installed
2025-02-13 13:17:58,283:INFO:         cloudpickle: 2.2.1
2025-02-13 13:17:58,283:INFO:         deprecation: 2.1.0
2025-02-13 13:17:58,283:INFO:              xxhash: 3.5.0
2025-02-13 13:17:58,283:INFO:           wurlitzer: Not installed
2025-02-13 13:17:58,283:INFO:PyCaret optional dependencies:
2025-02-13 13:17:58,303:INFO:                shap: Not installed
2025-02-13 13:17:58,303:INFO:           interpret: Not installed
2025-02-13 13:17:58,303:INFO:                umap: Not installed
2025-02-13 13:17:58,303:INFO:     ydata_profiling: Not installed
2025-02-13 13:17:58,303:INFO:  explainerdashboard: Not installed
2025-02-13 13:17:58,303:INFO:             autoviz: Not installed
2025-02-13 13:17:58,303:INFO:           fairlearn: Not installed
2025-02-13 13:17:58,303:INFO:          deepchecks: Not installed
2025-02-13 13:17:58,303:INFO:             xgboost: Not installed
2025-02-13 13:17:58,303:INFO:            catboost: Not installed
2025-02-13 13:17:58,303:INFO:              kmodes: Not installed
2025-02-13 13:17:58,303:INFO:             mlxtend: Not installed
2025-02-13 13:17:58,303:INFO:       statsforecast: Not installed
2025-02-13 13:17:58,303:INFO:        tune_sklearn: Not installed
2025-02-13 13:17:58,303:INFO:                 ray: Not installed
2025-02-13 13:17:58,303:INFO:            hyperopt: Not installed
2025-02-13 13:17:58,303:INFO:              optuna: Not installed
2025-02-13 13:17:58,303:INFO:               skopt: Not installed
2025-02-13 13:17:58,303:INFO:              mlflow: Not installed
2025-02-13 13:17:58,303:INFO:              gradio: Not installed
2025-02-13 13:17:58,303:INFO:             fastapi: Not installed
2025-02-13 13:17:58,303:INFO:             uvicorn: Not installed
2025-02-13 13:17:58,303:INFO:              m2cgen: Not installed
2025-02-13 13:17:58,303:INFO:           evidently: Not installed
2025-02-13 13:17:58,303:INFO:               fugue: Not installed
2025-02-13 13:17:58,303:INFO:           streamlit: 1.30.0
2025-02-13 13:17:58,303:INFO:             prophet: Not installed
2025-02-13 13:17:58,303:INFO:None
2025-02-13 13:17:58,303:INFO:Set up data.
2025-02-13 13:17:58,311:INFO:Set up folding strategy.
2025-02-13 13:17:58,311:INFO:Set up train/test split.
2025-02-13 13:17:58,321:INFO:Set up index.
2025-02-13 13:17:58,321:INFO:Assigning column types.
2025-02-13 13:17:58,325:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-13 13:17:58,325:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,329:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,333:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,413:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,466:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:58,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:58,466:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,470:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,479:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,546:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,630:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:58,630:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:58,639:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-13 13:17:58,662:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,674:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,822:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,939:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,941:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:58,942:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:58,952:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-13 13:17:58,967:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,105:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,202:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:59,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:59,208:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-13 13:17:59,227:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,373:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,481:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:59,481:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:59,505:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,705:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:17:59,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:59,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:17:59,805:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-13 13:18:00,053:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:18:00,231:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:18:00,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:00,235:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:00,394:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:18:00,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-13 13:18:00,520:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:00,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:00,523:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-13 13:18:00,693:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:18:00,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:00,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:00,995:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-13 13:18:01,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:01,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:01,126:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-13 13:18:01,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:01,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:01,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:01,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:01,653:INFO:Preparing preprocessing pipeline...
2025-02-13 13:18:01,653:INFO:Set up simple imputation.
2025-02-13 13:18:01,656:INFO:Set up encoding of ordinal features.
2025-02-13 13:18:01,660:INFO:Set up encoding of categorical features.
2025-02-13 13:18:01,660:INFO:Set up removing multicollinearity.
2025-02-13 13:18:01,939:INFO:Finished creating preprocessing pipeline.
2025-02-13 13:18:02,033:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Mihai\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleIm...
                ('ordinal_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9)))])
2025-02-13 13:18:02,033:INFO:Creating final display dataframe.
2025-02-13 13:18:02,343:INFO:Setup _display_container:                     Description             Value
0                    Session id              4355
1                        Target               cnt
2                   Target type        Regression
3           Original data shape         (511, 13)
4        Transformed data shape         (511, 12)
5   Transformed train set shape         (357, 12)
6    Transformed test set shape         (154, 12)
7              Numeric features                11
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15     Remove multicollinearity              True
16  Multicollinearity threshold               0.9
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              9434
2025-02-13 13:18:02,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:02,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:02,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:02,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-13 13:18:02,956:INFO:setup() successfully completed in 6.69s...............
2025-02-13 13:18:02,956:INFO:Initializing compare_models()
2025-02-13 13:18:02,956:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-02-13 13:18:02,956:INFO:Checking exceptions
2025-02-13 13:18:02,959:INFO:Preparing display monitor
2025-02-13 13:18:03,120:INFO:Initializing Linear Regression
2025-02-13 13:18:03,120:INFO:Total runtime is 0.0 minutes
2025-02-13 13:18:03,125:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:03,126:INFO:Initializing create_model()
2025-02-13 13:18:03,126:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:03,126:INFO:Checking exceptions
2025-02-13 13:18:03,126:INFO:Importing libraries
2025-02-13 13:18:03,126:INFO:Copying training dataset
2025-02-13 13:18:03,132:INFO:Defining folds
2025-02-13 13:18:03,132:INFO:Declaring metric variables
2025-02-13 13:18:03,152:INFO:Importing untrained model
2025-02-13 13:18:03,159:INFO:Linear Regression Imported successfully
2025-02-13 13:18:03,171:INFO:Starting cross validation
2025-02-13 13:18:03,181:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:19,271:INFO:Calculating mean and std
2025-02-13 13:18:19,271:INFO:Creating metrics dataframe
2025-02-13 13:18:19,274:INFO:Uploading results into container
2025-02-13 13:18:19,274:INFO:Uploading model into container now
2025-02-13 13:18:19,274:INFO:_master_model_container: 1
2025-02-13 13:18:19,274:INFO:_display_container: 2
2025-02-13 13:18:19,278:INFO:LinearRegression(n_jobs=-1)
2025-02-13 13:18:19,278:INFO:create_model() successfully completed......................................
2025-02-13 13:18:19,397:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:19,401:INFO:Creating metrics dataframe
2025-02-13 13:18:19,412:INFO:Initializing Lasso Regression
2025-02-13 13:18:19,412:INFO:Total runtime is 0.2715346535046895 minutes
2025-02-13 13:18:19,416:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:19,416:INFO:Initializing create_model()
2025-02-13 13:18:19,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:19,417:INFO:Checking exceptions
2025-02-13 13:18:19,418:INFO:Importing libraries
2025-02-13 13:18:19,418:INFO:Copying training dataset
2025-02-13 13:18:19,423:INFO:Defining folds
2025-02-13 13:18:19,423:INFO:Declaring metric variables
2025-02-13 13:18:19,425:INFO:Importing untrained model
2025-02-13 13:18:19,434:INFO:Lasso Regression Imported successfully
2025-02-13 13:18:19,438:INFO:Starting cross validation
2025-02-13 13:18:19,441:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:19,617:INFO:Calculating mean and std
2025-02-13 13:18:19,617:INFO:Creating metrics dataframe
2025-02-13 13:18:19,617:INFO:Uploading results into container
2025-02-13 13:18:19,621:INFO:Uploading model into container now
2025-02-13 13:18:19,622:INFO:_master_model_container: 2
2025-02-13 13:18:19,622:INFO:_display_container: 2
2025-02-13 13:18:19,622:INFO:Lasso(random_state=4355)
2025-02-13 13:18:19,623:INFO:create_model() successfully completed......................................
2025-02-13 13:18:19,720:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:19,720:INFO:Creating metrics dataframe
2025-02-13 13:18:19,733:INFO:Initializing Ridge Regression
2025-02-13 13:18:19,733:INFO:Total runtime is 0.27687699397404986 minutes
2025-02-13 13:18:19,741:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:19,741:INFO:Initializing create_model()
2025-02-13 13:18:19,741:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:19,741:INFO:Checking exceptions
2025-02-13 13:18:19,741:INFO:Importing libraries
2025-02-13 13:18:19,741:INFO:Copying training dataset
2025-02-13 13:18:19,758:INFO:Defining folds
2025-02-13 13:18:19,758:INFO:Declaring metric variables
2025-02-13 13:18:19,767:INFO:Importing untrained model
2025-02-13 13:18:19,778:INFO:Ridge Regression Imported successfully
2025-02-13 13:18:19,796:INFO:Starting cross validation
2025-02-13 13:18:19,800:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:20,023:INFO:Calculating mean and std
2025-02-13 13:18:20,023:INFO:Creating metrics dataframe
2025-02-13 13:18:20,025:INFO:Uploading results into container
2025-02-13 13:18:20,025:INFO:Uploading model into container now
2025-02-13 13:18:20,025:INFO:_master_model_container: 3
2025-02-13 13:18:20,025:INFO:_display_container: 2
2025-02-13 13:18:20,025:INFO:Ridge(random_state=4355)
2025-02-13 13:18:20,025:INFO:create_model() successfully completed......................................
2025-02-13 13:18:20,130:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:20,130:INFO:Creating metrics dataframe
2025-02-13 13:18:20,141:INFO:Initializing Elastic Net
2025-02-13 13:18:20,141:INFO:Total runtime is 0.28367835283279413 minutes
2025-02-13 13:18:20,143:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:20,143:INFO:Initializing create_model()
2025-02-13 13:18:20,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:20,143:INFO:Checking exceptions
2025-02-13 13:18:20,143:INFO:Importing libraries
2025-02-13 13:18:20,143:INFO:Copying training dataset
2025-02-13 13:18:20,152:INFO:Defining folds
2025-02-13 13:18:20,152:INFO:Declaring metric variables
2025-02-13 13:18:20,156:INFO:Importing untrained model
2025-02-13 13:18:20,164:INFO:Elastic Net Imported successfully
2025-02-13 13:18:20,174:INFO:Starting cross validation
2025-02-13 13:18:20,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:20,348:INFO:Calculating mean and std
2025-02-13 13:18:20,348:INFO:Creating metrics dataframe
2025-02-13 13:18:20,348:INFO:Uploading results into container
2025-02-13 13:18:20,348:INFO:Uploading model into container now
2025-02-13 13:18:20,352:INFO:_master_model_container: 4
2025-02-13 13:18:20,352:INFO:_display_container: 2
2025-02-13 13:18:20,352:INFO:ElasticNet(random_state=4355)
2025-02-13 13:18:20,352:INFO:create_model() successfully completed......................................
2025-02-13 13:18:20,518:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:20,518:INFO:Creating metrics dataframe
2025-02-13 13:18:20,539:INFO:Initializing Least Angle Regression
2025-02-13 13:18:20,540:INFO:Total runtime is 0.2903254230817158 minutes
2025-02-13 13:18:20,545:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:20,545:INFO:Initializing create_model()
2025-02-13 13:18:20,545:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:20,545:INFO:Checking exceptions
2025-02-13 13:18:20,545:INFO:Importing libraries
2025-02-13 13:18:20,545:INFO:Copying training dataset
2025-02-13 13:18:20,577:INFO:Defining folds
2025-02-13 13:18:20,578:INFO:Declaring metric variables
2025-02-13 13:18:20,584:INFO:Importing untrained model
2025-02-13 13:18:20,589:INFO:Least Angle Regression Imported successfully
2025-02-13 13:18:20,604:INFO:Starting cross validation
2025-02-13 13:18:20,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:20,798:INFO:Calculating mean and std
2025-02-13 13:18:20,798:INFO:Creating metrics dataframe
2025-02-13 13:18:20,803:INFO:Uploading results into container
2025-02-13 13:18:20,803:INFO:Uploading model into container now
2025-02-13 13:18:20,804:INFO:_master_model_container: 5
2025-02-13 13:18:20,804:INFO:_display_container: 2
2025-02-13 13:18:20,804:INFO:Lars(random_state=4355)
2025-02-13 13:18:20,804:INFO:create_model() successfully completed......................................
2025-02-13 13:18:20,920:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:20,920:INFO:Creating metrics dataframe
2025-02-13 13:18:20,932:INFO:Initializing Lasso Least Angle Regression
2025-02-13 13:18:20,932:INFO:Total runtime is 0.2968657294909159 minutes
2025-02-13 13:18:20,937:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:20,937:INFO:Initializing create_model()
2025-02-13 13:18:20,938:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:20,938:INFO:Checking exceptions
2025-02-13 13:18:20,938:INFO:Importing libraries
2025-02-13 13:18:20,938:INFO:Copying training dataset
2025-02-13 13:18:20,943:INFO:Defining folds
2025-02-13 13:18:20,943:INFO:Declaring metric variables
2025-02-13 13:18:20,947:INFO:Importing untrained model
2025-02-13 13:18:20,951:INFO:Lasso Least Angle Regression Imported successfully
2025-02-13 13:18:20,959:INFO:Starting cross validation
2025-02-13 13:18:20,963:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:21,153:INFO:Calculating mean and std
2025-02-13 13:18:21,153:INFO:Creating metrics dataframe
2025-02-13 13:18:21,153:INFO:Uploading results into container
2025-02-13 13:18:21,157:INFO:Uploading model into container now
2025-02-13 13:18:21,157:INFO:_master_model_container: 6
2025-02-13 13:18:21,157:INFO:_display_container: 2
2025-02-13 13:18:21,157:INFO:LassoLars(random_state=4355)
2025-02-13 13:18:21,157:INFO:create_model() successfully completed......................................
2025-02-13 13:18:21,298:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:21,298:INFO:Creating metrics dataframe
2025-02-13 13:18:21,319:INFO:Initializing Orthogonal Matching Pursuit
2025-02-13 13:18:21,319:INFO:Total runtime is 0.3033124963442484 minutes
2025-02-13 13:18:21,327:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:21,327:INFO:Initializing create_model()
2025-02-13 13:18:21,327:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:21,327:INFO:Checking exceptions
2025-02-13 13:18:21,327:INFO:Importing libraries
2025-02-13 13:18:21,327:INFO:Copying training dataset
2025-02-13 13:18:21,343:INFO:Defining folds
2025-02-13 13:18:21,343:INFO:Declaring metric variables
2025-02-13 13:18:21,355:INFO:Importing untrained model
2025-02-13 13:18:21,364:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-13 13:18:21,384:INFO:Starting cross validation
2025-02-13 13:18:21,388:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:21,571:INFO:Calculating mean and std
2025-02-13 13:18:21,571:INFO:Creating metrics dataframe
2025-02-13 13:18:21,575:INFO:Uploading results into container
2025-02-13 13:18:21,577:INFO:Uploading model into container now
2025-02-13 13:18:21,577:INFO:_master_model_container: 7
2025-02-13 13:18:21,577:INFO:_display_container: 2
2025-02-13 13:18:21,577:INFO:OrthogonalMatchingPursuit()
2025-02-13 13:18:21,577:INFO:create_model() successfully completed......................................
2025-02-13 13:18:21,704:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:21,704:INFO:Creating metrics dataframe
2025-02-13 13:18:21,718:INFO:Initializing Bayesian Ridge
2025-02-13 13:18:21,718:INFO:Total runtime is 0.3099593003590901 minutes
2025-02-13 13:18:21,722:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:21,722:INFO:Initializing create_model()
2025-02-13 13:18:21,722:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:21,722:INFO:Checking exceptions
2025-02-13 13:18:21,722:INFO:Importing libraries
2025-02-13 13:18:21,722:INFO:Copying training dataset
2025-02-13 13:18:21,726:INFO:Defining folds
2025-02-13 13:18:21,726:INFO:Declaring metric variables
2025-02-13 13:18:21,735:INFO:Importing untrained model
2025-02-13 13:18:21,743:INFO:Bayesian Ridge Imported successfully
2025-02-13 13:18:21,749:INFO:Starting cross validation
2025-02-13 13:18:21,752:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:21,936:INFO:Calculating mean and std
2025-02-13 13:18:21,936:INFO:Creating metrics dataframe
2025-02-13 13:18:21,940:INFO:Uploading results into container
2025-02-13 13:18:21,940:INFO:Uploading model into container now
2025-02-13 13:18:21,940:INFO:_master_model_container: 8
2025-02-13 13:18:21,940:INFO:_display_container: 2
2025-02-13 13:18:21,940:INFO:BayesianRidge()
2025-02-13 13:18:21,940:INFO:create_model() successfully completed......................................
2025-02-13 13:18:22,047:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:22,047:INFO:Creating metrics dataframe
2025-02-13 13:18:22,059:INFO:Initializing Passive Aggressive Regressor
2025-02-13 13:18:22,063:INFO:Total runtime is 0.3157156507174173 minutes
2025-02-13 13:18:22,067:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:22,067:INFO:Initializing create_model()
2025-02-13 13:18:22,067:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:22,067:INFO:Checking exceptions
2025-02-13 13:18:22,067:INFO:Importing libraries
2025-02-13 13:18:22,067:INFO:Copying training dataset
2025-02-13 13:18:22,075:INFO:Defining folds
2025-02-13 13:18:22,075:INFO:Declaring metric variables
2025-02-13 13:18:22,079:INFO:Importing untrained model
2025-02-13 13:18:22,083:INFO:Passive Aggressive Regressor Imported successfully
2025-02-13 13:18:22,091:INFO:Starting cross validation
2025-02-13 13:18:22,096:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:22,299:INFO:Calculating mean and std
2025-02-13 13:18:22,303:INFO:Creating metrics dataframe
2025-02-13 13:18:22,304:INFO:Uploading results into container
2025-02-13 13:18:22,304:INFO:Uploading model into container now
2025-02-13 13:18:22,304:INFO:_master_model_container: 9
2025-02-13 13:18:22,304:INFO:_display_container: 2
2025-02-13 13:18:22,304:INFO:PassiveAggressiveRegressor(random_state=4355)
2025-02-13 13:18:22,304:INFO:create_model() successfully completed......................................
2025-02-13 13:18:22,415:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:22,415:INFO:Creating metrics dataframe
2025-02-13 13:18:22,440:INFO:Initializing Huber Regressor
2025-02-13 13:18:22,440:INFO:Total runtime is 0.32198835213979077 minutes
2025-02-13 13:18:22,448:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:22,448:INFO:Initializing create_model()
2025-02-13 13:18:22,448:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:22,448:INFO:Checking exceptions
2025-02-13 13:18:22,448:INFO:Importing libraries
2025-02-13 13:18:22,451:INFO:Copying training dataset
2025-02-13 13:18:22,464:INFO:Defining folds
2025-02-13 13:18:22,464:INFO:Declaring metric variables
2025-02-13 13:18:22,480:INFO:Importing untrained model
2025-02-13 13:18:22,492:INFO:Huber Regressor Imported successfully
2025-02-13 13:18:22,515:INFO:Starting cross validation
2025-02-13 13:18:22,519:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:22,681:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-13 13:18:22,681:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-13 13:18:22,682:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-13 13:18:22,695:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-13 13:18:22,698:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-13 13:18:22,699:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-13 13:18:22,761:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-13 13:18:22,766:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-13 13:18:22,784:INFO:Calculating mean and std
2025-02-13 13:18:22,784:INFO:Creating metrics dataframe
2025-02-13 13:18:22,788:INFO:Uploading results into container
2025-02-13 13:18:22,790:INFO:Uploading model into container now
2025-02-13 13:18:22,790:INFO:_master_model_container: 10
2025-02-13 13:18:22,790:INFO:_display_container: 2
2025-02-13 13:18:22,790:INFO:HuberRegressor()
2025-02-13 13:18:22,790:INFO:create_model() successfully completed......................................
2025-02-13 13:18:22,909:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:22,909:INFO:Creating metrics dataframe
2025-02-13 13:18:22,934:INFO:Initializing K Neighbors Regressor
2025-02-13 13:18:22,934:INFO:Total runtime is 0.33023107051849354 minutes
2025-02-13 13:18:22,945:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:22,948:INFO:Initializing create_model()
2025-02-13 13:18:22,948:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:22,948:INFO:Checking exceptions
2025-02-13 13:18:22,948:INFO:Importing libraries
2025-02-13 13:18:22,948:INFO:Copying training dataset
2025-02-13 13:18:22,958:INFO:Defining folds
2025-02-13 13:18:22,962:INFO:Declaring metric variables
2025-02-13 13:18:22,974:INFO:Importing untrained model
2025-02-13 13:18:22,984:INFO:K Neighbors Regressor Imported successfully
2025-02-13 13:18:23,000:INFO:Starting cross validation
2025-02-13 13:18:23,000:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:23,222:INFO:Calculating mean and std
2025-02-13 13:18:23,222:INFO:Creating metrics dataframe
2025-02-13 13:18:23,227:INFO:Uploading results into container
2025-02-13 13:18:23,228:INFO:Uploading model into container now
2025-02-13 13:18:23,228:INFO:_master_model_container: 11
2025-02-13 13:18:23,229:INFO:_display_container: 2
2025-02-13 13:18:23,229:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-13 13:18:23,230:INFO:create_model() successfully completed......................................
2025-02-13 13:18:23,334:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:23,334:INFO:Creating metrics dataframe
2025-02-13 13:18:23,342:INFO:Initializing Decision Tree Regressor
2025-02-13 13:18:23,342:INFO:Total runtime is 0.3370297869046528 minutes
2025-02-13 13:18:23,346:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:23,346:INFO:Initializing create_model()
2025-02-13 13:18:23,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:23,346:INFO:Checking exceptions
2025-02-13 13:18:23,346:INFO:Importing libraries
2025-02-13 13:18:23,350:INFO:Copying training dataset
2025-02-13 13:18:23,354:INFO:Defining folds
2025-02-13 13:18:23,354:INFO:Declaring metric variables
2025-02-13 13:18:23,358:INFO:Importing untrained model
2025-02-13 13:18:23,362:INFO:Decision Tree Regressor Imported successfully
2025-02-13 13:18:23,370:INFO:Starting cross validation
2025-02-13 13:18:23,370:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:23,553:INFO:Calculating mean and std
2025-02-13 13:18:23,553:INFO:Creating metrics dataframe
2025-02-13 13:18:23,557:INFO:Uploading results into container
2025-02-13 13:18:23,557:INFO:Uploading model into container now
2025-02-13 13:18:23,557:INFO:_master_model_container: 12
2025-02-13 13:18:23,557:INFO:_display_container: 2
2025-02-13 13:18:23,557:INFO:DecisionTreeRegressor(random_state=4355)
2025-02-13 13:18:23,557:INFO:create_model() successfully completed......................................
2025-02-13 13:18:23,673:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:23,673:INFO:Creating metrics dataframe
2025-02-13 13:18:23,686:INFO:Initializing Random Forest Regressor
2025-02-13 13:18:23,690:INFO:Total runtime is 0.3428308010101317 minutes
2025-02-13 13:18:23,691:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:23,695:INFO:Initializing create_model()
2025-02-13 13:18:23,695:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:23,695:INFO:Checking exceptions
2025-02-13 13:18:23,695:INFO:Importing libraries
2025-02-13 13:18:23,695:INFO:Copying training dataset
2025-02-13 13:18:23,704:INFO:Defining folds
2025-02-13 13:18:23,704:INFO:Declaring metric variables
2025-02-13 13:18:23,708:INFO:Importing untrained model
2025-02-13 13:18:23,717:INFO:Random Forest Regressor Imported successfully
2025-02-13 13:18:23,725:INFO:Starting cross validation
2025-02-13 13:18:23,725:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:24,451:INFO:Calculating mean and std
2025-02-13 13:18:24,451:INFO:Creating metrics dataframe
2025-02-13 13:18:24,455:INFO:Uploading results into container
2025-02-13 13:18:24,455:INFO:Uploading model into container now
2025-02-13 13:18:24,455:INFO:_master_model_container: 13
2025-02-13 13:18:24,455:INFO:_display_container: 2
2025-02-13 13:18:24,455:INFO:RandomForestRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:24,455:INFO:create_model() successfully completed......................................
2025-02-13 13:18:24,552:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:24,552:INFO:Creating metrics dataframe
2025-02-13 13:18:24,564:INFO:Initializing Extra Trees Regressor
2025-02-13 13:18:24,565:INFO:Total runtime is 0.35740549961725854 minutes
2025-02-13 13:18:24,565:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:24,569:INFO:Initializing create_model()
2025-02-13 13:18:24,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:24,569:INFO:Checking exceptions
2025-02-13 13:18:24,569:INFO:Importing libraries
2025-02-13 13:18:24,569:INFO:Copying training dataset
2025-02-13 13:18:24,573:INFO:Defining folds
2025-02-13 13:18:24,573:INFO:Declaring metric variables
2025-02-13 13:18:24,578:INFO:Importing untrained model
2025-02-13 13:18:24,582:INFO:Extra Trees Regressor Imported successfully
2025-02-13 13:18:24,590:INFO:Starting cross validation
2025-02-13 13:18:24,590:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:25,199:INFO:Calculating mean and std
2025-02-13 13:18:25,204:INFO:Creating metrics dataframe
2025-02-13 13:18:25,204:INFO:Uploading results into container
2025-02-13 13:18:25,204:INFO:Uploading model into container now
2025-02-13 13:18:25,204:INFO:_master_model_container: 14
2025-02-13 13:18:25,204:INFO:_display_container: 2
2025-02-13 13:18:25,208:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:25,208:INFO:create_model() successfully completed......................................
2025-02-13 13:18:25,315:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:25,315:INFO:Creating metrics dataframe
2025-02-13 13:18:25,343:INFO:Initializing AdaBoost Regressor
2025-02-13 13:18:25,343:INFO:Total runtime is 0.3703865925470986 minutes
2025-02-13 13:18:25,351:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:25,354:INFO:Initializing create_model()
2025-02-13 13:18:25,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:25,354:INFO:Checking exceptions
2025-02-13 13:18:25,354:INFO:Importing libraries
2025-02-13 13:18:25,354:INFO:Copying training dataset
2025-02-13 13:18:25,367:INFO:Defining folds
2025-02-13 13:18:25,367:INFO:Declaring metric variables
2025-02-13 13:18:25,376:INFO:Importing untrained model
2025-02-13 13:18:25,384:INFO:AdaBoost Regressor Imported successfully
2025-02-13 13:18:25,402:INFO:Starting cross validation
2025-02-13 13:18:25,406:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:25,839:INFO:Calculating mean and std
2025-02-13 13:18:25,839:INFO:Creating metrics dataframe
2025-02-13 13:18:25,843:INFO:Uploading results into container
2025-02-13 13:18:25,843:INFO:Uploading model into container now
2025-02-13 13:18:25,843:INFO:_master_model_container: 15
2025-02-13 13:18:25,843:INFO:_display_container: 2
2025-02-13 13:18:25,843:INFO:AdaBoostRegressor(random_state=4355)
2025-02-13 13:18:25,843:INFO:create_model() successfully completed......................................
2025-02-13 13:18:25,940:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:25,940:INFO:Creating metrics dataframe
2025-02-13 13:18:25,954:INFO:Initializing Gradient Boosting Regressor
2025-02-13 13:18:25,954:INFO:Total runtime is 0.38056877851486187 minutes
2025-02-13 13:18:25,960:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:25,960:INFO:Initializing create_model()
2025-02-13 13:18:25,961:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:25,961:INFO:Checking exceptions
2025-02-13 13:18:25,961:INFO:Importing libraries
2025-02-13 13:18:25,961:INFO:Copying training dataset
2025-02-13 13:18:25,968:INFO:Defining folds
2025-02-13 13:18:25,968:INFO:Declaring metric variables
2025-02-13 13:18:25,974:INFO:Importing untrained model
2025-02-13 13:18:25,978:INFO:Gradient Boosting Regressor Imported successfully
2025-02-13 13:18:25,987:INFO:Starting cross validation
2025-02-13 13:18:25,987:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:26,395:INFO:Calculating mean and std
2025-02-13 13:18:26,395:INFO:Creating metrics dataframe
2025-02-13 13:18:26,399:INFO:Uploading results into container
2025-02-13 13:18:26,399:INFO:Uploading model into container now
2025-02-13 13:18:26,399:INFO:_master_model_container: 16
2025-02-13 13:18:26,399:INFO:_display_container: 2
2025-02-13 13:18:26,399:INFO:GradientBoostingRegressor(random_state=4355)
2025-02-13 13:18:26,399:INFO:create_model() successfully completed......................................
2025-02-13 13:18:26,527:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:26,527:INFO:Creating metrics dataframe
2025-02-13 13:18:26,555:INFO:Initializing Light Gradient Boosting Machine
2025-02-13 13:18:26,555:INFO:Total runtime is 0.39058324893315616 minutes
2025-02-13 13:18:26,563:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:26,567:INFO:Initializing create_model()
2025-02-13 13:18:26,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:26,567:INFO:Checking exceptions
2025-02-13 13:18:26,567:INFO:Importing libraries
2025-02-13 13:18:26,567:INFO:Copying training dataset
2025-02-13 13:18:26,580:INFO:Defining folds
2025-02-13 13:18:26,580:INFO:Declaring metric variables
2025-02-13 13:18:26,590:INFO:Importing untrained model
2025-02-13 13:18:26,598:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-13 13:18:26,619:INFO:Starting cross validation
2025-02-13 13:18:26,619:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:27,274:INFO:Calculating mean and std
2025-02-13 13:18:27,276:INFO:Creating metrics dataframe
2025-02-13 13:18:27,276:INFO:Uploading results into container
2025-02-13 13:18:27,276:INFO:Uploading model into container now
2025-02-13 13:18:27,276:INFO:_master_model_container: 17
2025-02-13 13:18:27,276:INFO:_display_container: 2
2025-02-13 13:18:27,280:INFO:LGBMRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:27,280:INFO:create_model() successfully completed......................................
2025-02-13 13:18:27,403:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:27,403:INFO:Creating metrics dataframe
2025-02-13 13:18:27,416:INFO:Initializing Dummy Regressor
2025-02-13 13:18:27,416:INFO:Total runtime is 0.40493115584055567 minutes
2025-02-13 13:18:27,418:INFO:SubProcess create_model() called ==================================
2025-02-13 13:18:27,418:INFO:Initializing create_model()
2025-02-13 13:18:27,418:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020DB5AFA950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:27,418:INFO:Checking exceptions
2025-02-13 13:18:27,418:INFO:Importing libraries
2025-02-13 13:18:27,418:INFO:Copying training dataset
2025-02-13 13:18:27,427:INFO:Defining folds
2025-02-13 13:18:27,427:INFO:Declaring metric variables
2025-02-13 13:18:27,431:INFO:Importing untrained model
2025-02-13 13:18:27,436:INFO:Dummy Regressor Imported successfully
2025-02-13 13:18:27,445:INFO:Starting cross validation
2025-02-13 13:18:27,445:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:27,619:INFO:Calculating mean and std
2025-02-13 13:18:27,621:INFO:Creating metrics dataframe
2025-02-13 13:18:27,621:INFO:Uploading results into container
2025-02-13 13:18:27,621:INFO:Uploading model into container now
2025-02-13 13:18:27,625:INFO:_master_model_container: 18
2025-02-13 13:18:27,625:INFO:_display_container: 2
2025-02-13 13:18:27,625:INFO:DummyRegressor()
2025-02-13 13:18:27,625:INFO:create_model() successfully completed......................................
2025-02-13 13:18:27,726:INFO:SubProcess create_model() end ==================================
2025-02-13 13:18:27,726:INFO:Creating metrics dataframe
2025-02-13 13:18:27,792:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-02-13 13:18:27,801:INFO:Initializing create_model()
2025-02-13 13:18:27,801:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=LGBMRegressor(n_jobs=-1, random_state=4355), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:27,803:INFO:Checking exceptions
2025-02-13 13:18:27,804:INFO:Importing libraries
2025-02-13 13:18:27,804:INFO:Copying training dataset
2025-02-13 13:18:27,808:INFO:Defining folds
2025-02-13 13:18:27,808:INFO:Declaring metric variables
2025-02-13 13:18:27,808:INFO:Importing untrained model
2025-02-13 13:18:27,808:INFO:Declaring custom model
2025-02-13 13:18:27,812:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-13 13:18:27,812:INFO:Cross validation set to False
2025-02-13 13:18:27,812:INFO:Fitting Model
2025-02-13 13:18:27,845:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000242 seconds.
2025-02-13 13:18:27,845:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-13 13:18:27,850:INFO:[LightGBM] [Info] Total Bins 393
2025-02-13 13:18:27,850:INFO:[LightGBM] [Info] Number of data points in the train set: 357, number of used features: 9
2025-02-13 13:18:27,850:INFO:[LightGBM] [Info] Start training from score 4497.725490
2025-02-13 13:18:27,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:27,891:INFO:LGBMRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:27,891:INFO:create_model() successfully completed......................................
2025-02-13 13:18:28,045:INFO:_master_model_container: 18
2025-02-13 13:18:28,045:INFO:_display_container: 2
2025-02-13 13:18:28,045:INFO:LGBMRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:28,045:INFO:compare_models() successfully completed......................................
2025-02-13 13:18:28,045:INFO:Initializing finalize_model()
2025-02-13 13:18:28,045:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=LGBMRegressor(n_jobs=-1, random_state=4355), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-13 13:18:28,045:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:28,051:INFO:Initializing create_model()
2025-02-13 13:18:28,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=LGBMRegressor(n_jobs=-1, random_state=4355), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:28,051:INFO:Checking exceptions
2025-02-13 13:18:28,051:INFO:Importing libraries
2025-02-13 13:18:28,051:INFO:Copying training dataset
2025-02-13 13:18:28,051:INFO:Defining folds
2025-02-13 13:18:28,051:INFO:Declaring metric variables
2025-02-13 13:18:28,055:INFO:Importing untrained model
2025-02-13 13:18:28,055:INFO:Declaring custom model
2025-02-13 13:18:28,056:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-13 13:18:28,056:INFO:Cross validation set to False
2025-02-13 13:18:28,056:INFO:Fitting Model
2025-02-13 13:18:28,093:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000136 seconds.
2025-02-13 13:18:28,093:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-13 13:18:28,093:INFO:[LightGBM] [Info] Total Bins 546
2025-02-13 13:18:28,093:INFO:[LightGBM] [Info] Number of data points in the train set: 511, number of used features: 9
2025-02-13 13:18:28,093:INFO:[LightGBM] [Info] Start training from score 4455.136986
2025-02-13 13:18:28,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:28,159:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))])
2025-02-13 13:18:28,163:INFO:create_model() successfully completed......................................
2025-02-13 13:18:28,286:INFO:_master_model_container: 18
2025-02-13 13:18:28,286:INFO:_display_container: 2
2025-02-13 13:18:28,306:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))])
2025-02-13 13:18:28,306:INFO:finalize_model() successfully completed......................................
2025-02-13 13:18:28,431:INFO:Initializing predict_model()
2025-02-13 13:18:28,431:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DB07CE020>)
2025-02-13 13:18:28,431:INFO:Checking exceptions
2025-02-13 13:18:28,431:INFO:Preloading libraries
2025-02-13 13:18:28,431:INFO:Set up data.
2025-02-13 13:18:28,440:INFO:Set up index.
2025-02-13 13:18:28,489:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-13 13:18:28,623:INFO:Initializing get_config()
2025-02-13 13:18:28,623:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, variable=X)
2025-02-13 13:18:28,628:INFO:Variable:  returned as      season  yr  mnth  holiday  weekday  workingday  weathersit      temp  \
666       4   1    10        0        0           0           2  0.477500   
280       4   0    10        0        6           0           1  0.521667   
507       2   1     5        0        2           1           2  0.615000   
532       2   1     6        0        6           0           1  0.631667   
611       3   1     9        1        1           0           1  0.707500   
..      ...  ..   ...      ...      ...         ...         ...       ...   
677       4   1    11        0        4           1           1  0.352174   
484       2   1     4        0        0           0           1  0.458333   
477       2   1     4        0        0           0           3  0.396667   
637       4   1     9        0        6           0           1  0.542500   
352       4   0    12        0        1           1           1  0.276667   

        atemp       hum  windspeed  rider_type  
666  0.467771  0.694583   0.398008  registered  
280  0.513242  0.701250   0.045404  registered  
507  0.580825  0.765833   0.118167  registered  
532  0.594708  0.504167   0.166667  registered  
611  0.661629  0.790833   0.151121  registered  
..        ...       ...        ...         ...  
677  0.341891  0.333478   0.347835  registered  
484  0.450121  0.587083   0.116908  registered  
477  0.389504  0.835417   0.344546  registered  
637  0.530296  0.542917   0.227604  registered  
352  0.280933  0.637500   0.172896  registered  

[511 rows x 12 columns]
2025-02-13 13:18:28,628:INFO:get_config() successfully completed......................................
2025-02-13 13:18:28,665:INFO:Initializing predict_model()
2025-02-13 13:18:28,665:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DB5EDD440>)
2025-02-13 13:18:28,665:INFO:Checking exceptions
2025-02-13 13:18:28,665:INFO:Preloading libraries
2025-02-13 13:18:28,669:INFO:Set up data.
2025-02-13 13:18:28,675:INFO:Set up index.
2025-02-13 13:18:28,696:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-13 13:18:28,840:INFO:Initializing get_config()
2025-02-13 13:18:28,840:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, variable=X)
2025-02-13 13:18:28,849:INFO:Variable:  returned as      season  yr  mnth  holiday  weekday  workingday  weathersit      temp  \
666       4   1    10        0        0           0           2  0.477500   
280       4   0    10        0        6           0           1  0.521667   
507       2   1     5        0        2           1           2  0.615000   
532       2   1     6        0        6           0           1  0.631667   
611       3   1     9        1        1           0           1  0.707500   
..      ...  ..   ...      ...      ...         ...         ...       ...   
677       4   1    11        0        4           1           1  0.352174   
484       2   1     4        0        0           0           1  0.458333   
477       2   1     4        0        0           0           3  0.396667   
637       4   1     9        0        6           0           1  0.542500   
352       4   0    12        0        1           1           1  0.276667   

        atemp       hum  windspeed  rider_type  
666  0.467771  0.694583   0.398008  registered  
280  0.513242  0.701250   0.045404  registered  
507  0.580825  0.765833   0.118167  registered  
532  0.594708  0.504167   0.166667  registered  
611  0.661629  0.790833   0.151121  registered  
..        ...       ...        ...         ...  
677  0.341891  0.333478   0.347835  registered  
484  0.450121  0.587083   0.116908  registered  
477  0.389504  0.835417   0.344546  registered  
637  0.530296  0.542917   0.227604  registered  
352  0.280933  0.637500   0.172896  registered  

[511 rows x 12 columns]
2025-02-13 13:18:28,849:INFO:get_config() successfully completed......................................
2025-02-13 13:18:28,858:INFO:Initializing create_model()
2025-02-13 13:18:28,858:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:28,858:INFO:Checking exceptions
2025-02-13 13:18:28,884:INFO:Importing libraries
2025-02-13 13:18:28,888:INFO:Copying training dataset
2025-02-13 13:18:28,893:INFO:Defining folds
2025-02-13 13:18:28,893:INFO:Declaring metric variables
2025-02-13 13:18:28,902:INFO:Importing untrained model
2025-02-13 13:18:28,909:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-13 13:18:28,922:INFO:Starting cross validation
2025-02-13 13:18:28,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-13 13:18:29,739:INFO:Calculating mean and std
2025-02-13 13:18:29,743:INFO:Creating metrics dataframe
2025-02-13 13:18:29,747:INFO:Finalizing model
2025-02-13 13:18:29,791:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000186 seconds.
2025-02-13 13:18:29,792:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-13 13:18:29,792:INFO:[LightGBM] [Info] Total Bins 393
2025-02-13 13:18:29,792:INFO:[LightGBM] [Info] Number of data points in the train set: 357, number of used features: 9
2025-02-13 13:18:29,792:INFO:[LightGBM] [Info] Start training from score 4497.725490
2025-02-13 13:18:29,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:29,875:INFO:Uploading results into container
2025-02-13 13:18:29,875:INFO:Uploading model into container now
2025-02-13 13:18:29,892:INFO:_master_model_container: 19
2025-02-13 13:18:29,892:INFO:_display_container: 5
2025-02-13 13:18:29,892:INFO:LGBMRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:29,892:INFO:create_model() successfully completed......................................
2025-02-13 13:18:30,041:INFO:Initializing finalize_model()
2025-02-13 13:18:30,041:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=LGBMRegressor(n_jobs=-1, random_state=4355), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-13 13:18:30,042:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:30,044:INFO:Initializing create_model()
2025-02-13 13:18:30,044:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=LGBMRegressor(n_jobs=-1, random_state=4355), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:30,044:INFO:Checking exceptions
2025-02-13 13:18:30,049:INFO:Importing libraries
2025-02-13 13:18:30,049:INFO:Copying training dataset
2025-02-13 13:18:30,049:INFO:Defining folds
2025-02-13 13:18:30,049:INFO:Declaring metric variables
2025-02-13 13:18:30,049:INFO:Importing untrained model
2025-02-13 13:18:30,049:INFO:Declaring custom model
2025-02-13 13:18:30,049:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-13 13:18:30,053:INFO:Cross validation set to False
2025-02-13 13:18:30,053:INFO:Fitting Model
2025-02-13 13:18:30,086:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000137 seconds.
2025-02-13 13:18:30,086:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-13 13:18:30,086:INFO:[LightGBM] [Info] Total Bins 546
2025-02-13 13:18:30,086:INFO:[LightGBM] [Info] Number of data points in the train set: 511, number of used features: 9
2025-02-13 13:18:30,086:INFO:[LightGBM] [Info] Start training from score 4455.136986
2025-02-13 13:18:30,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,195:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))])
2025-02-13 13:18:30,195:INFO:create_model() successfully completed......................................
2025-02-13 13:18:30,319:INFO:_master_model_container: 19
2025-02-13 13:18:30,319:INFO:_display_container: 5
2025-02-13 13:18:30,339:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))])
2025-02-13 13:18:30,339:INFO:finalize_model() successfully completed......................................
2025-02-13 13:18:30,501:INFO:Initializing predict_model()
2025-02-13 13:18:30,501:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DB5BD40E0>)
2025-02-13 13:18:30,501:INFO:Checking exceptions
2025-02-13 13:18:30,501:INFO:Preloading libraries
2025-02-13 13:18:30,505:INFO:Set up data.
2025-02-13 13:18:30,509:INFO:Set up index.
2025-02-13 13:18:30,550:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-13 13:18:30,704:INFO:Initializing finalize_model()
2025-02-13 13:18:30,704:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=LGBMRegressor(n_jobs=-1, random_state=4355), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-13 13:18:30,704:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=4355)
2025-02-13 13:18:30,713:INFO:Initializing create_model()
2025-02-13 13:18:30,713:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=LGBMRegressor(n_jobs=-1, random_state=4355), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-13 13:18:30,713:INFO:Checking exceptions
2025-02-13 13:18:30,719:INFO:Importing libraries
2025-02-13 13:18:30,719:INFO:Copying training dataset
2025-02-13 13:18:30,719:INFO:Defining folds
2025-02-13 13:18:30,719:INFO:Declaring metric variables
2025-02-13 13:18:30,719:INFO:Importing untrained model
2025-02-13 13:18:30,719:INFO:Declaring custom model
2025-02-13 13:18:30,723:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-13 13:18:30,723:INFO:Cross validation set to False
2025-02-13 13:18:30,723:INFO:Fitting Model
2025-02-13 13:18:30,769:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000148 seconds.
2025-02-13 13:18:30,769:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-13 13:18:30,769:INFO:[LightGBM] [Info] Total Bins 546
2025-02-13 13:18:30,769:INFO:[LightGBM] [Info] Number of data points in the train set: 511, number of used features: 9
2025-02-13 13:18:30,769:INFO:[LightGBM] [Info] Start training from score 4455.136986
2025-02-13 13:18:30,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-13 13:18:30,869:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))])
2025-02-13 13:18:30,869:INFO:create_model() successfully completed......................................
2025-02-13 13:18:31,002:INFO:_master_model_container: 19
2025-02-13 13:18:31,002:INFO:_display_container: 6
2025-02-13 13:18:31,029:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))])
2025-02-13 13:18:31,029:INFO:finalize_model() successfully completed......................................
2025-02-13 13:18:31,172:INFO:Initializing predict_model()
2025-02-13 13:18:31,172:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020DB14D7210>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordi...
                                    transformer=OrdinalEncoder(cols=['rider_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'rider_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': casual        0
registered    1
NaN          -1
dtype: int64}]))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=4355))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020DB5BD4040>)
2025-02-13 13:18:31,172:INFO:Checking exceptions
2025-02-13 13:18:31,172:INFO:Preloading libraries
2025-02-13 13:18:31,172:INFO:Set up data.
2025-02-13 13:18:31,180:INFO:Set up index.
2025-02-13 13:18:31,207:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-19 14:21:53,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-19 14:21:53,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-19 14:21:53,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-19 14:21:53,970:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-19 14:28:47,327:INFO:PyCaret RegressionExperiment
2025-02-19 14:28:47,327:INFO:Logging name: reg-default-name
2025-02-19 14:28:47,327:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-19 14:28:47,327:INFO:version 3.3.2
2025-02-19 14:28:47,327:INFO:Initializing setup()
2025-02-19 14:28:47,327:INFO:self.USI: 521d
2025-02-19 14:28:47,327:INFO:self._variable_keys: {'log_plots_param', 'y', 'html_param', 'X', 'memory', 'y_train', 'idx', '_ml_usecase', 'seed', 'gpu_n_jobs_param', 'data', 'fold_groups_param', 'USI', 'X_train', 'y_test', 'X_test', 'n_jobs_param', 'transform_target_param', 'pipeline', 'target_param', 'exp_id', '_available_plots', 'gpu_param', 'fold_shuffle_param', 'logging_param', 'fold_generator', 'exp_name_log'}
2025-02-19 14:28:47,327:INFO:Checking environment
2025-02-19 14:28:47,327:INFO:python_version: 3.11.7
2025-02-19 14:28:47,327:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2025-02-19 14:28:47,327:INFO:machine: AMD64
2025-02-19 14:28:47,327:INFO:platform: Windows-10-10.0.19045-SP0
2025-02-19 14:28:47,327:INFO:Memory: svmem(total=14515879936, available=6450270208, percent=55.6, used=8065609728, free=6450270208)
2025-02-19 14:28:47,327:INFO:Physical Core: 4
2025-02-19 14:28:47,327:INFO:Logical Core: 8
2025-02-19 14:28:47,327:INFO:Checking libraries
2025-02-19 14:28:47,327:INFO:System:
2025-02-19 14:28:47,327:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2025-02-19 14:28:47,327:INFO:executable: D:\Ciclul III ASEM\New folder\python.exe
2025-02-19 14:28:47,327:INFO:   machine: Windows-10-10.0.19045-SP0
2025-02-19 14:28:47,327:INFO:PyCaret required dependencies:
2025-02-19 14:28:49,201:INFO:                 pip: 23.3.1
2025-02-19 14:28:49,201:INFO:          setuptools: 68.2.2
2025-02-19 14:28:49,201:INFO:             pycaret: 3.3.2
2025-02-19 14:28:49,201:INFO:             IPython: 8.20.0
2025-02-19 14:28:49,201:INFO:          ipywidgets: 7.6.5
2025-02-19 14:28:49,201:INFO:                tqdm: 4.65.0
2025-02-19 14:28:49,201:INFO:               numpy: 1.26.4
2025-02-19 14:28:49,201:INFO:              pandas: 2.1.4
2025-02-19 14:28:49,201:INFO:              jinja2: 3.1.3
2025-02-19 14:28:49,201:INFO:               scipy: 1.11.4
2025-02-19 14:28:49,201:INFO:              joblib: 1.2.0
2025-02-19 14:28:49,201:INFO:             sklearn: 1.4.2
2025-02-19 14:28:49,201:INFO:                pyod: 2.0.3
2025-02-19 14:28:49,201:INFO:            imblearn: 0.13.0
2025-02-19 14:28:49,201:INFO:   category_encoders: 2.7.0
2025-02-19 14:28:49,201:INFO:            lightgbm: 4.5.0
2025-02-19 14:28:49,201:INFO:               numba: 0.59.0
2025-02-19 14:28:49,201:INFO:            requests: 2.31.0
2025-02-19 14:28:49,201:INFO:          matplotlib: 3.7.5
2025-02-19 14:28:49,201:INFO:          scikitplot: 0.3.7
2025-02-19 14:28:49,201:INFO:         yellowbrick: 1.5
2025-02-19 14:28:49,201:INFO:              plotly: 5.24.1
2025-02-19 14:28:49,201:INFO:    plotly-resampler: Not installed
2025-02-19 14:28:49,201:INFO:             kaleido: 0.2.1
2025-02-19 14:28:49,201:INFO:           schemdraw: 0.15
2025-02-19 14:28:49,201:INFO:         statsmodels: 0.14.0
2025-02-19 14:28:49,201:INFO:              sktime: 0.26.0
2025-02-19 14:28:49,201:INFO:               tbats: 1.1.3
2025-02-19 14:28:49,201:INFO:            pmdarima: 2.0.4
2025-02-19 14:28:49,201:INFO:              psutil: 5.9.0
2025-02-19 14:28:49,201:INFO:          markupsafe: 2.1.3
2025-02-19 14:28:49,201:INFO:             pickle5: Not installed
2025-02-19 14:28:49,205:INFO:         cloudpickle: 2.2.1
2025-02-19 14:28:49,205:INFO:         deprecation: 2.1.0
2025-02-19 14:28:49,205:INFO:              xxhash: 3.5.0
2025-02-19 14:28:49,205:INFO:           wurlitzer: Not installed
2025-02-19 14:28:49,205:INFO:PyCaret optional dependencies:
2025-02-19 14:28:49,245:INFO:                shap: Not installed
2025-02-19 14:28:49,245:INFO:           interpret: Not installed
2025-02-19 14:28:49,245:INFO:                umap: Not installed
2025-02-19 14:28:49,245:INFO:     ydata_profiling: Not installed
2025-02-19 14:28:49,245:INFO:  explainerdashboard: Not installed
2025-02-19 14:28:49,245:INFO:             autoviz: Not installed
2025-02-19 14:28:49,245:INFO:           fairlearn: Not installed
2025-02-19 14:28:49,245:INFO:          deepchecks: Not installed
2025-02-19 14:28:49,245:INFO:             xgboost: Not installed
2025-02-19 14:28:49,245:INFO:            catboost: Not installed
2025-02-19 14:28:49,245:INFO:              kmodes: Not installed
2025-02-19 14:28:49,245:INFO:             mlxtend: Not installed
2025-02-19 14:28:49,245:INFO:       statsforecast: Not installed
2025-02-19 14:28:49,245:INFO:        tune_sklearn: Not installed
2025-02-19 14:28:49,245:INFO:                 ray: Not installed
2025-02-19 14:28:49,245:INFO:            hyperopt: Not installed
2025-02-19 14:28:49,245:INFO:              optuna: Not installed
2025-02-19 14:28:49,245:INFO:               skopt: Not installed
2025-02-19 14:28:49,245:INFO:              mlflow: Not installed
2025-02-19 14:28:49,245:INFO:              gradio: Not installed
2025-02-19 14:28:49,245:INFO:             fastapi: Not installed
2025-02-19 14:28:49,249:INFO:             uvicorn: Not installed
2025-02-19 14:28:49,249:INFO:              m2cgen: Not installed
2025-02-19 14:28:49,249:INFO:           evidently: Not installed
2025-02-19 14:28:49,249:INFO:               fugue: Not installed
2025-02-19 14:28:49,249:INFO:           streamlit: 1.30.0
2025-02-19 14:28:49,249:INFO:             prophet: Not installed
2025-02-19 14:28:49,249:INFO:None
2025-02-19 14:28:49,249:INFO:Set up data.
2025-02-19 14:28:49,262:INFO:Set up folding strategy.
2025-02-19 14:28:49,262:INFO:Set up train/test split.
2025-02-19 14:28:49,335:INFO:Set up index.
2025-02-19 14:28:49,335:INFO:Assigning column types.
2025-02-19 14:28:49,343:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-19 14:28:49,343:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,355:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,367:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,439:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:49,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:49,519:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,527:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,535:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,672:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:49,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:49,676:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-19 14:28:49,684:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,692:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,761:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,804:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:49,804:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:49,808:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,812:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,869:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,910:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,910:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:49,910:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:49,910:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-19 14:28:49,919:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-19 14:28:49,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,017:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,025:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,085:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,129:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,129:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-19 14:28:50,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,238:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,300:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,344:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-19 14:28:50,410:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,451:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,451:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,513:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-19 14:28:50,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,555:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-19 14:28:50,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,769:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:50,793:INFO:Preparing preprocessing pipeline...
2025-02-19 14:28:50,793:INFO:Set up simple imputation.
2025-02-19 14:28:50,797:INFO:Set up encoding of categorical features.
2025-02-19 14:28:50,797:INFO:Set up removing multicollinearity.
2025-02-19 14:28:50,797:INFO:Set up removing outliers.
2025-02-19 14:28:50,990:INFO:Finished creating preprocessing pipeline.
2025-02-19 14:28:51,015:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Mihai\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleIm...
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=6568)))])
2025-02-19 14:28:51,015:INFO:Creating final display dataframe.
2025-02-19 14:28:52,083:INFO:Setup _display_container:                     Description             Value
0                    Session id              6568
1                        Target               cnt
2                   Target type        Regression
3           Original data shape         (480, 13)
4        Transformed data shape         (463, 12)
5   Transformed train set shape         (319, 12)
6    Transformed test set shape         (144, 12)
7              Numeric features                11
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15     Remove multicollinearity              True
16  Multicollinearity threshold               0.9
17              Remove outliers              True
18           Outliers threshold              0.05
19               Fold Generator             KFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              521d
2025-02-19 14:28:52,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:52,217:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:52,324:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:52,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-19 14:28:52,324:INFO:setup() successfully completed in 5.0s...............
2025-02-19 14:28:52,324:INFO:Initializing compare_models()
2025-02-19 14:28:52,324:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-02-19 14:28:52,324:INFO:Checking exceptions
2025-02-19 14:28:52,328:INFO:Preparing display monitor
2025-02-19 14:28:52,360:INFO:Initializing Linear Regression
2025-02-19 14:28:52,360:INFO:Total runtime is 0.0 minutes
2025-02-19 14:28:52,361:INFO:SubProcess create_model() called ==================================
2025-02-19 14:28:52,361:INFO:Initializing create_model()
2025-02-19 14:28:52,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:28:52,361:INFO:Checking exceptions
2025-02-19 14:28:52,361:INFO:Importing libraries
2025-02-19 14:28:52,361:INFO:Copying training dataset
2025-02-19 14:28:52,367:INFO:Defining folds
2025-02-19 14:28:52,367:INFO:Declaring metric variables
2025-02-19 14:28:52,371:INFO:Importing untrained model
2025-02-19 14:28:52,375:INFO:Linear Regression Imported successfully
2025-02-19 14:28:52,387:INFO:Starting cross validation
2025-02-19 14:28:52,411:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:01,794:INFO:Calculating mean and std
2025-02-19 14:29:01,794:INFO:Creating metrics dataframe
2025-02-19 14:29:01,798:INFO:Uploading results into container
2025-02-19 14:29:01,798:INFO:Uploading model into container now
2025-02-19 14:29:01,798:INFO:_master_model_container: 1
2025-02-19 14:29:01,798:INFO:_display_container: 2
2025-02-19 14:29:01,802:INFO:LinearRegression(n_jobs=-1)
2025-02-19 14:29:01,802:INFO:create_model() successfully completed......................................
2025-02-19 14:29:01,989:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:01,989:INFO:Creating metrics dataframe
2025-02-19 14:29:01,997:INFO:Initializing Lasso Regression
2025-02-19 14:29:01,997:INFO:Total runtime is 0.1606268843015035 minutes
2025-02-19 14:29:02,001:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:02,001:INFO:Initializing create_model()
2025-02-19 14:29:02,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:02,001:INFO:Checking exceptions
2025-02-19 14:29:02,004:INFO:Importing libraries
2025-02-19 14:29:02,004:INFO:Copying training dataset
2025-02-19 14:29:02,005:INFO:Defining folds
2025-02-19 14:29:02,009:INFO:Declaring metric variables
2025-02-19 14:29:02,014:INFO:Importing untrained model
2025-02-19 14:29:02,022:INFO:Lasso Regression Imported successfully
2025-02-19 14:29:02,033:INFO:Starting cross validation
2025-02-19 14:29:02,045:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:02,637:INFO:Calculating mean and std
2025-02-19 14:29:02,639:INFO:Creating metrics dataframe
2025-02-19 14:29:02,640:INFO:Uploading results into container
2025-02-19 14:29:02,642:INFO:Uploading model into container now
2025-02-19 14:29:02,642:INFO:_master_model_container: 2
2025-02-19 14:29:02,642:INFO:_display_container: 2
2025-02-19 14:29:02,642:INFO:Lasso(random_state=6568)
2025-02-19 14:29:02,642:INFO:create_model() successfully completed......................................
2025-02-19 14:29:02,806:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:02,806:INFO:Creating metrics dataframe
2025-02-19 14:29:02,818:INFO:Initializing Ridge Regression
2025-02-19 14:29:02,818:INFO:Total runtime is 0.17431397835413615 minutes
2025-02-19 14:29:02,822:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:02,822:INFO:Initializing create_model()
2025-02-19 14:29:02,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:02,822:INFO:Checking exceptions
2025-02-19 14:29:02,822:INFO:Importing libraries
2025-02-19 14:29:02,822:INFO:Copying training dataset
2025-02-19 14:29:02,830:INFO:Defining folds
2025-02-19 14:29:02,830:INFO:Declaring metric variables
2025-02-19 14:29:02,834:INFO:Importing untrained model
2025-02-19 14:29:02,838:INFO:Ridge Regression Imported successfully
2025-02-19 14:29:02,846:INFO:Starting cross validation
2025-02-19 14:29:02,854:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:03,444:INFO:Calculating mean and std
2025-02-19 14:29:03,448:INFO:Creating metrics dataframe
2025-02-19 14:29:03,448:INFO:Uploading results into container
2025-02-19 14:29:03,448:INFO:Uploading model into container now
2025-02-19 14:29:03,448:INFO:_master_model_container: 3
2025-02-19 14:29:03,448:INFO:_display_container: 2
2025-02-19 14:29:03,452:INFO:Ridge(random_state=6568)
2025-02-19 14:29:03,452:INFO:create_model() successfully completed......................................
2025-02-19 14:29:03,620:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:03,620:INFO:Creating metrics dataframe
2025-02-19 14:29:03,632:INFO:Initializing Elastic Net
2025-02-19 14:29:03,632:INFO:Total runtime is 0.1878698984781901 minutes
2025-02-19 14:29:03,636:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:03,636:INFO:Initializing create_model()
2025-02-19 14:29:03,636:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:03,636:INFO:Checking exceptions
2025-02-19 14:29:03,636:INFO:Importing libraries
2025-02-19 14:29:03,636:INFO:Copying training dataset
2025-02-19 14:29:03,644:INFO:Defining folds
2025-02-19 14:29:03,644:INFO:Declaring metric variables
2025-02-19 14:29:03,648:INFO:Importing untrained model
2025-02-19 14:29:03,652:INFO:Elastic Net Imported successfully
2025-02-19 14:29:03,660:INFO:Starting cross validation
2025-02-19 14:29:03,673:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:04,240:INFO:Calculating mean and std
2025-02-19 14:29:04,240:INFO:Creating metrics dataframe
2025-02-19 14:29:04,244:INFO:Uploading results into container
2025-02-19 14:29:04,244:INFO:Uploading model into container now
2025-02-19 14:29:04,244:INFO:_master_model_container: 4
2025-02-19 14:29:04,244:INFO:_display_container: 2
2025-02-19 14:29:04,244:INFO:ElasticNet(random_state=6568)
2025-02-19 14:29:04,244:INFO:create_model() successfully completed......................................
2025-02-19 14:29:04,428:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:04,428:INFO:Creating metrics dataframe
2025-02-19 14:29:04,438:INFO:Initializing Least Angle Regression
2025-02-19 14:29:04,438:INFO:Total runtime is 0.20130563974380494 minutes
2025-02-19 14:29:04,442:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:04,442:INFO:Initializing create_model()
2025-02-19 14:29:04,442:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:04,442:INFO:Checking exceptions
2025-02-19 14:29:04,442:INFO:Importing libraries
2025-02-19 14:29:04,442:INFO:Copying training dataset
2025-02-19 14:29:04,454:INFO:Defining folds
2025-02-19 14:29:04,454:INFO:Declaring metric variables
2025-02-19 14:29:04,462:INFO:Importing untrained model
2025-02-19 14:29:04,471:INFO:Least Angle Regression Imported successfully
2025-02-19 14:29:04,487:INFO:Starting cross validation
2025-02-19 14:29:04,503:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:05,103:INFO:Calculating mean and std
2025-02-19 14:29:05,103:INFO:Creating metrics dataframe
2025-02-19 14:29:05,107:INFO:Uploading results into container
2025-02-19 14:29:05,107:INFO:Uploading model into container now
2025-02-19 14:29:05,107:INFO:_master_model_container: 5
2025-02-19 14:29:05,107:INFO:_display_container: 2
2025-02-19 14:29:05,107:INFO:Lars(random_state=6568)
2025-02-19 14:29:05,107:INFO:create_model() successfully completed......................................
2025-02-19 14:29:05,289:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:05,289:INFO:Creating metrics dataframe
2025-02-19 14:29:05,297:INFO:Initializing Lasso Least Angle Regression
2025-02-19 14:29:05,297:INFO:Total runtime is 0.21562865972518921 minutes
2025-02-19 14:29:05,301:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:05,301:INFO:Initializing create_model()
2025-02-19 14:29:05,305:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:05,305:INFO:Checking exceptions
2025-02-19 14:29:05,305:INFO:Importing libraries
2025-02-19 14:29:05,305:INFO:Copying training dataset
2025-02-19 14:29:05,310:INFO:Defining folds
2025-02-19 14:29:05,310:INFO:Declaring metric variables
2025-02-19 14:29:05,319:INFO:Importing untrained model
2025-02-19 14:29:05,323:INFO:Lasso Least Angle Regression Imported successfully
2025-02-19 14:29:05,331:INFO:Starting cross validation
2025-02-19 14:29:05,339:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:05,891:INFO:Calculating mean and std
2025-02-19 14:29:05,891:INFO:Creating metrics dataframe
2025-02-19 14:29:05,895:INFO:Uploading results into container
2025-02-19 14:29:05,895:INFO:Uploading model into container now
2025-02-19 14:29:05,895:INFO:_master_model_container: 6
2025-02-19 14:29:05,895:INFO:_display_container: 2
2025-02-19 14:29:05,895:INFO:LassoLars(random_state=6568)
2025-02-19 14:29:05,895:INFO:create_model() successfully completed......................................
2025-02-19 14:29:06,081:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:06,081:INFO:Creating metrics dataframe
2025-02-19 14:29:06,089:INFO:Initializing Orthogonal Matching Pursuit
2025-02-19 14:29:06,089:INFO:Total runtime is 0.22882356643676757 minutes
2025-02-19 14:29:06,093:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:06,093:INFO:Initializing create_model()
2025-02-19 14:29:06,093:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:06,093:INFO:Checking exceptions
2025-02-19 14:29:06,093:INFO:Importing libraries
2025-02-19 14:29:06,093:INFO:Copying training dataset
2025-02-19 14:29:06,097:INFO:Defining folds
2025-02-19 14:29:06,101:INFO:Declaring metric variables
2025-02-19 14:29:06,101:INFO:Importing untrained model
2025-02-19 14:29:06,109:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-19 14:29:06,117:INFO:Starting cross validation
2025-02-19 14:29:06,133:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:06,718:INFO:Calculating mean and std
2025-02-19 14:29:06,722:INFO:Creating metrics dataframe
2025-02-19 14:29:06,722:INFO:Uploading results into container
2025-02-19 14:29:06,722:INFO:Uploading model into container now
2025-02-19 14:29:06,722:INFO:_master_model_container: 7
2025-02-19 14:29:06,722:INFO:_display_container: 2
2025-02-19 14:29:06,726:INFO:OrthogonalMatchingPursuit()
2025-02-19 14:29:06,726:INFO:create_model() successfully completed......................................
2025-02-19 14:29:06,910:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:06,910:INFO:Creating metrics dataframe
2025-02-19 14:29:06,918:INFO:Initializing Bayesian Ridge
2025-02-19 14:29:06,918:INFO:Total runtime is 0.24263329108556111 minutes
2025-02-19 14:29:06,922:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:06,922:INFO:Initializing create_model()
2025-02-19 14:29:06,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:06,922:INFO:Checking exceptions
2025-02-19 14:29:06,922:INFO:Importing libraries
2025-02-19 14:29:06,922:INFO:Copying training dataset
2025-02-19 14:29:06,931:INFO:Defining folds
2025-02-19 14:29:06,931:INFO:Declaring metric variables
2025-02-19 14:29:06,939:INFO:Importing untrained model
2025-02-19 14:29:06,943:INFO:Bayesian Ridge Imported successfully
2025-02-19 14:29:06,959:INFO:Starting cross validation
2025-02-19 14:29:06,975:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:07,601:INFO:Calculating mean and std
2025-02-19 14:29:07,601:INFO:Creating metrics dataframe
2025-02-19 14:29:07,605:INFO:Uploading results into container
2025-02-19 14:29:07,605:INFO:Uploading model into container now
2025-02-19 14:29:07,605:INFO:_master_model_container: 8
2025-02-19 14:29:07,605:INFO:_display_container: 2
2025-02-19 14:29:07,605:INFO:BayesianRidge()
2025-02-19 14:29:07,605:INFO:create_model() successfully completed......................................
2025-02-19 14:29:07,796:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:07,796:INFO:Creating metrics dataframe
2025-02-19 14:29:07,804:INFO:Initializing Passive Aggressive Regressor
2025-02-19 14:29:07,804:INFO:Total runtime is 0.25741305748621623 minutes
2025-02-19 14:29:07,808:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:07,808:INFO:Initializing create_model()
2025-02-19 14:29:07,808:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:07,808:INFO:Checking exceptions
2025-02-19 14:29:07,808:INFO:Importing libraries
2025-02-19 14:29:07,808:INFO:Copying training dataset
2025-02-19 14:29:07,821:INFO:Defining folds
2025-02-19 14:29:07,821:INFO:Declaring metric variables
2025-02-19 14:29:07,829:INFO:Importing untrained model
2025-02-19 14:29:07,833:INFO:Passive Aggressive Regressor Imported successfully
2025-02-19 14:29:07,849:INFO:Starting cross validation
2025-02-19 14:29:07,869:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:08,445:INFO:Calculating mean and std
2025-02-19 14:29:08,445:INFO:Creating metrics dataframe
2025-02-19 14:29:08,449:INFO:Uploading results into container
2025-02-19 14:29:08,449:INFO:Uploading model into container now
2025-02-19 14:29:08,449:INFO:_master_model_container: 9
2025-02-19 14:29:08,449:INFO:_display_container: 2
2025-02-19 14:29:08,449:INFO:PassiveAggressiveRegressor(random_state=6568)
2025-02-19 14:29:08,449:INFO:create_model() successfully completed......................................
2025-02-19 14:29:08,622:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:08,622:INFO:Creating metrics dataframe
2025-02-19 14:29:08,634:INFO:Initializing Huber Regressor
2025-02-19 14:29:08,634:INFO:Total runtime is 0.27123506863911945 minutes
2025-02-19 14:29:08,638:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:08,638:INFO:Initializing create_model()
2025-02-19 14:29:08,638:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:08,638:INFO:Checking exceptions
2025-02-19 14:29:08,638:INFO:Importing libraries
2025-02-19 14:29:08,639:INFO:Copying training dataset
2025-02-19 14:29:08,643:INFO:Defining folds
2025-02-19 14:29:08,643:INFO:Declaring metric variables
2025-02-19 14:29:08,647:INFO:Importing untrained model
2025-02-19 14:29:08,656:INFO:Huber Regressor Imported successfully
2025-02-19 14:29:08,671:INFO:Starting cross validation
2025-02-19 14:29:08,685:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:09,033:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 14:29:09,033:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 14:29:09,033:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 14:29:09,033:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 14:29:09,045:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 14:29:09,049:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 14:29:09,259:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 14:29:09,263:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 14:29:09,279:INFO:Calculating mean and std
2025-02-19 14:29:09,283:INFO:Creating metrics dataframe
2025-02-19 14:29:09,283:INFO:Uploading results into container
2025-02-19 14:29:09,283:INFO:Uploading model into container now
2025-02-19 14:29:09,288:INFO:_master_model_container: 10
2025-02-19 14:29:09,288:INFO:_display_container: 2
2025-02-19 14:29:09,288:INFO:HuberRegressor()
2025-02-19 14:29:09,288:INFO:create_model() successfully completed......................................
2025-02-19 14:29:09,457:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:09,457:INFO:Creating metrics dataframe
2025-02-19 14:29:09,465:INFO:Initializing K Neighbors Regressor
2025-02-19 14:29:09,465:INFO:Total runtime is 0.2850964784622192 minutes
2025-02-19 14:29:09,469:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:09,473:INFO:Initializing create_model()
2025-02-19 14:29:09,474:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:09,474:INFO:Checking exceptions
2025-02-19 14:29:09,474:INFO:Importing libraries
2025-02-19 14:29:09,474:INFO:Copying training dataset
2025-02-19 14:29:09,478:INFO:Defining folds
2025-02-19 14:29:09,478:INFO:Declaring metric variables
2025-02-19 14:29:09,486:INFO:Importing untrained model
2025-02-19 14:29:09,495:INFO:K Neighbors Regressor Imported successfully
2025-02-19 14:29:09,511:INFO:Starting cross validation
2025-02-19 14:29:09,527:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:10,138:INFO:Calculating mean and std
2025-02-19 14:29:10,142:INFO:Creating metrics dataframe
2025-02-19 14:29:10,142:INFO:Uploading results into container
2025-02-19 14:29:10,147:INFO:Uploading model into container now
2025-02-19 14:29:10,147:INFO:_master_model_container: 11
2025-02-19 14:29:10,147:INFO:_display_container: 2
2025-02-19 14:29:10,147:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-19 14:29:10,147:INFO:create_model() successfully completed......................................
2025-02-19 14:29:10,359:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:10,363:INFO:Creating metrics dataframe
2025-02-19 14:29:10,371:INFO:Initializing Decision Tree Regressor
2025-02-19 14:29:10,371:INFO:Total runtime is 0.30018820365269977 minutes
2025-02-19 14:29:10,375:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:10,375:INFO:Initializing create_model()
2025-02-19 14:29:10,375:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:10,375:INFO:Checking exceptions
2025-02-19 14:29:10,375:INFO:Importing libraries
2025-02-19 14:29:10,379:INFO:Copying training dataset
2025-02-19 14:29:10,383:INFO:Defining folds
2025-02-19 14:29:10,383:INFO:Declaring metric variables
2025-02-19 14:29:10,395:INFO:Importing untrained model
2025-02-19 14:29:10,403:INFO:Decision Tree Regressor Imported successfully
2025-02-19 14:29:10,416:INFO:Starting cross validation
2025-02-19 14:29:10,428:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:10,981:INFO:Calculating mean and std
2025-02-19 14:29:10,981:INFO:Creating metrics dataframe
2025-02-19 14:29:10,985:INFO:Uploading results into container
2025-02-19 14:29:10,985:INFO:Uploading model into container now
2025-02-19 14:29:10,985:INFO:_master_model_container: 12
2025-02-19 14:29:10,985:INFO:_display_container: 2
2025-02-19 14:29:10,985:INFO:DecisionTreeRegressor(random_state=6568)
2025-02-19 14:29:10,985:INFO:create_model() successfully completed......................................
2025-02-19 14:29:11,164:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:11,164:INFO:Creating metrics dataframe
2025-02-19 14:29:11,176:INFO:Initializing Random Forest Regressor
2025-02-19 14:29:11,176:INFO:Total runtime is 0.31360938549041745 minutes
2025-02-19 14:29:11,180:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:11,180:INFO:Initializing create_model()
2025-02-19 14:29:11,180:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:11,180:INFO:Checking exceptions
2025-02-19 14:29:11,180:INFO:Importing libraries
2025-02-19 14:29:11,180:INFO:Copying training dataset
2025-02-19 14:29:11,189:INFO:Defining folds
2025-02-19 14:29:11,189:INFO:Declaring metric variables
2025-02-19 14:29:11,197:INFO:Importing untrained model
2025-02-19 14:29:11,205:INFO:Random Forest Regressor Imported successfully
2025-02-19 14:29:11,213:INFO:Starting cross validation
2025-02-19 14:29:11,229:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:12,322:INFO:Calculating mean and std
2025-02-19 14:29:12,322:INFO:Creating metrics dataframe
2025-02-19 14:29:12,326:INFO:Uploading results into container
2025-02-19 14:29:12,326:INFO:Uploading model into container now
2025-02-19 14:29:12,326:INFO:_master_model_container: 13
2025-02-19 14:29:12,326:INFO:_display_container: 2
2025-02-19 14:29:12,326:INFO:RandomForestRegressor(n_jobs=-1, random_state=6568)
2025-02-19 14:29:12,326:INFO:create_model() successfully completed......................................
2025-02-19 14:29:12,523:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:12,523:INFO:Creating metrics dataframe
2025-02-19 14:29:12,535:INFO:Initializing Extra Trees Regressor
2025-02-19 14:29:12,535:INFO:Total runtime is 0.33625419934590656 minutes
2025-02-19 14:29:12,543:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:12,543:INFO:Initializing create_model()
2025-02-19 14:29:12,547:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:12,547:INFO:Checking exceptions
2025-02-19 14:29:12,547:INFO:Importing libraries
2025-02-19 14:29:12,547:INFO:Copying training dataset
2025-02-19 14:29:12,559:INFO:Defining folds
2025-02-19 14:29:12,559:INFO:Declaring metric variables
2025-02-19 14:29:12,568:INFO:Importing untrained model
2025-02-19 14:29:12,580:INFO:Extra Trees Regressor Imported successfully
2025-02-19 14:29:12,593:INFO:Starting cross validation
2025-02-19 14:29:12,606:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:13,620:INFO:Calculating mean and std
2025-02-19 14:29:13,620:INFO:Creating metrics dataframe
2025-02-19 14:29:13,625:INFO:Uploading results into container
2025-02-19 14:29:13,629:INFO:Uploading model into container now
2025-02-19 14:29:13,629:INFO:_master_model_container: 14
2025-02-19 14:29:13,629:INFO:_display_container: 2
2025-02-19 14:29:13,629:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6568)
2025-02-19 14:29:13,629:INFO:create_model() successfully completed......................................
2025-02-19 14:29:13,827:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:13,827:INFO:Creating metrics dataframe
2025-02-19 14:29:13,839:INFO:Initializing AdaBoost Regressor
2025-02-19 14:29:13,839:INFO:Total runtime is 0.3579870502154032 minutes
2025-02-19 14:29:13,843:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:13,843:INFO:Initializing create_model()
2025-02-19 14:29:13,843:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:13,843:INFO:Checking exceptions
2025-02-19 14:29:13,843:INFO:Importing libraries
2025-02-19 14:29:13,843:INFO:Copying training dataset
2025-02-19 14:29:13,847:INFO:Defining folds
2025-02-19 14:29:13,847:INFO:Declaring metric variables
2025-02-19 14:29:13,851:INFO:Importing untrained model
2025-02-19 14:29:13,855:INFO:AdaBoost Regressor Imported successfully
2025-02-19 14:29:13,868:INFO:Starting cross validation
2025-02-19 14:29:13,885:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:14,656:INFO:Calculating mean and std
2025-02-19 14:29:14,660:INFO:Creating metrics dataframe
2025-02-19 14:29:14,660:INFO:Uploading results into container
2025-02-19 14:29:14,660:INFO:Uploading model into container now
2025-02-19 14:29:14,660:INFO:_master_model_container: 15
2025-02-19 14:29:14,660:INFO:_display_container: 2
2025-02-19 14:29:14,660:INFO:AdaBoostRegressor(random_state=6568)
2025-02-19 14:29:14,660:INFO:create_model() successfully completed......................................
2025-02-19 14:29:14,847:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:14,851:INFO:Creating metrics dataframe
2025-02-19 14:29:14,859:INFO:Initializing Gradient Boosting Regressor
2025-02-19 14:29:14,859:INFO:Total runtime is 0.37498557567596436 minutes
2025-02-19 14:29:14,863:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:14,863:INFO:Initializing create_model()
2025-02-19 14:29:14,863:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:14,867:INFO:Checking exceptions
2025-02-19 14:29:14,867:INFO:Importing libraries
2025-02-19 14:29:14,867:INFO:Copying training dataset
2025-02-19 14:29:14,871:INFO:Defining folds
2025-02-19 14:29:14,871:INFO:Declaring metric variables
2025-02-19 14:29:14,875:INFO:Importing untrained model
2025-02-19 14:29:14,879:INFO:Gradient Boosting Regressor Imported successfully
2025-02-19 14:29:14,887:INFO:Starting cross validation
2025-02-19 14:29:14,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:15,721:INFO:Calculating mean and std
2025-02-19 14:29:15,721:INFO:Creating metrics dataframe
2025-02-19 14:29:15,725:INFO:Uploading results into container
2025-02-19 14:29:15,725:INFO:Uploading model into container now
2025-02-19 14:29:15,725:INFO:_master_model_container: 16
2025-02-19 14:29:15,729:INFO:_display_container: 2
2025-02-19 14:29:15,729:INFO:GradientBoostingRegressor(random_state=6568)
2025-02-19 14:29:15,729:INFO:create_model() successfully completed......................................
2025-02-19 14:29:15,932:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:15,932:INFO:Creating metrics dataframe
2025-02-19 14:29:15,945:INFO:Initializing Light Gradient Boosting Machine
2025-02-19 14:29:15,945:INFO:Total runtime is 0.39309646288553873 minutes
2025-02-19 14:29:15,950:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:15,950:INFO:Initializing create_model()
2025-02-19 14:29:15,950:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:15,950:INFO:Checking exceptions
2025-02-19 14:29:15,950:INFO:Importing libraries
2025-02-19 14:29:15,950:INFO:Copying training dataset
2025-02-19 14:29:15,958:INFO:Defining folds
2025-02-19 14:29:15,958:INFO:Declaring metric variables
2025-02-19 14:29:15,964:INFO:Importing untrained model
2025-02-19 14:29:15,969:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-19 14:29:15,978:INFO:Starting cross validation
2025-02-19 14:29:15,992:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:16,922:INFO:Calculating mean and std
2025-02-19 14:29:16,922:INFO:Creating metrics dataframe
2025-02-19 14:29:16,927:INFO:Uploading results into container
2025-02-19 14:29:16,927:INFO:Uploading model into container now
2025-02-19 14:29:16,927:INFO:_master_model_container: 17
2025-02-19 14:29:16,927:INFO:_display_container: 2
2025-02-19 14:29:16,927:INFO:LGBMRegressor(n_jobs=-1, random_state=6568)
2025-02-19 14:29:16,927:INFO:create_model() successfully completed......................................
2025-02-19 14:29:17,157:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:17,157:INFO:Creating metrics dataframe
2025-02-19 14:29:17,182:INFO:Initializing Dummy Regressor
2025-02-19 14:29:17,182:INFO:Total runtime is 0.4137062311172485 minutes
2025-02-19 14:29:17,191:INFO:SubProcess create_model() called ==================================
2025-02-19 14:29:17,191:INFO:Initializing create_model()
2025-02-19 14:29:17,191:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001920AF2D410>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:17,191:INFO:Checking exceptions
2025-02-19 14:29:17,191:INFO:Importing libraries
2025-02-19 14:29:17,191:INFO:Copying training dataset
2025-02-19 14:29:17,204:INFO:Defining folds
2025-02-19 14:29:17,204:INFO:Declaring metric variables
2025-02-19 14:29:17,214:INFO:Importing untrained model
2025-02-19 14:29:17,223:INFO:Dummy Regressor Imported successfully
2025-02-19 14:29:17,240:INFO:Starting cross validation
2025-02-19 14:29:17,265:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 14:29:17,877:INFO:Calculating mean and std
2025-02-19 14:29:17,877:INFO:Creating metrics dataframe
2025-02-19 14:29:17,877:INFO:Uploading results into container
2025-02-19 14:29:17,877:INFO:Uploading model into container now
2025-02-19 14:29:17,877:INFO:_master_model_container: 18
2025-02-19 14:29:17,877:INFO:_display_container: 2
2025-02-19 14:29:17,881:INFO:DummyRegressor()
2025-02-19 14:29:17,881:INFO:create_model() successfully completed......................................
2025-02-19 14:29:18,072:INFO:SubProcess create_model() end ==================================
2025-02-19 14:29:18,072:INFO:Creating metrics dataframe
2025-02-19 14:29:18,131:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-02-19 14:29:18,151:INFO:Initializing create_model()
2025-02-19 14:29:18,151:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6568), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:18,151:INFO:Checking exceptions
2025-02-19 14:29:18,155:INFO:Importing libraries
2025-02-19 14:29:18,155:INFO:Copying training dataset
2025-02-19 14:29:18,163:INFO:Defining folds
2025-02-19 14:29:18,163:INFO:Declaring metric variables
2025-02-19 14:29:18,167:INFO:Importing untrained model
2025-02-19 14:29:18,167:INFO:Declaring custom model
2025-02-19 14:29:18,167:INFO:Extra Trees Regressor Imported successfully
2025-02-19 14:29:18,184:INFO:Cross validation set to False
2025-02-19 14:29:18,184:INFO:Fitting Model
2025-02-19 14:29:18,437:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6568)
2025-02-19 14:29:18,437:INFO:create_model() successfully completed......................................
2025-02-19 14:29:18,641:INFO:_master_model_container: 18
2025-02-19 14:29:18,641:INFO:_display_container: 2
2025-02-19 14:29:18,645:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6568)
2025-02-19 14:29:18,645:INFO:compare_models() successfully completed......................................
2025-02-19 14:29:18,645:INFO:Initializing finalize_model()
2025-02-19 14:29:18,645:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6568), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-19 14:29:18,645:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6568)
2025-02-19 14:29:18,649:INFO:Initializing create_model()
2025-02-19 14:29:18,649:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6568), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 14:29:18,649:INFO:Checking exceptions
2025-02-19 14:29:18,649:INFO:Importing libraries
2025-02-19 14:29:18,649:INFO:Copying training dataset
2025-02-19 14:29:18,649:INFO:Defining folds
2025-02-19 14:29:18,649:INFO:Declaring metric variables
2025-02-19 14:29:18,649:INFO:Importing untrained model
2025-02-19 14:29:18,649:INFO:Declaring custom model
2025-02-19 14:29:18,653:INFO:Extra Trees Regressor Imported successfully
2025-02-19 14:29:18,661:INFO:Cross validation set to False
2025-02-19 14:29:18,661:INFO:Fitting Model
2025-02-19 14:29:18,920:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=6568))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6568))])
2025-02-19 14:29:18,920:INFO:create_model() successfully completed......................................
2025-02-19 14:29:19,087:INFO:_master_model_container: 18
2025-02-19 14:29:19,087:INFO:_display_container: 2
2025-02-19 14:29:19,099:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=6568))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6568))])
2025-02-19 14:29:19,099:INFO:finalize_model() successfully completed......................................
2025-02-19 14:29:19,290:INFO:Initializing predict_model()
2025-02-19 14:29:19,290:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=6568))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6568))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192034A0F40>)
2025-02-19 14:29:19,290:INFO:Checking exceptions
2025-02-19 14:29:19,290:INFO:Preloading libraries
2025-02-19 14:29:19,294:INFO:Set up data.
2025-02-19 14:29:19,300:INFO:Set up index.
2025-02-19 14:29:19,383:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-19 20:28:26,072:INFO:Initializing create_model()
2025-02-19 20:28:26,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:26,076:INFO:Checking exceptions
2025-02-19 20:28:26,123:INFO:Importing libraries
2025-02-19 20:28:26,123:INFO:Copying training dataset
2025-02-19 20:28:26,135:INFO:Defining folds
2025-02-19 20:28:26,135:INFO:Declaring metric variables
2025-02-19 20:28:26,140:INFO:Importing untrained model
2025-02-19 20:28:26,145:INFO:Linear Regression Imported successfully
2025-02-19 20:28:26,152:INFO:Starting cross validation
2025-02-19 20:28:26,174:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:47,428:INFO:Calculating mean and std
2025-02-19 20:28:47,428:INFO:Creating metrics dataframe
2025-02-19 20:28:47,434:INFO:Finalizing model
2025-02-19 20:28:47,603:INFO:Uploading results into container
2025-02-19 20:28:47,603:INFO:Uploading model into container now
2025-02-19 20:28:47,619:INFO:_master_model_container: 19
2025-02-19 20:28:47,619:INFO:_display_container: 4
2025-02-19 20:28:47,620:INFO:LinearRegression(n_jobs=-1)
2025-02-19 20:28:47,620:INFO:create_model() successfully completed......................................
2025-02-19 20:28:48,027:INFO:Initializing predict_model()
2025-02-19 20:28:48,027:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019211E27880>)
2025-02-19 20:28:48,027:INFO:Checking exceptions
2025-02-19 20:28:48,027:INFO:Preloading libraries
2025-02-19 20:28:48,029:INFO:Set up data.
2025-02-19 20:28:48,034:INFO:Set up index.
2025-02-19 20:28:48,119:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-19 20:28:48,284:INFO:Initializing create_model()
2025-02-19 20:28:48,284:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:48,284:INFO:Checking exceptions
2025-02-19 20:28:48,315:INFO:Importing libraries
2025-02-19 20:28:48,317:INFO:Copying training dataset
2025-02-19 20:28:48,323:INFO:Defining folds
2025-02-19 20:28:48,324:INFO:Declaring metric variables
2025-02-19 20:28:48,327:INFO:Importing untrained model
2025-02-19 20:28:48,330:INFO:K Neighbors Regressor Imported successfully
2025-02-19 20:28:48,336:INFO:Starting cross validation
2025-02-19 20:28:48,347:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:48,842:INFO:Calculating mean and std
2025-02-19 20:28:48,842:INFO:Creating metrics dataframe
2025-02-19 20:28:48,846:INFO:Finalizing model
2025-02-19 20:28:48,974:INFO:Uploading results into container
2025-02-19 20:28:48,975:INFO:Uploading model into container now
2025-02-19 20:28:48,986:INFO:_master_model_container: 20
2025-02-19 20:28:48,987:INFO:_display_container: 6
2025-02-19 20:28:48,987:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-19 20:28:48,987:INFO:create_model() successfully completed......................................
2025-02-19 20:28:49,162:INFO:Initializing predict_model()
2025-02-19 20:28:49,163:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=KNeighborsRegressor(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000192125BB420>)
2025-02-19 20:28:49,163:INFO:Checking exceptions
2025-02-19 20:28:49,163:INFO:Preloading libraries
2025-02-19 20:28:49,165:INFO:Set up data.
2025-02-19 20:28:49,170:INFO:Set up index.
2025-02-19 20:28:49,248:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-19 20:28:49,421:INFO:Initializing compare_models()
2025-02-19 20:28:49,421:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-02-19 20:28:49,421:INFO:Checking exceptions
2025-02-19 20:28:49,422:INFO:Preparing display monitor
2025-02-19 20:28:49,446:INFO:Initializing Linear Regression
2025-02-19 20:28:49,447:INFO:Total runtime is 1.663366953531901e-05 minutes
2025-02-19 20:28:49,450:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:49,450:INFO:Initializing create_model()
2025-02-19 20:28:49,450:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:49,450:INFO:Checking exceptions
2025-02-19 20:28:49,450:INFO:Importing libraries
2025-02-19 20:28:49,451:INFO:Copying training dataset
2025-02-19 20:28:49,457:INFO:Defining folds
2025-02-19 20:28:49,457:INFO:Declaring metric variables
2025-02-19 20:28:49,462:INFO:Importing untrained model
2025-02-19 20:28:49,465:INFO:Linear Regression Imported successfully
2025-02-19 20:28:49,473:INFO:Starting cross validation
2025-02-19 20:28:49,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:49,952:INFO:Calculating mean and std
2025-02-19 20:28:49,952:INFO:Creating metrics dataframe
2025-02-19 20:28:49,954:INFO:Uploading results into container
2025-02-19 20:28:49,954:INFO:Uploading model into container now
2025-02-19 20:28:49,955:INFO:_master_model_container: 21
2025-02-19 20:28:49,955:INFO:_display_container: 8
2025-02-19 20:28:49,955:INFO:LinearRegression(n_jobs=-1)
2025-02-19 20:28:49,955:INFO:create_model() successfully completed......................................
2025-02-19 20:28:50,104:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:50,104:INFO:Creating metrics dataframe
2025-02-19 20:28:50,109:INFO:Initializing Lasso Regression
2025-02-19 20:28:50,109:INFO:Total runtime is 0.011050021648406983 minutes
2025-02-19 20:28:50,112:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:50,112:INFO:Initializing create_model()
2025-02-19 20:28:50,112:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:50,112:INFO:Checking exceptions
2025-02-19 20:28:50,112:INFO:Importing libraries
2025-02-19 20:28:50,112:INFO:Copying training dataset
2025-02-19 20:28:50,117:INFO:Defining folds
2025-02-19 20:28:50,117:INFO:Declaring metric variables
2025-02-19 20:28:50,121:INFO:Importing untrained model
2025-02-19 20:28:50,126:INFO:Lasso Regression Imported successfully
2025-02-19 20:28:50,135:INFO:Starting cross validation
2025-02-19 20:28:50,143:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:50,632:INFO:Calculating mean and std
2025-02-19 20:28:50,633:INFO:Creating metrics dataframe
2025-02-19 20:28:50,635:INFO:Uploading results into container
2025-02-19 20:28:50,636:INFO:Uploading model into container now
2025-02-19 20:28:50,636:INFO:_master_model_container: 22
2025-02-19 20:28:50,636:INFO:_display_container: 8
2025-02-19 20:28:50,637:INFO:Lasso(random_state=6568)
2025-02-19 20:28:50,637:INFO:create_model() successfully completed......................................
2025-02-19 20:28:50,804:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:50,804:INFO:Creating metrics dataframe
2025-02-19 20:28:50,810:INFO:Initializing Ridge Regression
2025-02-19 20:28:50,810:INFO:Total runtime is 0.02273330291112264 minutes
2025-02-19 20:28:50,814:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:50,815:INFO:Initializing create_model()
2025-02-19 20:28:50,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:50,815:INFO:Checking exceptions
2025-02-19 20:28:50,815:INFO:Importing libraries
2025-02-19 20:28:50,815:INFO:Copying training dataset
2025-02-19 20:28:50,820:INFO:Defining folds
2025-02-19 20:28:50,820:INFO:Declaring metric variables
2025-02-19 20:28:50,824:INFO:Importing untrained model
2025-02-19 20:28:50,836:INFO:Ridge Regression Imported successfully
2025-02-19 20:28:50,852:INFO:Starting cross validation
2025-02-19 20:28:50,863:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:51,360:INFO:Calculating mean and std
2025-02-19 20:28:51,361:INFO:Creating metrics dataframe
2025-02-19 20:28:51,362:INFO:Uploading results into container
2025-02-19 20:28:51,363:INFO:Uploading model into container now
2025-02-19 20:28:51,363:INFO:_master_model_container: 23
2025-02-19 20:28:51,363:INFO:_display_container: 8
2025-02-19 20:28:51,364:INFO:Ridge(random_state=6568)
2025-02-19 20:28:51,364:INFO:create_model() successfully completed......................................
2025-02-19 20:28:51,529:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:51,530:INFO:Creating metrics dataframe
2025-02-19 20:28:51,536:INFO:Initializing Elastic Net
2025-02-19 20:28:51,536:INFO:Total runtime is 0.034833292166392006 minutes
2025-02-19 20:28:51,539:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:51,539:INFO:Initializing create_model()
2025-02-19 20:28:51,539:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:51,540:INFO:Checking exceptions
2025-02-19 20:28:51,540:INFO:Importing libraries
2025-02-19 20:28:51,540:INFO:Copying training dataset
2025-02-19 20:28:51,545:INFO:Defining folds
2025-02-19 20:28:51,545:INFO:Declaring metric variables
2025-02-19 20:28:51,549:INFO:Importing untrained model
2025-02-19 20:28:51,555:INFO:Elastic Net Imported successfully
2025-02-19 20:28:51,562:INFO:Starting cross validation
2025-02-19 20:28:51,571:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:52,079:INFO:Calculating mean and std
2025-02-19 20:28:52,081:INFO:Creating metrics dataframe
2025-02-19 20:28:52,083:INFO:Uploading results into container
2025-02-19 20:28:52,083:INFO:Uploading model into container now
2025-02-19 20:28:52,083:INFO:_master_model_container: 24
2025-02-19 20:28:52,083:INFO:_display_container: 8
2025-02-19 20:28:52,084:INFO:ElasticNet(random_state=6568)
2025-02-19 20:28:52,084:INFO:create_model() successfully completed......................................
2025-02-19 20:28:52,249:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:52,249:INFO:Creating metrics dataframe
2025-02-19 20:28:52,256:INFO:Initializing Least Angle Regression
2025-02-19 20:28:52,256:INFO:Total runtime is 0.046833336353302 minutes
2025-02-19 20:28:52,259:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:52,259:INFO:Initializing create_model()
2025-02-19 20:28:52,259:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:52,259:INFO:Checking exceptions
2025-02-19 20:28:52,260:INFO:Importing libraries
2025-02-19 20:28:52,260:INFO:Copying training dataset
2025-02-19 20:28:52,264:INFO:Defining folds
2025-02-19 20:28:52,264:INFO:Declaring metric variables
2025-02-19 20:28:52,267:INFO:Importing untrained model
2025-02-19 20:28:52,274:INFO:Least Angle Regression Imported successfully
2025-02-19 20:28:52,280:INFO:Starting cross validation
2025-02-19 20:28:52,290:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:52,767:INFO:Calculating mean and std
2025-02-19 20:28:52,768:INFO:Creating metrics dataframe
2025-02-19 20:28:52,769:INFO:Uploading results into container
2025-02-19 20:28:52,770:INFO:Uploading model into container now
2025-02-19 20:28:52,770:INFO:_master_model_container: 25
2025-02-19 20:28:52,770:INFO:_display_container: 8
2025-02-19 20:28:52,770:INFO:Lars(random_state=6568)
2025-02-19 20:28:52,771:INFO:create_model() successfully completed......................................
2025-02-19 20:28:52,929:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:52,930:INFO:Creating metrics dataframe
2025-02-19 20:28:52,936:INFO:Initializing Lasso Least Angle Regression
2025-02-19 20:28:52,936:INFO:Total runtime is 0.0581669807434082 minutes
2025-02-19 20:28:52,940:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:52,940:INFO:Initializing create_model()
2025-02-19 20:28:52,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:52,940:INFO:Checking exceptions
2025-02-19 20:28:52,940:INFO:Importing libraries
2025-02-19 20:28:52,940:INFO:Copying training dataset
2025-02-19 20:28:52,946:INFO:Defining folds
2025-02-19 20:28:52,946:INFO:Declaring metric variables
2025-02-19 20:28:52,950:INFO:Importing untrained model
2025-02-19 20:28:52,954:INFO:Lasso Least Angle Regression Imported successfully
2025-02-19 20:28:52,960:INFO:Starting cross validation
2025-02-19 20:28:52,971:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:53,490:INFO:Calculating mean and std
2025-02-19 20:28:53,491:INFO:Creating metrics dataframe
2025-02-19 20:28:53,494:INFO:Uploading results into container
2025-02-19 20:28:53,495:INFO:Uploading model into container now
2025-02-19 20:28:53,495:INFO:_master_model_container: 26
2025-02-19 20:28:53,495:INFO:_display_container: 8
2025-02-19 20:28:53,495:INFO:LassoLars(random_state=6568)
2025-02-19 20:28:53,495:INFO:create_model() successfully completed......................................
2025-02-19 20:28:53,642:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:53,642:INFO:Creating metrics dataframe
2025-02-19 20:28:53,649:INFO:Initializing Orthogonal Matching Pursuit
2025-02-19 20:28:53,649:INFO:Total runtime is 0.07004995346069336 minutes
2025-02-19 20:28:53,652:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:53,653:INFO:Initializing create_model()
2025-02-19 20:28:53,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:53,653:INFO:Checking exceptions
2025-02-19 20:28:53,653:INFO:Importing libraries
2025-02-19 20:28:53,653:INFO:Copying training dataset
2025-02-19 20:28:53,659:INFO:Defining folds
2025-02-19 20:28:53,659:INFO:Declaring metric variables
2025-02-19 20:28:53,663:INFO:Importing untrained model
2025-02-19 20:28:53,666:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-19 20:28:53,672:INFO:Starting cross validation
2025-02-19 20:28:53,693:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:54,213:INFO:Calculating mean and std
2025-02-19 20:28:54,214:INFO:Creating metrics dataframe
2025-02-19 20:28:54,215:INFO:Uploading results into container
2025-02-19 20:28:54,216:INFO:Uploading model into container now
2025-02-19 20:28:54,216:INFO:_master_model_container: 27
2025-02-19 20:28:54,216:INFO:_display_container: 8
2025-02-19 20:28:54,216:INFO:OrthogonalMatchingPursuit()
2025-02-19 20:28:54,216:INFO:create_model() successfully completed......................................
2025-02-19 20:28:54,366:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:54,366:INFO:Creating metrics dataframe
2025-02-19 20:28:54,374:INFO:Initializing Bayesian Ridge
2025-02-19 20:28:54,374:INFO:Total runtime is 0.08213341236114502 minutes
2025-02-19 20:28:54,378:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:54,378:INFO:Initializing create_model()
2025-02-19 20:28:54,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:54,379:INFO:Checking exceptions
2025-02-19 20:28:54,379:INFO:Importing libraries
2025-02-19 20:28:54,379:INFO:Copying training dataset
2025-02-19 20:28:54,382:INFO:Defining folds
2025-02-19 20:28:54,383:INFO:Declaring metric variables
2025-02-19 20:28:54,386:INFO:Importing untrained model
2025-02-19 20:28:54,389:INFO:Bayesian Ridge Imported successfully
2025-02-19 20:28:54,398:INFO:Starting cross validation
2025-02-19 20:28:54,407:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:54,861:INFO:Calculating mean and std
2025-02-19 20:28:54,862:INFO:Creating metrics dataframe
2025-02-19 20:28:54,865:INFO:Uploading results into container
2025-02-19 20:28:54,865:INFO:Uploading model into container now
2025-02-19 20:28:54,865:INFO:_master_model_container: 28
2025-02-19 20:28:54,865:INFO:_display_container: 8
2025-02-19 20:28:54,866:INFO:BayesianRidge()
2025-02-19 20:28:54,866:INFO:create_model() successfully completed......................................
2025-02-19 20:28:55,009:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:55,009:INFO:Creating metrics dataframe
2025-02-19 20:28:55,016:INFO:Initializing Passive Aggressive Regressor
2025-02-19 20:28:55,016:INFO:Total runtime is 0.09283345143000285 minutes
2025-02-19 20:28:55,020:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:55,020:INFO:Initializing create_model()
2025-02-19 20:28:55,020:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:55,020:INFO:Checking exceptions
2025-02-19 20:28:55,020:INFO:Importing libraries
2025-02-19 20:28:55,020:INFO:Copying training dataset
2025-02-19 20:28:55,024:INFO:Defining folds
2025-02-19 20:28:55,024:INFO:Declaring metric variables
2025-02-19 20:28:55,028:INFO:Importing untrained model
2025-02-19 20:28:55,034:INFO:Passive Aggressive Regressor Imported successfully
2025-02-19 20:28:55,040:INFO:Starting cross validation
2025-02-19 20:28:55,050:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:55,498:INFO:Calculating mean and std
2025-02-19 20:28:55,499:INFO:Creating metrics dataframe
2025-02-19 20:28:55,500:INFO:Uploading results into container
2025-02-19 20:28:55,501:INFO:Uploading model into container now
2025-02-19 20:28:55,501:INFO:_master_model_container: 29
2025-02-19 20:28:55,501:INFO:_display_container: 8
2025-02-19 20:28:55,501:INFO:PassiveAggressiveRegressor(random_state=6568)
2025-02-19 20:28:55,501:INFO:create_model() successfully completed......................................
2025-02-19 20:28:55,646:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:55,646:INFO:Creating metrics dataframe
2025-02-19 20:28:55,654:INFO:Initializing Huber Regressor
2025-02-19 20:28:55,654:INFO:Total runtime is 0.10346666177113852 minutes
2025-02-19 20:28:55,657:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:55,657:INFO:Initializing create_model()
2025-02-19 20:28:55,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:55,657:INFO:Checking exceptions
2025-02-19 20:28:55,657:INFO:Importing libraries
2025-02-19 20:28:55,657:INFO:Copying training dataset
2025-02-19 20:28:55,661:INFO:Defining folds
2025-02-19 20:28:55,662:INFO:Declaring metric variables
2025-02-19 20:28:55,665:INFO:Importing untrained model
2025-02-19 20:28:55,671:INFO:Huber Regressor Imported successfully
2025-02-19 20:28:55,690:INFO:Starting cross validation
2025-02-19 20:28:55,699:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:56,007:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 20:28:56,007:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 20:28:56,008:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 20:28:56,019:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 20:28:56,187:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 20:28:56,189:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-19 20:28:56,203:INFO:Calculating mean and std
2025-02-19 20:28:56,204:INFO:Creating metrics dataframe
2025-02-19 20:28:56,205:INFO:Uploading results into container
2025-02-19 20:28:56,206:INFO:Uploading model into container now
2025-02-19 20:28:56,206:INFO:_master_model_container: 30
2025-02-19 20:28:56,206:INFO:_display_container: 8
2025-02-19 20:28:56,206:INFO:HuberRegressor()
2025-02-19 20:28:56,206:INFO:create_model() successfully completed......................................
2025-02-19 20:28:56,354:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:56,354:INFO:Creating metrics dataframe
2025-02-19 20:28:56,363:INFO:Initializing K Neighbors Regressor
2025-02-19 20:28:56,363:INFO:Total runtime is 0.11529337565104167 minutes
2025-02-19 20:28:56,367:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:56,367:INFO:Initializing create_model()
2025-02-19 20:28:56,368:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:56,368:INFO:Checking exceptions
2025-02-19 20:28:56,368:INFO:Importing libraries
2025-02-19 20:28:56,368:INFO:Copying training dataset
2025-02-19 20:28:56,373:INFO:Defining folds
2025-02-19 20:28:56,374:INFO:Declaring metric variables
2025-02-19 20:28:56,378:INFO:Importing untrained model
2025-02-19 20:28:56,381:INFO:K Neighbors Regressor Imported successfully
2025-02-19 20:28:56,388:INFO:Starting cross validation
2025-02-19 20:28:56,397:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:56,907:INFO:Calculating mean and std
2025-02-19 20:28:56,907:INFO:Creating metrics dataframe
2025-02-19 20:28:56,909:INFO:Uploading results into container
2025-02-19 20:28:56,909:INFO:Uploading model into container now
2025-02-19 20:28:56,910:INFO:_master_model_container: 31
2025-02-19 20:28:56,910:INFO:_display_container: 8
2025-02-19 20:28:56,910:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-19 20:28:56,910:INFO:create_model() successfully completed......................................
2025-02-19 20:28:57,060:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:57,060:INFO:Creating metrics dataframe
2025-02-19 20:28:57,067:INFO:Initializing Decision Tree Regressor
2025-02-19 20:28:57,067:INFO:Total runtime is 0.1270264506340027 minutes
2025-02-19 20:28:57,071:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:57,071:INFO:Initializing create_model()
2025-02-19 20:28:57,071:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:57,071:INFO:Checking exceptions
2025-02-19 20:28:57,071:INFO:Importing libraries
2025-02-19 20:28:57,072:INFO:Copying training dataset
2025-02-19 20:28:57,076:INFO:Defining folds
2025-02-19 20:28:57,076:INFO:Declaring metric variables
2025-02-19 20:28:57,079:INFO:Importing untrained model
2025-02-19 20:28:57,085:INFO:Decision Tree Regressor Imported successfully
2025-02-19 20:28:57,091:INFO:Starting cross validation
2025-02-19 20:28:57,099:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:57,549:INFO:Calculating mean and std
2025-02-19 20:28:57,550:INFO:Creating metrics dataframe
2025-02-19 20:28:57,552:INFO:Uploading results into container
2025-02-19 20:28:57,553:INFO:Uploading model into container now
2025-02-19 20:28:57,553:INFO:_master_model_container: 32
2025-02-19 20:28:57,553:INFO:_display_container: 8
2025-02-19 20:28:57,554:INFO:DecisionTreeRegressor(random_state=6568)
2025-02-19 20:28:57,554:INFO:create_model() successfully completed......................................
2025-02-19 20:28:57,730:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:57,730:INFO:Creating metrics dataframe
2025-02-19 20:28:57,739:INFO:Initializing Random Forest Regressor
2025-02-19 20:28:57,739:INFO:Total runtime is 0.13822645743687947 minutes
2025-02-19 20:28:57,742:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:57,742:INFO:Initializing create_model()
2025-02-19 20:28:57,742:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:57,742:INFO:Checking exceptions
2025-02-19 20:28:57,743:INFO:Importing libraries
2025-02-19 20:28:57,743:INFO:Copying training dataset
2025-02-19 20:28:57,746:INFO:Defining folds
2025-02-19 20:28:57,747:INFO:Declaring metric variables
2025-02-19 20:28:57,750:INFO:Importing untrained model
2025-02-19 20:28:57,753:INFO:Random Forest Regressor Imported successfully
2025-02-19 20:28:57,759:INFO:Starting cross validation
2025-02-19 20:28:57,773:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:58,651:INFO:Calculating mean and std
2025-02-19 20:28:58,652:INFO:Creating metrics dataframe
2025-02-19 20:28:58,654:INFO:Uploading results into container
2025-02-19 20:28:58,654:INFO:Uploading model into container now
2025-02-19 20:28:58,655:INFO:_master_model_container: 33
2025-02-19 20:28:58,655:INFO:_display_container: 8
2025-02-19 20:28:58,655:INFO:RandomForestRegressor(n_jobs=-1, random_state=6568)
2025-02-19 20:28:58,655:INFO:create_model() successfully completed......................................
2025-02-19 20:28:58,809:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:58,809:INFO:Creating metrics dataframe
2025-02-19 20:28:58,818:INFO:Initializing Extra Trees Regressor
2025-02-19 20:28:58,818:INFO:Total runtime is 0.15621030728022256 minutes
2025-02-19 20:28:58,821:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:58,821:INFO:Initializing create_model()
2025-02-19 20:28:58,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:58,821:INFO:Checking exceptions
2025-02-19 20:28:58,821:INFO:Importing libraries
2025-02-19 20:28:58,821:INFO:Copying training dataset
2025-02-19 20:28:58,827:INFO:Defining folds
2025-02-19 20:28:58,827:INFO:Declaring metric variables
2025-02-19 20:28:58,830:INFO:Importing untrained model
2025-02-19 20:28:58,833:INFO:Extra Trees Regressor Imported successfully
2025-02-19 20:28:58,842:INFO:Starting cross validation
2025-02-19 20:28:58,849:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:28:59,628:INFO:Calculating mean and std
2025-02-19 20:28:59,629:INFO:Creating metrics dataframe
2025-02-19 20:28:59,630:INFO:Uploading results into container
2025-02-19 20:28:59,631:INFO:Uploading model into container now
2025-02-19 20:28:59,631:INFO:_master_model_container: 34
2025-02-19 20:28:59,631:INFO:_display_container: 8
2025-02-19 20:28:59,632:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6568)
2025-02-19 20:28:59,632:INFO:create_model() successfully completed......................................
2025-02-19 20:28:59,775:INFO:SubProcess create_model() end ==================================
2025-02-19 20:28:59,775:INFO:Creating metrics dataframe
2025-02-19 20:28:59,783:INFO:Initializing AdaBoost Regressor
2025-02-19 20:28:59,783:INFO:Total runtime is 0.17229317426681517 minutes
2025-02-19 20:28:59,786:INFO:SubProcess create_model() called ==================================
2025-02-19 20:28:59,786:INFO:Initializing create_model()
2025-02-19 20:28:59,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:28:59,786:INFO:Checking exceptions
2025-02-19 20:28:59,786:INFO:Importing libraries
2025-02-19 20:28:59,786:INFO:Copying training dataset
2025-02-19 20:28:59,792:INFO:Defining folds
2025-02-19 20:28:59,792:INFO:Declaring metric variables
2025-02-19 20:28:59,797:INFO:Importing untrained model
2025-02-19 20:28:59,803:INFO:AdaBoost Regressor Imported successfully
2025-02-19 20:28:59,809:INFO:Starting cross validation
2025-02-19 20:28:59,817:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:29:00,465:INFO:Calculating mean and std
2025-02-19 20:29:00,466:INFO:Creating metrics dataframe
2025-02-19 20:29:00,468:INFO:Uploading results into container
2025-02-19 20:29:00,469:INFO:Uploading model into container now
2025-02-19 20:29:00,470:INFO:_master_model_container: 35
2025-02-19 20:29:00,470:INFO:_display_container: 8
2025-02-19 20:29:00,470:INFO:AdaBoostRegressor(random_state=6568)
2025-02-19 20:29:00,470:INFO:create_model() successfully completed......................................
2025-02-19 20:29:00,641:INFO:SubProcess create_model() end ==================================
2025-02-19 20:29:00,641:INFO:Creating metrics dataframe
2025-02-19 20:29:00,650:INFO:Initializing Gradient Boosting Regressor
2025-02-19 20:29:00,650:INFO:Total runtime is 0.18674471378326415 minutes
2025-02-19 20:29:00,653:INFO:SubProcess create_model() called ==================================
2025-02-19 20:29:00,653:INFO:Initializing create_model()
2025-02-19 20:29:00,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:29:00,654:INFO:Checking exceptions
2025-02-19 20:29:00,654:INFO:Importing libraries
2025-02-19 20:29:00,654:INFO:Copying training dataset
2025-02-19 20:29:00,658:INFO:Defining folds
2025-02-19 20:29:00,658:INFO:Declaring metric variables
2025-02-19 20:29:00,662:INFO:Importing untrained model
2025-02-19 20:29:00,665:INFO:Gradient Boosting Regressor Imported successfully
2025-02-19 20:29:00,672:INFO:Starting cross validation
2025-02-19 20:29:00,682:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:29:01,327:INFO:Calculating mean and std
2025-02-19 20:29:01,328:INFO:Creating metrics dataframe
2025-02-19 20:29:01,330:INFO:Uploading results into container
2025-02-19 20:29:01,330:INFO:Uploading model into container now
2025-02-19 20:29:01,330:INFO:_master_model_container: 36
2025-02-19 20:29:01,330:INFO:_display_container: 8
2025-02-19 20:29:01,331:INFO:GradientBoostingRegressor(random_state=6568)
2025-02-19 20:29:01,331:INFO:create_model() successfully completed......................................
2025-02-19 20:29:01,474:INFO:SubProcess create_model() end ==================================
2025-02-19 20:29:01,474:INFO:Creating metrics dataframe
2025-02-19 20:29:01,483:INFO:Initializing Light Gradient Boosting Machine
2025-02-19 20:29:01,483:INFO:Total runtime is 0.20062647263209024 minutes
2025-02-19 20:29:01,486:INFO:SubProcess create_model() called ==================================
2025-02-19 20:29:01,486:INFO:Initializing create_model()
2025-02-19 20:29:01,486:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:29:01,487:INFO:Checking exceptions
2025-02-19 20:29:01,487:INFO:Importing libraries
2025-02-19 20:29:01,487:INFO:Copying training dataset
2025-02-19 20:29:01,492:INFO:Defining folds
2025-02-19 20:29:01,493:INFO:Declaring metric variables
2025-02-19 20:29:01,497:INFO:Importing untrained model
2025-02-19 20:29:01,501:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-19 20:29:01,512:INFO:Starting cross validation
2025-02-19 20:29:01,521:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:29:02,208:INFO:Calculating mean and std
2025-02-19 20:29:02,209:INFO:Creating metrics dataframe
2025-02-19 20:29:02,211:INFO:Uploading results into container
2025-02-19 20:29:02,212:INFO:Uploading model into container now
2025-02-19 20:29:02,212:INFO:_master_model_container: 37
2025-02-19 20:29:02,212:INFO:_display_container: 8
2025-02-19 20:29:02,213:INFO:LGBMRegressor(n_jobs=-1, random_state=6568)
2025-02-19 20:29:02,213:INFO:create_model() successfully completed......................................
2025-02-19 20:29:02,390:INFO:SubProcess create_model() end ==================================
2025-02-19 20:29:02,390:INFO:Creating metrics dataframe
2025-02-19 20:29:02,398:INFO:Initializing Dummy Regressor
2025-02-19 20:29:02,398:INFO:Total runtime is 0.2158650199572245 minutes
2025-02-19 20:29:02,400:INFO:SubProcess create_model() called ==================================
2025-02-19 20:29:02,400:INFO:Initializing create_model()
2025-02-19 20:29:02,400:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000192122B0D90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:29:02,401:INFO:Checking exceptions
2025-02-19 20:29:02,401:INFO:Importing libraries
2025-02-19 20:29:02,401:INFO:Copying training dataset
2025-02-19 20:29:02,406:INFO:Defining folds
2025-02-19 20:29:02,406:INFO:Declaring metric variables
2025-02-19 20:29:02,409:INFO:Importing untrained model
2025-02-19 20:29:02,412:INFO:Dummy Regressor Imported successfully
2025-02-19 20:29:02,420:INFO:Starting cross validation
2025-02-19 20:29:02,432:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 20:29:02,883:INFO:Calculating mean and std
2025-02-19 20:29:02,884:INFO:Creating metrics dataframe
2025-02-19 20:29:02,885:INFO:Uploading results into container
2025-02-19 20:29:02,886:INFO:Uploading model into container now
2025-02-19 20:29:02,886:INFO:_master_model_container: 38
2025-02-19 20:29:02,886:INFO:_display_container: 8
2025-02-19 20:29:02,887:INFO:DummyRegressor()
2025-02-19 20:29:02,887:INFO:create_model() successfully completed......................................
2025-02-19 20:29:03,028:INFO:SubProcess create_model() end ==================================
2025-02-19 20:29:03,028:INFO:Creating metrics dataframe
2025-02-19 20:29:03,039:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-02-19 20:29:03,046:INFO:Initializing create_model()
2025-02-19 20:29:03,046:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6568), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:29:03,046:INFO:Checking exceptions
2025-02-19 20:29:03,048:INFO:Importing libraries
2025-02-19 20:29:03,048:INFO:Copying training dataset
2025-02-19 20:29:03,051:INFO:Defining folds
2025-02-19 20:29:03,051:INFO:Declaring metric variables
2025-02-19 20:29:03,051:INFO:Importing untrained model
2025-02-19 20:29:03,051:INFO:Declaring custom model
2025-02-19 20:29:03,051:INFO:Extra Trees Regressor Imported successfully
2025-02-19 20:29:03,061:INFO:Cross validation set to False
2025-02-19 20:29:03,061:INFO:Fitting Model
2025-02-19 20:29:03,263:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6568)
2025-02-19 20:29:03,263:INFO:create_model() successfully completed......................................
2025-02-19 20:29:03,433:INFO:_master_model_container: 38
2025-02-19 20:29:03,433:INFO:_display_container: 8
2025-02-19 20:29:03,434:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=6568)
2025-02-19 20:29:03,434:INFO:compare_models() successfully completed......................................
2025-02-19 20:29:03,435:INFO:Initializing finalize_model()
2025-02-19 20:29:03,435:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6568), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-19 20:29:03,435:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=6568)
2025-02-19 20:29:03,439:INFO:Initializing create_model()
2025-02-19 20:29:03,439:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=6568), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 20:29:03,439:INFO:Checking exceptions
2025-02-19 20:29:03,440:INFO:Importing libraries
2025-02-19 20:29:03,440:INFO:Copying training dataset
2025-02-19 20:29:03,441:INFO:Defining folds
2025-02-19 20:29:03,441:INFO:Declaring metric variables
2025-02-19 20:29:03,441:INFO:Importing untrained model
2025-02-19 20:29:03,441:INFO:Declaring custom model
2025-02-19 20:29:03,442:INFO:Extra Trees Regressor Imported successfully
2025-02-19 20:29:03,451:INFO:Cross validation set to False
2025-02-19 20:29:03,451:INFO:Fitting Model
2025-02-19 20:29:03,664:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=6568))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6568))])
2025-02-19 20:29:03,664:INFO:create_model() successfully completed......................................
2025-02-19 20:29:03,815:INFO:_master_model_container: 38
2025-02-19 20:29:03,815:INFO:_display_container: 8
2025-02-19 20:29:03,822:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=6568))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6568))])
2025-02-19 20:29:03,823:INFO:finalize_model() successfully completed......................................
2025-02-19 20:29:03,990:INFO:Initializing predict_model()
2025-02-19 20:29:03,990:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001920FFA0350>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=6568))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=6568))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019212178A40>)
2025-02-19 20:29:03,990:INFO:Checking exceptions
2025-02-19 20:29:03,990:INFO:Preloading libraries
2025-02-19 20:29:03,992:INFO:Set up data.
2025-02-19 20:29:03,997:INFO:Set up index.
2025-02-19 20:29:04,029:WARNING:D:\Ciclul III ASEM\New folder\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-20 17:12:39,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 17:12:39,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 17:12:39,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 17:12:39,526:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-20 17:12:46,462:INFO:PyCaret RegressionExperiment
2025-02-20 17:12:46,462:INFO:Logging name: reg-default-name
2025-02-20 17:12:46,462:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-20 17:12:46,462:INFO:version 3.3.2
2025-02-20 17:12:46,462:INFO:Initializing setup()
2025-02-20 17:12:46,462:INFO:self.USI: 583c
2025-02-20 17:12:46,463:INFO:self._variable_keys: {'gpu_n_jobs_param', 'log_plots_param', 'gpu_param', 'USI', 'exp_id', 'pipeline', 'y', '_available_plots', 'fold_generator', 'transform_target_param', 'logging_param', 'y_train', 'data', 'X_test', 'idx', 'html_param', 'fold_groups_param', 'X_train', '_ml_usecase', 'seed', 'y_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'X', 'exp_name_log', 'memory'}
2025-02-20 17:12:46,463:INFO:Checking environment
2025-02-20 17:12:46,463:INFO:python_version: 3.11.7
2025-02-20 17:12:46,463:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2025-02-20 17:12:46,463:INFO:machine: AMD64
2025-02-20 17:12:46,463:INFO:platform: Windows-10-10.0.19045-SP0
2025-02-20 17:12:46,463:INFO:Memory: svmem(total=14515879936, available=3837259776, percent=73.6, used=10678620160, free=3837259776)
2025-02-20 17:12:46,463:INFO:Physical Core: 4
2025-02-20 17:12:46,463:INFO:Logical Core: 8
2025-02-20 17:12:46,463:INFO:Checking libraries
2025-02-20 17:12:46,463:INFO:System:
2025-02-20 17:12:46,463:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2025-02-20 17:12:46,463:INFO:executable: C:\Users\Mihai\anaconda3\python.exe
2025-02-20 17:12:46,463:INFO:   machine: Windows-10-10.0.19045-SP0
2025-02-20 17:12:46,463:INFO:PyCaret required dependencies:
2025-02-20 17:12:47,676:INFO:                 pip: 23.3.1
2025-02-20 17:12:47,676:INFO:          setuptools: 68.2.2
2025-02-20 17:12:47,676:INFO:             pycaret: 3.3.2
2025-02-20 17:12:47,676:INFO:             IPython: 8.20.0
2025-02-20 17:12:47,676:INFO:          ipywidgets: 7.6.5
2025-02-20 17:12:47,676:INFO:                tqdm: 4.65.0
2025-02-20 17:12:47,676:INFO:               numpy: 1.26.4
2025-02-20 17:12:47,676:INFO:              pandas: 2.1.4
2025-02-20 17:12:47,676:INFO:              jinja2: 3.1.3
2025-02-20 17:12:47,676:INFO:               scipy: 1.11.4
2025-02-20 17:12:47,676:INFO:              joblib: 1.2.0
2025-02-20 17:12:47,676:INFO:             sklearn: 1.4.2
2025-02-20 17:12:47,676:INFO:                pyod: 2.0.3
2025-02-20 17:12:47,677:INFO:            imblearn: 0.13.0
2025-02-20 17:12:47,677:INFO:   category_encoders: 2.7.0
2025-02-20 17:12:47,677:INFO:            lightgbm: 4.6.0
2025-02-20 17:12:47,677:INFO:               numba: 0.59.0
2025-02-20 17:12:47,677:INFO:            requests: 2.31.0
2025-02-20 17:12:47,677:INFO:          matplotlib: 3.7.5
2025-02-20 17:12:47,677:INFO:          scikitplot: 0.3.7
2025-02-20 17:12:47,677:INFO:         yellowbrick: 1.5
2025-02-20 17:12:47,677:INFO:              plotly: 5.24.1
2025-02-20 17:12:47,677:INFO:    plotly-resampler: Not installed
2025-02-20 17:12:47,677:INFO:             kaleido: 0.2.1
2025-02-20 17:12:47,677:INFO:           schemdraw: 0.15
2025-02-20 17:12:47,677:INFO:         statsmodels: 0.14.0
2025-02-20 17:12:47,677:INFO:              sktime: 0.26.0
2025-02-20 17:12:47,677:INFO:               tbats: 1.1.3
2025-02-20 17:12:47,677:INFO:            pmdarima: 2.0.4
2025-02-20 17:12:47,677:INFO:              psutil: 5.9.0
2025-02-20 17:12:47,678:INFO:          markupsafe: 2.1.3
2025-02-20 17:12:47,678:INFO:             pickle5: Not installed
2025-02-20 17:12:47,678:INFO:         cloudpickle: 2.2.1
2025-02-20 17:12:47,678:INFO:         deprecation: 2.1.0
2025-02-20 17:12:47,678:INFO:              xxhash: 3.5.0
2025-02-20 17:12:47,678:INFO:           wurlitzer: Not installed
2025-02-20 17:12:47,678:INFO:PyCaret optional dependencies:
2025-02-20 17:12:47,695:INFO:                shap: Not installed
2025-02-20 17:12:47,695:INFO:           interpret: Not installed
2025-02-20 17:12:47,695:INFO:                umap: Not installed
2025-02-20 17:12:47,695:INFO:     ydata_profiling: Not installed
2025-02-20 17:12:47,695:INFO:  explainerdashboard: Not installed
2025-02-20 17:12:47,695:INFO:             autoviz: Not installed
2025-02-20 17:12:47,695:INFO:           fairlearn: Not installed
2025-02-20 17:12:47,695:INFO:          deepchecks: Not installed
2025-02-20 17:12:47,695:INFO:             xgboost: Not installed
2025-02-20 17:12:47,695:INFO:            catboost: Not installed
2025-02-20 17:12:47,695:INFO:              kmodes: Not installed
2025-02-20 17:12:47,695:INFO:             mlxtend: Not installed
2025-02-20 17:12:47,695:INFO:       statsforecast: Not installed
2025-02-20 17:12:47,695:INFO:        tune_sklearn: Not installed
2025-02-20 17:12:47,695:INFO:                 ray: Not installed
2025-02-20 17:12:47,695:INFO:            hyperopt: Not installed
2025-02-20 17:12:47,695:INFO:              optuna: Not installed
2025-02-20 17:12:47,695:INFO:               skopt: Not installed
2025-02-20 17:12:47,695:INFO:              mlflow: Not installed
2025-02-20 17:12:47,695:INFO:              gradio: Not installed
2025-02-20 17:12:47,695:INFO:             fastapi: Not installed
2025-02-20 17:12:47,695:INFO:             uvicorn: Not installed
2025-02-20 17:12:47,695:INFO:              m2cgen: Not installed
2025-02-20 17:12:47,695:INFO:           evidently: Not installed
2025-02-20 17:12:47,695:INFO:               fugue: Not installed
2025-02-20 17:12:47,695:INFO:           streamlit: 1.30.0
2025-02-20 17:12:47,696:INFO:             prophet: Not installed
2025-02-20 17:12:47,696:INFO:None
2025-02-20 17:12:47,696:INFO:Set up data.
2025-02-20 17:12:47,704:INFO:Set up folding strategy.
2025-02-20 17:12:47,705:INFO:Set up train/test split.
2025-02-20 17:12:47,714:INFO:Set up index.
2025-02-20 17:12:47,715:INFO:Assigning column types.
2025-02-20 17:12:47,719:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 17:12:47,719:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,725:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,730:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,792:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,838:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,839:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:47,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:47,840:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,844:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,848:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,906:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,948:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,948:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:47,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:47,949:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-20 17:12:47,953:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-20 17:12:47,958:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,014:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,056:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,061:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,067:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,120:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,160:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,161:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-20 17:12:48,170:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,223:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,266:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,277:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,328:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,368:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,372:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,373:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-20 17:12:48,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,481:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,646:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,690:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,691:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 17:12:48,754:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,858:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:12:48,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:48,902:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-20 17:12:49,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:49,009:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:49,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:49,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:49,120:INFO:Preparing preprocessing pipeline...
2025-02-20 17:12:49,120:INFO:Set up simple imputation.
2025-02-20 17:12:49,125:INFO:Set up encoding of categorical features.
2025-02-20 17:12:49,125:INFO:Set up removing multicollinearity.
2025-02-20 17:12:49,125:INFO:Set up removing outliers.
2025-02-20 17:12:49,254:INFO:Finished creating preprocessing pipeline.
2025-02-20 17:12:49,267:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Mihai\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleIm...
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=8273)))])
2025-02-20 17:12:49,268:INFO:Creating final display dataframe.
2025-02-20 17:12:50,261:INFO:Setup _display_container:                     Description             Value
0                    Session id              8273
1                        Target               cnt
2                   Target type        Regression
3           Original data shape         (480, 13)
4        Transformed data shape         (463, 12)
5   Transformed train set shape         (319, 12)
6    Transformed test set shape         (144, 12)
7              Numeric features                11
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15     Remove multicollinearity              True
16  Multicollinearity threshold               0.9
17              Remove outliers              True
18           Outliers threshold              0.05
19               Fold Generator             KFold
20                  Fold Number                10
21                     CPU Jobs                -1
22                      Use GPU             False
23               Log Experiment             False
24              Experiment Name  reg-default-name
25                          USI              583c
2025-02-20 17:12:50,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:50,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:50,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:50,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:12:50,525:INFO:setup() successfully completed in 4.07s...............
2025-02-20 17:12:50,526:INFO:Initializing compare_models()
2025-02-20 17:12:50,526:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-02-20 17:12:50,526:INFO:Checking exceptions
2025-02-20 17:12:50,528:INFO:Preparing display monitor
2025-02-20 17:12:50,562:INFO:Initializing Linear Regression
2025-02-20 17:12:50,562:INFO:Total runtime is 0.0 minutes
2025-02-20 17:12:50,567:INFO:SubProcess create_model() called ==================================
2025-02-20 17:12:50,568:INFO:Initializing create_model()
2025-02-20 17:12:50,568:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:12:50,569:INFO:Checking exceptions
2025-02-20 17:12:50,570:INFO:Importing libraries
2025-02-20 17:12:50,570:INFO:Copying training dataset
2025-02-20 17:12:50,579:INFO:Defining folds
2025-02-20 17:12:50,579:INFO:Declaring metric variables
2025-02-20 17:12:50,582:INFO:Importing untrained model
2025-02-20 17:12:50,587:INFO:Linear Regression Imported successfully
2025-02-20 17:12:50,598:INFO:Starting cross validation
2025-02-20 17:12:50,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:01,654:INFO:Calculating mean and std
2025-02-20 17:13:01,655:INFO:Creating metrics dataframe
2025-02-20 17:13:01,658:INFO:Uploading results into container
2025-02-20 17:13:01,659:INFO:Uploading model into container now
2025-02-20 17:13:01,659:INFO:_master_model_container: 1
2025-02-20 17:13:01,659:INFO:_display_container: 2
2025-02-20 17:13:01,660:INFO:LinearRegression(n_jobs=-1)
2025-02-20 17:13:01,660:INFO:create_model() successfully completed......................................
2025-02-20 17:13:01,783:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:01,783:INFO:Creating metrics dataframe
2025-02-20 17:13:01,789:INFO:Initializing Lasso Regression
2025-02-20 17:13:01,789:INFO:Total runtime is 0.18711726665496825 minutes
2025-02-20 17:13:01,792:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:01,792:INFO:Initializing create_model()
2025-02-20 17:13:01,792:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:01,792:INFO:Checking exceptions
2025-02-20 17:13:01,793:INFO:Importing libraries
2025-02-20 17:13:01,793:INFO:Copying training dataset
2025-02-20 17:13:01,799:INFO:Defining folds
2025-02-20 17:13:01,799:INFO:Declaring metric variables
2025-02-20 17:13:01,803:INFO:Importing untrained model
2025-02-20 17:13:01,808:INFO:Lasso Regression Imported successfully
2025-02-20 17:13:01,819:INFO:Starting cross validation
2025-02-20 17:13:01,830:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:02,471:INFO:Calculating mean and std
2025-02-20 17:13:02,473:INFO:Creating metrics dataframe
2025-02-20 17:13:02,475:INFO:Uploading results into container
2025-02-20 17:13:02,475:INFO:Uploading model into container now
2025-02-20 17:13:02,475:INFO:_master_model_container: 2
2025-02-20 17:13:02,476:INFO:_display_container: 2
2025-02-20 17:13:02,476:INFO:Lasso(random_state=8273)
2025-02-20 17:13:02,476:INFO:create_model() successfully completed......................................
2025-02-20 17:13:02,579:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:02,580:INFO:Creating metrics dataframe
2025-02-20 17:13:02,588:INFO:Initializing Ridge Regression
2025-02-20 17:13:02,588:INFO:Total runtime is 0.20043393770853676 minutes
2025-02-20 17:13:02,592:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:02,593:INFO:Initializing create_model()
2025-02-20 17:13:02,593:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:02,593:INFO:Checking exceptions
2025-02-20 17:13:02,593:INFO:Importing libraries
2025-02-20 17:13:02,593:INFO:Copying training dataset
2025-02-20 17:13:02,597:INFO:Defining folds
2025-02-20 17:13:02,597:INFO:Declaring metric variables
2025-02-20 17:13:02,601:INFO:Importing untrained model
2025-02-20 17:13:02,605:INFO:Ridge Regression Imported successfully
2025-02-20 17:13:02,612:INFO:Starting cross validation
2025-02-20 17:13:02,626:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:03,237:INFO:Calculating mean and std
2025-02-20 17:13:03,238:INFO:Creating metrics dataframe
2025-02-20 17:13:03,240:INFO:Uploading results into container
2025-02-20 17:13:03,241:INFO:Uploading model into container now
2025-02-20 17:13:03,242:INFO:_master_model_container: 3
2025-02-20 17:13:03,243:INFO:_display_container: 2
2025-02-20 17:13:03,243:INFO:Ridge(random_state=8273)
2025-02-20 17:13:03,243:INFO:create_model() successfully completed......................................
2025-02-20 17:13:03,365:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:03,365:INFO:Creating metrics dataframe
2025-02-20 17:13:03,375:INFO:Initializing Elastic Net
2025-02-20 17:13:03,376:INFO:Total runtime is 0.21356725295384724 minutes
2025-02-20 17:13:03,379:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:03,379:INFO:Initializing create_model()
2025-02-20 17:13:03,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:03,379:INFO:Checking exceptions
2025-02-20 17:13:03,379:INFO:Importing libraries
2025-02-20 17:13:03,379:INFO:Copying training dataset
2025-02-20 17:13:03,385:INFO:Defining folds
2025-02-20 17:13:03,385:INFO:Declaring metric variables
2025-02-20 17:13:03,388:INFO:Importing untrained model
2025-02-20 17:13:03,394:INFO:Elastic Net Imported successfully
2025-02-20 17:13:03,404:INFO:Starting cross validation
2025-02-20 17:13:03,419:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:04,041:INFO:Calculating mean and std
2025-02-20 17:13:04,042:INFO:Creating metrics dataframe
2025-02-20 17:13:04,045:INFO:Uploading results into container
2025-02-20 17:13:04,045:INFO:Uploading model into container now
2025-02-20 17:13:04,046:INFO:_master_model_container: 4
2025-02-20 17:13:04,046:INFO:_display_container: 2
2025-02-20 17:13:04,046:INFO:ElasticNet(random_state=8273)
2025-02-20 17:13:04,046:INFO:create_model() successfully completed......................................
2025-02-20 17:13:04,137:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:04,137:INFO:Creating metrics dataframe
2025-02-20 17:13:04,146:INFO:Initializing Least Angle Regression
2025-02-20 17:13:04,146:INFO:Total runtime is 0.2264005899429321 minutes
2025-02-20 17:13:04,150:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:04,150:INFO:Initializing create_model()
2025-02-20 17:13:04,150:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:04,151:INFO:Checking exceptions
2025-02-20 17:13:04,151:INFO:Importing libraries
2025-02-20 17:13:04,151:INFO:Copying training dataset
2025-02-20 17:13:04,155:INFO:Defining folds
2025-02-20 17:13:04,155:INFO:Declaring metric variables
2025-02-20 17:13:04,158:INFO:Importing untrained model
2025-02-20 17:13:04,162:INFO:Least Angle Regression Imported successfully
2025-02-20 17:13:04,168:INFO:Starting cross validation
2025-02-20 17:13:04,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:04,839:INFO:Calculating mean and std
2025-02-20 17:13:04,840:INFO:Creating metrics dataframe
2025-02-20 17:13:04,842:INFO:Uploading results into container
2025-02-20 17:13:04,842:INFO:Uploading model into container now
2025-02-20 17:13:04,843:INFO:_master_model_container: 5
2025-02-20 17:13:04,843:INFO:_display_container: 2
2025-02-20 17:13:04,843:INFO:Lars(random_state=8273)
2025-02-20 17:13:04,843:INFO:create_model() successfully completed......................................
2025-02-20 17:13:04,934:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:04,935:INFO:Creating metrics dataframe
2025-02-20 17:13:04,942:INFO:Initializing Lasso Least Angle Regression
2025-02-20 17:13:04,942:INFO:Total runtime is 0.239667268594106 minutes
2025-02-20 17:13:04,945:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:04,946:INFO:Initializing create_model()
2025-02-20 17:13:04,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:04,946:INFO:Checking exceptions
2025-02-20 17:13:04,946:INFO:Importing libraries
2025-02-20 17:13:04,947:INFO:Copying training dataset
2025-02-20 17:13:04,953:INFO:Defining folds
2025-02-20 17:13:04,953:INFO:Declaring metric variables
2025-02-20 17:13:04,957:INFO:Importing untrained model
2025-02-20 17:13:04,963:INFO:Lasso Least Angle Regression Imported successfully
2025-02-20 17:13:04,991:INFO:Starting cross validation
2025-02-20 17:13:05,004:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:05,657:INFO:Calculating mean and std
2025-02-20 17:13:05,658:INFO:Creating metrics dataframe
2025-02-20 17:13:05,661:INFO:Uploading results into container
2025-02-20 17:13:05,662:INFO:Uploading model into container now
2025-02-20 17:13:05,662:INFO:_master_model_container: 6
2025-02-20 17:13:05,662:INFO:_display_container: 2
2025-02-20 17:13:05,663:INFO:LassoLars(random_state=8273)
2025-02-20 17:13:05,663:INFO:create_model() successfully completed......................................
2025-02-20 17:13:05,759:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:05,760:INFO:Creating metrics dataframe
2025-02-20 17:13:05,766:INFO:Initializing Orthogonal Matching Pursuit
2025-02-20 17:13:05,767:INFO:Total runtime is 0.2534006118774414 minutes
2025-02-20 17:13:05,770:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:05,770:INFO:Initializing create_model()
2025-02-20 17:13:05,770:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:05,770:INFO:Checking exceptions
2025-02-20 17:13:05,771:INFO:Importing libraries
2025-02-20 17:13:05,771:INFO:Copying training dataset
2025-02-20 17:13:05,777:INFO:Defining folds
2025-02-20 17:13:05,777:INFO:Declaring metric variables
2025-02-20 17:13:05,781:INFO:Importing untrained model
2025-02-20 17:13:05,786:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-20 17:13:05,796:INFO:Starting cross validation
2025-02-20 17:13:05,806:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:06,398:INFO:Calculating mean and std
2025-02-20 17:13:06,399:INFO:Creating metrics dataframe
2025-02-20 17:13:06,401:INFO:Uploading results into container
2025-02-20 17:13:06,402:INFO:Uploading model into container now
2025-02-20 17:13:06,402:INFO:_master_model_container: 7
2025-02-20 17:13:06,402:INFO:_display_container: 2
2025-02-20 17:13:06,403:INFO:OrthogonalMatchingPursuit()
2025-02-20 17:13:06,403:INFO:create_model() successfully completed......................................
2025-02-20 17:13:06,524:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:06,524:INFO:Creating metrics dataframe
2025-02-20 17:13:06,533:INFO:Initializing Bayesian Ridge
2025-02-20 17:13:06,533:INFO:Total runtime is 0.2661839246749878 minutes
2025-02-20 17:13:06,538:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:06,538:INFO:Initializing create_model()
2025-02-20 17:13:06,538:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:06,538:INFO:Checking exceptions
2025-02-20 17:13:06,538:INFO:Importing libraries
2025-02-20 17:13:06,539:INFO:Copying training dataset
2025-02-20 17:13:06,544:INFO:Defining folds
2025-02-20 17:13:06,545:INFO:Declaring metric variables
2025-02-20 17:13:06,550:INFO:Importing untrained model
2025-02-20 17:13:06,557:INFO:Bayesian Ridge Imported successfully
2025-02-20 17:13:06,564:INFO:Starting cross validation
2025-02-20 17:13:06,577:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:07,338:INFO:Calculating mean and std
2025-02-20 17:13:07,339:INFO:Creating metrics dataframe
2025-02-20 17:13:07,341:INFO:Uploading results into container
2025-02-20 17:13:07,342:INFO:Uploading model into container now
2025-02-20 17:13:07,342:INFO:_master_model_container: 8
2025-02-20 17:13:07,342:INFO:_display_container: 2
2025-02-20 17:13:07,343:INFO:BayesianRidge()
2025-02-20 17:13:07,343:INFO:create_model() successfully completed......................................
2025-02-20 17:13:07,447:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:07,448:INFO:Creating metrics dataframe
2025-02-20 17:13:07,458:INFO:Initializing Passive Aggressive Regressor
2025-02-20 17:13:07,459:INFO:Total runtime is 0.28161728382110596 minutes
2025-02-20 17:13:07,462:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:07,462:INFO:Initializing create_model()
2025-02-20 17:13:07,462:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:07,462:INFO:Checking exceptions
2025-02-20 17:13:07,462:INFO:Importing libraries
2025-02-20 17:13:07,463:INFO:Copying training dataset
2025-02-20 17:13:07,470:INFO:Defining folds
2025-02-20 17:13:07,470:INFO:Declaring metric variables
2025-02-20 17:13:07,475:INFO:Importing untrained model
2025-02-20 17:13:07,478:INFO:Passive Aggressive Regressor Imported successfully
2025-02-20 17:13:07,486:INFO:Starting cross validation
2025-02-20 17:13:07,498:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:08,141:INFO:Calculating mean and std
2025-02-20 17:13:08,142:INFO:Creating metrics dataframe
2025-02-20 17:13:08,144:INFO:Uploading results into container
2025-02-20 17:13:08,145:INFO:Uploading model into container now
2025-02-20 17:13:08,145:INFO:_master_model_container: 9
2025-02-20 17:13:08,145:INFO:_display_container: 2
2025-02-20 17:13:08,146:INFO:PassiveAggressiveRegressor(random_state=8273)
2025-02-20 17:13:08,146:INFO:create_model() successfully completed......................................
2025-02-20 17:13:08,236:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:08,236:INFO:Creating metrics dataframe
2025-02-20 17:13:08,244:INFO:Initializing Huber Regressor
2025-02-20 17:13:08,244:INFO:Total runtime is 0.2947006464004517 minutes
2025-02-20 17:13:08,248:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:08,248:INFO:Initializing create_model()
2025-02-20 17:13:08,248:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:08,248:INFO:Checking exceptions
2025-02-20 17:13:08,248:INFO:Importing libraries
2025-02-20 17:13:08,249:INFO:Copying training dataset
2025-02-20 17:13:08,255:INFO:Defining folds
2025-02-20 17:13:08,255:INFO:Declaring metric variables
2025-02-20 17:13:08,262:INFO:Importing untrained model
2025-02-20 17:13:08,266:INFO:Huber Regressor Imported successfully
2025-02-20 17:13:08,276:INFO:Starting cross validation
2025-02-20 17:13:08,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:08,605:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,625:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,670:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,675:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,700:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,702:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,715:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,724:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,892:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,916:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:08,933:INFO:Calculating mean and std
2025-02-20 17:13:08,934:INFO:Creating metrics dataframe
2025-02-20 17:13:08,936:INFO:Uploading results into container
2025-02-20 17:13:08,937:INFO:Uploading model into container now
2025-02-20 17:13:08,938:INFO:_master_model_container: 10
2025-02-20 17:13:08,938:INFO:_display_container: 2
2025-02-20 17:13:08,938:INFO:HuberRegressor()
2025-02-20 17:13:08,938:INFO:create_model() successfully completed......................................
2025-02-20 17:13:09,031:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:09,031:INFO:Creating metrics dataframe
2025-02-20 17:13:09,040:INFO:Initializing K Neighbors Regressor
2025-02-20 17:13:09,040:INFO:Total runtime is 0.30796725749969484 minutes
2025-02-20 17:13:09,043:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:09,043:INFO:Initializing create_model()
2025-02-20 17:13:09,043:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:09,043:INFO:Checking exceptions
2025-02-20 17:13:09,044:INFO:Importing libraries
2025-02-20 17:13:09,044:INFO:Copying training dataset
2025-02-20 17:13:09,048:INFO:Defining folds
2025-02-20 17:13:09,048:INFO:Declaring metric variables
2025-02-20 17:13:09,052:INFO:Importing untrained model
2025-02-20 17:13:09,058:INFO:K Neighbors Regressor Imported successfully
2025-02-20 17:13:09,064:INFO:Starting cross validation
2025-02-20 17:13:09,076:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:09,707:INFO:Calculating mean and std
2025-02-20 17:13:09,709:INFO:Creating metrics dataframe
2025-02-20 17:13:09,711:INFO:Uploading results into container
2025-02-20 17:13:09,712:INFO:Uploading model into container now
2025-02-20 17:13:09,712:INFO:_master_model_container: 11
2025-02-20 17:13:09,713:INFO:_display_container: 2
2025-02-20 17:13:09,713:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-20 17:13:09,713:INFO:create_model() successfully completed......................................
2025-02-20 17:13:09,845:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:09,845:INFO:Creating metrics dataframe
2025-02-20 17:13:09,855:INFO:Initializing Decision Tree Regressor
2025-02-20 17:13:09,856:INFO:Total runtime is 0.3215506116549174 minutes
2025-02-20 17:13:09,861:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:09,862:INFO:Initializing create_model()
2025-02-20 17:13:09,862:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:09,862:INFO:Checking exceptions
2025-02-20 17:13:09,862:INFO:Importing libraries
2025-02-20 17:13:09,863:INFO:Copying training dataset
2025-02-20 17:13:09,870:INFO:Defining folds
2025-02-20 17:13:09,870:INFO:Declaring metric variables
2025-02-20 17:13:09,873:INFO:Importing untrained model
2025-02-20 17:13:09,879:INFO:Decision Tree Regressor Imported successfully
2025-02-20 17:13:09,888:INFO:Starting cross validation
2025-02-20 17:13:09,902:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:10,535:INFO:Calculating mean and std
2025-02-20 17:13:10,537:INFO:Creating metrics dataframe
2025-02-20 17:13:10,539:INFO:Uploading results into container
2025-02-20 17:13:10,540:INFO:Uploading model into container now
2025-02-20 17:13:10,540:INFO:_master_model_container: 12
2025-02-20 17:13:10,540:INFO:_display_container: 2
2025-02-20 17:13:10,541:INFO:DecisionTreeRegressor(random_state=8273)
2025-02-20 17:13:10,541:INFO:create_model() successfully completed......................................
2025-02-20 17:13:10,655:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:10,655:INFO:Creating metrics dataframe
2025-02-20 17:13:10,664:INFO:Initializing Random Forest Regressor
2025-02-20 17:13:10,664:INFO:Total runtime is 0.33503391345342 minutes
2025-02-20 17:13:10,670:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:10,670:INFO:Initializing create_model()
2025-02-20 17:13:10,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:10,670:INFO:Checking exceptions
2025-02-20 17:13:10,671:INFO:Importing libraries
2025-02-20 17:13:10,671:INFO:Copying training dataset
2025-02-20 17:13:10,676:INFO:Defining folds
2025-02-20 17:13:10,676:INFO:Declaring metric variables
2025-02-20 17:13:10,681:INFO:Importing untrained model
2025-02-20 17:13:10,686:INFO:Random Forest Regressor Imported successfully
2025-02-20 17:13:10,693:INFO:Starting cross validation
2025-02-20 17:13:10,701:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:12,050:INFO:Calculating mean and std
2025-02-20 17:13:12,051:INFO:Creating metrics dataframe
2025-02-20 17:13:12,053:INFO:Uploading results into container
2025-02-20 17:13:12,054:INFO:Uploading model into container now
2025-02-20 17:13:12,055:INFO:_master_model_container: 13
2025-02-20 17:13:12,055:INFO:_display_container: 2
2025-02-20 17:13:12,055:INFO:RandomForestRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:12,055:INFO:create_model() successfully completed......................................
2025-02-20 17:13:12,174:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:12,174:INFO:Creating metrics dataframe
2025-02-20 17:13:12,185:INFO:Initializing Extra Trees Regressor
2025-02-20 17:13:12,185:INFO:Total runtime is 0.36038392782211304 minutes
2025-02-20 17:13:12,188:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:12,189:INFO:Initializing create_model()
2025-02-20 17:13:12,189:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:12,189:INFO:Checking exceptions
2025-02-20 17:13:12,189:INFO:Importing libraries
2025-02-20 17:13:12,189:INFO:Copying training dataset
2025-02-20 17:13:12,195:INFO:Defining folds
2025-02-20 17:13:12,196:INFO:Declaring metric variables
2025-02-20 17:13:12,201:INFO:Importing untrained model
2025-02-20 17:13:12,208:INFO:Extra Trees Regressor Imported successfully
2025-02-20 17:13:12,219:INFO:Starting cross validation
2025-02-20 17:13:12,231:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:13,416:INFO:Calculating mean and std
2025-02-20 17:13:13,419:INFO:Creating metrics dataframe
2025-02-20 17:13:13,422:INFO:Uploading results into container
2025-02-20 17:13:13,423:INFO:Uploading model into container now
2025-02-20 17:13:13,423:INFO:_master_model_container: 14
2025-02-20 17:13:13,423:INFO:_display_container: 2
2025-02-20 17:13:13,424:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:13,424:INFO:create_model() successfully completed......................................
2025-02-20 17:13:13,540:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:13,540:INFO:Creating metrics dataframe
2025-02-20 17:13:13,552:INFO:Initializing AdaBoost Regressor
2025-02-20 17:13:13,553:INFO:Total runtime is 0.38318392435709636 minutes
2025-02-20 17:13:13,556:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:13,556:INFO:Initializing create_model()
2025-02-20 17:13:13,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:13,557:INFO:Checking exceptions
2025-02-20 17:13:13,557:INFO:Importing libraries
2025-02-20 17:13:13,557:INFO:Copying training dataset
2025-02-20 17:13:13,564:INFO:Defining folds
2025-02-20 17:13:13,564:INFO:Declaring metric variables
2025-02-20 17:13:13,570:INFO:Importing untrained model
2025-02-20 17:13:13,577:INFO:AdaBoost Regressor Imported successfully
2025-02-20 17:13:13,593:INFO:Starting cross validation
2025-02-20 17:13:13,607:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:14,557:INFO:Calculating mean and std
2025-02-20 17:13:14,558:INFO:Creating metrics dataframe
2025-02-20 17:13:14,561:INFO:Uploading results into container
2025-02-20 17:13:14,561:INFO:Uploading model into container now
2025-02-20 17:13:14,562:INFO:_master_model_container: 15
2025-02-20 17:13:14,562:INFO:_display_container: 2
2025-02-20 17:13:14,562:INFO:AdaBoostRegressor(random_state=8273)
2025-02-20 17:13:14,562:INFO:create_model() successfully completed......................................
2025-02-20 17:13:14,671:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:14,671:INFO:Creating metrics dataframe
2025-02-20 17:13:14,684:INFO:Initializing Gradient Boosting Regressor
2025-02-20 17:13:14,684:INFO:Total runtime is 0.4020339290301005 minutes
2025-02-20 17:13:14,688:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:14,688:INFO:Initializing create_model()
2025-02-20 17:13:14,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:14,688:INFO:Checking exceptions
2025-02-20 17:13:14,688:INFO:Importing libraries
2025-02-20 17:13:14,689:INFO:Copying training dataset
2025-02-20 17:13:14,693:INFO:Defining folds
2025-02-20 17:13:14,693:INFO:Declaring metric variables
2025-02-20 17:13:14,698:INFO:Importing untrained model
2025-02-20 17:13:14,704:INFO:Gradient Boosting Regressor Imported successfully
2025-02-20 17:13:14,713:INFO:Starting cross validation
2025-02-20 17:13:14,730:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:15,649:INFO:Calculating mean and std
2025-02-20 17:13:15,650:INFO:Creating metrics dataframe
2025-02-20 17:13:15,653:INFO:Uploading results into container
2025-02-20 17:13:15,654:INFO:Uploading model into container now
2025-02-20 17:13:15,654:INFO:_master_model_container: 16
2025-02-20 17:13:15,654:INFO:_display_container: 2
2025-02-20 17:13:15,655:INFO:GradientBoostingRegressor(random_state=8273)
2025-02-20 17:13:15,655:INFO:create_model() successfully completed......................................
2025-02-20 17:13:15,776:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:15,776:INFO:Creating metrics dataframe
2025-02-20 17:13:15,787:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 17:13:15,787:INFO:Total runtime is 0.42041971286137897 minutes
2025-02-20 17:13:15,790:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:15,790:INFO:Initializing create_model()
2025-02-20 17:13:15,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:15,791:INFO:Checking exceptions
2025-02-20 17:13:15,791:INFO:Importing libraries
2025-02-20 17:13:15,791:INFO:Copying training dataset
2025-02-20 17:13:15,795:INFO:Defining folds
2025-02-20 17:13:15,795:INFO:Declaring metric variables
2025-02-20 17:13:15,798:INFO:Importing untrained model
2025-02-20 17:13:15,802:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 17:13:15,809:INFO:Starting cross validation
2025-02-20 17:13:15,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:16,751:INFO:Calculating mean and std
2025-02-20 17:13:16,752:INFO:Creating metrics dataframe
2025-02-20 17:13:16,755:INFO:Uploading results into container
2025-02-20 17:13:16,755:INFO:Uploading model into container now
2025-02-20 17:13:16,756:INFO:_master_model_container: 17
2025-02-20 17:13:16,756:INFO:_display_container: 2
2025-02-20 17:13:16,757:INFO:LGBMRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:16,757:INFO:create_model() successfully completed......................................
2025-02-20 17:13:16,890:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:16,890:INFO:Creating metrics dataframe
2025-02-20 17:13:16,903:INFO:Initializing Dummy Regressor
2025-02-20 17:13:16,904:INFO:Total runtime is 0.4390369574228922 minutes
2025-02-20 17:13:16,907:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:16,908:INFO:Initializing create_model()
2025-02-20 17:13:16,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5070710>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:16,908:INFO:Checking exceptions
2025-02-20 17:13:16,908:INFO:Importing libraries
2025-02-20 17:13:16,908:INFO:Copying training dataset
2025-02-20 17:13:16,913:INFO:Defining folds
2025-02-20 17:13:16,913:INFO:Declaring metric variables
2025-02-20 17:13:16,917:INFO:Importing untrained model
2025-02-20 17:13:16,920:INFO:Dummy Regressor Imported successfully
2025-02-20 17:13:16,927:INFO:Starting cross validation
2025-02-20 17:13:16,944:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:17,503:INFO:Calculating mean and std
2025-02-20 17:13:17,504:INFO:Creating metrics dataframe
2025-02-20 17:13:17,505:INFO:Uploading results into container
2025-02-20 17:13:17,506:INFO:Uploading model into container now
2025-02-20 17:13:17,507:INFO:_master_model_container: 18
2025-02-20 17:13:17,507:INFO:_display_container: 2
2025-02-20 17:13:17,507:INFO:DummyRegressor()
2025-02-20 17:13:17,507:INFO:create_model() successfully completed......................................
2025-02-20 17:13:17,603:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:17,603:INFO:Creating metrics dataframe
2025-02-20 17:13:17,615:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-02-20 17:13:17,623:INFO:Initializing create_model()
2025-02-20 17:13:17,624:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8273), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:17,624:INFO:Checking exceptions
2025-02-20 17:13:17,625:INFO:Importing libraries
2025-02-20 17:13:17,626:INFO:Copying training dataset
2025-02-20 17:13:17,631:INFO:Defining folds
2025-02-20 17:13:17,631:INFO:Declaring metric variables
2025-02-20 17:13:17,632:INFO:Importing untrained model
2025-02-20 17:13:17,632:INFO:Declaring custom model
2025-02-20 17:13:17,634:INFO:Extra Trees Regressor Imported successfully
2025-02-20 17:13:17,645:INFO:Cross validation set to False
2025-02-20 17:13:17,645:INFO:Fitting Model
2025-02-20 17:13:17,889:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:17,889:INFO:create_model() successfully completed......................................
2025-02-20 17:13:18,022:INFO:_master_model_container: 18
2025-02-20 17:13:18,022:INFO:_display_container: 2
2025-02-20 17:13:18,022:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:18,022:INFO:compare_models() successfully completed......................................
2025-02-20 17:13:18,023:INFO:Initializing finalize_model()
2025-02-20 17:13:18,023:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8273), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-20 17:13:18,023:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:18,027:INFO:Initializing create_model()
2025-02-20 17:13:18,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8273), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:18,027:INFO:Checking exceptions
2025-02-20 17:13:18,029:INFO:Importing libraries
2025-02-20 17:13:18,029:INFO:Copying training dataset
2025-02-20 17:13:18,029:INFO:Defining folds
2025-02-20 17:13:18,029:INFO:Declaring metric variables
2025-02-20 17:13:18,029:INFO:Importing untrained model
2025-02-20 17:13:18,029:INFO:Declaring custom model
2025-02-20 17:13:18,030:INFO:Extra Trees Regressor Imported successfully
2025-02-20 17:13:18,040:INFO:Cross validation set to False
2025-02-20 17:13:18,041:INFO:Fitting Model
2025-02-20 17:13:18,297:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=8273))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8273))])
2025-02-20 17:13:18,298:INFO:create_model() successfully completed......................................
2025-02-20 17:13:18,399:INFO:_master_model_container: 18
2025-02-20 17:13:18,399:INFO:_display_container: 2
2025-02-20 17:13:18,411:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=8273))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8273))])
2025-02-20 17:13:18,411:INFO:finalize_model() successfully completed......................................
2025-02-20 17:13:18,511:INFO:Initializing predict_model()
2025-02-20 17:13:18,511:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=8273))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8273))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E2CC6EBB00>)
2025-02-20 17:13:18,511:INFO:Checking exceptions
2025-02-20 17:13:18,511:INFO:Preloading libraries
2025-02-20 17:13:18,513:INFO:Set up data.
2025-02-20 17:13:18,517:INFO:Set up index.
2025-02-20 17:13:18,553:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-20 17:13:18,668:INFO:Initializing create_model()
2025-02-20 17:13:18,668:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:18,668:INFO:Checking exceptions
2025-02-20 17:13:18,694:INFO:Importing libraries
2025-02-20 17:13:18,694:INFO:Copying training dataset
2025-02-20 17:13:18,705:INFO:Defining folds
2025-02-20 17:13:18,705:INFO:Declaring metric variables
2025-02-20 17:13:18,711:INFO:Importing untrained model
2025-02-20 17:13:18,718:INFO:Linear Regression Imported successfully
2025-02-20 17:13:18,728:INFO:Starting cross validation
2025-02-20 17:13:18,741:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:19,316:INFO:Calculating mean and std
2025-02-20 17:13:19,317:INFO:Creating metrics dataframe
2025-02-20 17:13:19,322:INFO:Finalizing model
2025-02-20 17:13:19,527:INFO:Uploading results into container
2025-02-20 17:13:19,528:INFO:Uploading model into container now
2025-02-20 17:13:19,541:INFO:_master_model_container: 19
2025-02-20 17:13:19,541:INFO:_display_container: 4
2025-02-20 17:13:19,543:INFO:LinearRegression(n_jobs=-1)
2025-02-20 17:13:19,543:INFO:create_model() successfully completed......................................
2025-02-20 17:13:19,664:INFO:Initializing predict_model()
2025-02-20 17:13:19,665:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=LinearRegression(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E2D4A7FCE0>)
2025-02-20 17:13:19,665:INFO:Checking exceptions
2025-02-20 17:13:19,665:INFO:Preloading libraries
2025-02-20 17:13:19,667:INFO:Set up data.
2025-02-20 17:13:19,673:INFO:Set up index.
2025-02-20 17:13:19,763:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-20 17:13:19,864:INFO:Initializing create_model()
2025-02-20 17:13:19,864:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=knn, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:19,864:INFO:Checking exceptions
2025-02-20 17:13:19,878:INFO:Importing libraries
2025-02-20 17:13:19,879:INFO:Copying training dataset
2025-02-20 17:13:19,884:INFO:Defining folds
2025-02-20 17:13:19,885:INFO:Declaring metric variables
2025-02-20 17:13:19,888:INFO:Importing untrained model
2025-02-20 17:13:19,892:INFO:K Neighbors Regressor Imported successfully
2025-02-20 17:13:19,900:INFO:Starting cross validation
2025-02-20 17:13:19,914:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:20,555:INFO:Calculating mean and std
2025-02-20 17:13:20,555:INFO:Creating metrics dataframe
2025-02-20 17:13:20,559:INFO:Finalizing model
2025-02-20 17:13:20,729:INFO:Uploading results into container
2025-02-20 17:13:20,730:INFO:Uploading model into container now
2025-02-20 17:13:20,742:INFO:_master_model_container: 20
2025-02-20 17:13:20,742:INFO:_display_container: 6
2025-02-20 17:13:20,742:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-20 17:13:20,742:INFO:create_model() successfully completed......................................
2025-02-20 17:13:20,840:INFO:Initializing predict_model()
2025-02-20 17:13:20,841:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=KNeighborsRegressor(n_jobs=-1), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E2D4A7F9C0>)
2025-02-20 17:13:20,841:INFO:Checking exceptions
2025-02-20 17:13:20,841:INFO:Preloading libraries
2025-02-20 17:13:20,842:INFO:Set up data.
2025-02-20 17:13:20,847:INFO:Set up index.
2025-02-20 17:13:20,936:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-20 17:13:21,041:INFO:Initializing compare_models()
2025-02-20 17:13:21,042:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-02-20 17:13:21,042:INFO:Checking exceptions
2025-02-20 17:13:21,044:INFO:Preparing display monitor
2025-02-20 17:13:21,072:INFO:Initializing Linear Regression
2025-02-20 17:13:21,072:INFO:Total runtime is 1.6661485036214194e-05 minutes
2025-02-20 17:13:21,075:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:21,076:INFO:Initializing create_model()
2025-02-20 17:13:21,076:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:21,076:INFO:Checking exceptions
2025-02-20 17:13:21,076:INFO:Importing libraries
2025-02-20 17:13:21,077:INFO:Copying training dataset
2025-02-20 17:13:21,084:INFO:Defining folds
2025-02-20 17:13:21,084:INFO:Declaring metric variables
2025-02-20 17:13:21,088:INFO:Importing untrained model
2025-02-20 17:13:21,091:INFO:Linear Regression Imported successfully
2025-02-20 17:13:21,103:INFO:Starting cross validation
2025-02-20 17:13:21,112:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:21,693:INFO:Calculating mean and std
2025-02-20 17:13:21,694:INFO:Creating metrics dataframe
2025-02-20 17:13:21,695:INFO:Uploading results into container
2025-02-20 17:13:21,696:INFO:Uploading model into container now
2025-02-20 17:13:21,697:INFO:_master_model_container: 21
2025-02-20 17:13:21,697:INFO:_display_container: 8
2025-02-20 17:13:21,697:INFO:LinearRegression(n_jobs=-1)
2025-02-20 17:13:21,697:INFO:create_model() successfully completed......................................
2025-02-20 17:13:21,793:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:21,793:INFO:Creating metrics dataframe
2025-02-20 17:13:21,800:INFO:Initializing Lasso Regression
2025-02-20 17:13:21,800:INFO:Total runtime is 0.012149993578592935 minutes
2025-02-20 17:13:21,803:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:21,804:INFO:Initializing create_model()
2025-02-20 17:13:21,804:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:21,804:INFO:Checking exceptions
2025-02-20 17:13:21,804:INFO:Importing libraries
2025-02-20 17:13:21,804:INFO:Copying training dataset
2025-02-20 17:13:21,808:INFO:Defining folds
2025-02-20 17:13:21,808:INFO:Declaring metric variables
2025-02-20 17:13:21,811:INFO:Importing untrained model
2025-02-20 17:13:21,815:INFO:Lasso Regression Imported successfully
2025-02-20 17:13:21,823:INFO:Starting cross validation
2025-02-20 17:13:21,836:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:22,452:INFO:Calculating mean and std
2025-02-20 17:13:22,453:INFO:Creating metrics dataframe
2025-02-20 17:13:22,455:INFO:Uploading results into container
2025-02-20 17:13:22,456:INFO:Uploading model into container now
2025-02-20 17:13:22,456:INFO:_master_model_container: 22
2025-02-20 17:13:22,456:INFO:_display_container: 8
2025-02-20 17:13:22,457:INFO:Lasso(random_state=8273)
2025-02-20 17:13:22,457:INFO:create_model() successfully completed......................................
2025-02-20 17:13:22,550:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:22,551:INFO:Creating metrics dataframe
2025-02-20 17:13:22,558:INFO:Initializing Ridge Regression
2025-02-20 17:13:22,558:INFO:Total runtime is 0.02478337287902832 minutes
2025-02-20 17:13:22,561:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:22,561:INFO:Initializing create_model()
2025-02-20 17:13:22,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:22,562:INFO:Checking exceptions
2025-02-20 17:13:22,562:INFO:Importing libraries
2025-02-20 17:13:22,562:INFO:Copying training dataset
2025-02-20 17:13:22,569:INFO:Defining folds
2025-02-20 17:13:22,569:INFO:Declaring metric variables
2025-02-20 17:13:22,573:INFO:Importing untrained model
2025-02-20 17:13:22,579:INFO:Ridge Regression Imported successfully
2025-02-20 17:13:22,587:INFO:Starting cross validation
2025-02-20 17:13:22,595:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:23,175:INFO:Calculating mean and std
2025-02-20 17:13:23,176:INFO:Creating metrics dataframe
2025-02-20 17:13:23,178:INFO:Uploading results into container
2025-02-20 17:13:23,179:INFO:Uploading model into container now
2025-02-20 17:13:23,179:INFO:_master_model_container: 23
2025-02-20 17:13:23,179:INFO:_display_container: 8
2025-02-20 17:13:23,180:INFO:Ridge(random_state=8273)
2025-02-20 17:13:23,180:INFO:create_model() successfully completed......................................
2025-02-20 17:13:23,271:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:23,271:INFO:Creating metrics dataframe
2025-02-20 17:13:23,279:INFO:Initializing Elastic Net
2025-02-20 17:13:23,279:INFO:Total runtime is 0.03679072459538778 minutes
2025-02-20 17:13:23,282:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:23,283:INFO:Initializing create_model()
2025-02-20 17:13:23,283:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:23,283:INFO:Checking exceptions
2025-02-20 17:13:23,283:INFO:Importing libraries
2025-02-20 17:13:23,283:INFO:Copying training dataset
2025-02-20 17:13:23,288:INFO:Defining folds
2025-02-20 17:13:23,289:INFO:Declaring metric variables
2025-02-20 17:13:23,292:INFO:Importing untrained model
2025-02-20 17:13:23,295:INFO:Elastic Net Imported successfully
2025-02-20 17:13:23,302:INFO:Starting cross validation
2025-02-20 17:13:23,315:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:23,930:INFO:Calculating mean and std
2025-02-20 17:13:23,931:INFO:Creating metrics dataframe
2025-02-20 17:13:23,935:INFO:Uploading results into container
2025-02-20 17:13:23,935:INFO:Uploading model into container now
2025-02-20 17:13:23,936:INFO:_master_model_container: 24
2025-02-20 17:13:23,936:INFO:_display_container: 8
2025-02-20 17:13:23,937:INFO:ElasticNet(random_state=8273)
2025-02-20 17:13:23,937:INFO:create_model() successfully completed......................................
2025-02-20 17:13:24,050:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:24,051:INFO:Creating metrics dataframe
2025-02-20 17:13:24,058:INFO:Initializing Least Angle Regression
2025-02-20 17:13:24,058:INFO:Total runtime is 0.04978437026341756 minutes
2025-02-20 17:13:24,061:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:24,062:INFO:Initializing create_model()
2025-02-20 17:13:24,062:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:24,062:INFO:Checking exceptions
2025-02-20 17:13:24,062:INFO:Importing libraries
2025-02-20 17:13:24,062:INFO:Copying training dataset
2025-02-20 17:13:24,067:INFO:Defining folds
2025-02-20 17:13:24,067:INFO:Declaring metric variables
2025-02-20 17:13:24,072:INFO:Importing untrained model
2025-02-20 17:13:24,078:INFO:Least Angle Regression Imported successfully
2025-02-20 17:13:24,087:INFO:Starting cross validation
2025-02-20 17:13:24,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:24,720:INFO:Calculating mean and std
2025-02-20 17:13:24,721:INFO:Creating metrics dataframe
2025-02-20 17:13:24,724:INFO:Uploading results into container
2025-02-20 17:13:24,724:INFO:Uploading model into container now
2025-02-20 17:13:24,725:INFO:_master_model_container: 25
2025-02-20 17:13:24,725:INFO:_display_container: 8
2025-02-20 17:13:24,725:INFO:Lars(random_state=8273)
2025-02-20 17:13:24,725:INFO:create_model() successfully completed......................................
2025-02-20 17:13:24,820:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:24,820:INFO:Creating metrics dataframe
2025-02-20 17:13:24,828:INFO:Initializing Lasso Least Angle Regression
2025-02-20 17:13:24,828:INFO:Total runtime is 0.06261814435323079 minutes
2025-02-20 17:13:24,832:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:24,832:INFO:Initializing create_model()
2025-02-20 17:13:24,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:24,832:INFO:Checking exceptions
2025-02-20 17:13:24,832:INFO:Importing libraries
2025-02-20 17:13:24,833:INFO:Copying training dataset
2025-02-20 17:13:24,838:INFO:Defining folds
2025-02-20 17:13:24,838:INFO:Declaring metric variables
2025-02-20 17:13:24,859:INFO:Importing untrained model
2025-02-20 17:13:24,865:INFO:Lasso Least Angle Regression Imported successfully
2025-02-20 17:13:24,875:INFO:Starting cross validation
2025-02-20 17:13:24,884:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:25,489:INFO:Calculating mean and std
2025-02-20 17:13:25,489:INFO:Creating metrics dataframe
2025-02-20 17:13:25,491:INFO:Uploading results into container
2025-02-20 17:13:25,492:INFO:Uploading model into container now
2025-02-20 17:13:25,492:INFO:_master_model_container: 26
2025-02-20 17:13:25,492:INFO:_display_container: 8
2025-02-20 17:13:25,493:INFO:LassoLars(random_state=8273)
2025-02-20 17:13:25,493:INFO:create_model() successfully completed......................................
2025-02-20 17:13:25,587:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:25,587:INFO:Creating metrics dataframe
2025-02-20 17:13:25,594:INFO:Initializing Orthogonal Matching Pursuit
2025-02-20 17:13:25,594:INFO:Total runtime is 0.0753861387570699 minutes
2025-02-20 17:13:25,598:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:25,598:INFO:Initializing create_model()
2025-02-20 17:13:25,599:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:25,599:INFO:Checking exceptions
2025-02-20 17:13:25,599:INFO:Importing libraries
2025-02-20 17:13:25,599:INFO:Copying training dataset
2025-02-20 17:13:25,604:INFO:Defining folds
2025-02-20 17:13:25,604:INFO:Declaring metric variables
2025-02-20 17:13:25,607:INFO:Importing untrained model
2025-02-20 17:13:25,610:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-20 17:13:25,618:INFO:Starting cross validation
2025-02-20 17:13:25,628:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:26,258:INFO:Calculating mean and std
2025-02-20 17:13:26,261:INFO:Creating metrics dataframe
2025-02-20 17:13:26,264:INFO:Uploading results into container
2025-02-20 17:13:26,265:INFO:Uploading model into container now
2025-02-20 17:13:26,265:INFO:_master_model_container: 27
2025-02-20 17:13:26,266:INFO:_display_container: 8
2025-02-20 17:13:26,266:INFO:OrthogonalMatchingPursuit()
2025-02-20 17:13:26,266:INFO:create_model() successfully completed......................................
2025-02-20 17:13:26,402:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:26,402:INFO:Creating metrics dataframe
2025-02-20 17:13:26,412:INFO:Initializing Bayesian Ridge
2025-02-20 17:13:26,412:INFO:Total runtime is 0.0890119433403015 minutes
2025-02-20 17:13:26,416:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:26,416:INFO:Initializing create_model()
2025-02-20 17:13:26,417:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:26,417:INFO:Checking exceptions
2025-02-20 17:13:26,417:INFO:Importing libraries
2025-02-20 17:13:26,417:INFO:Copying training dataset
2025-02-20 17:13:26,423:INFO:Defining folds
2025-02-20 17:13:26,423:INFO:Declaring metric variables
2025-02-20 17:13:26,430:INFO:Importing untrained model
2025-02-20 17:13:26,436:INFO:Bayesian Ridge Imported successfully
2025-02-20 17:13:26,445:INFO:Starting cross validation
2025-02-20 17:13:26,456:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:27,088:INFO:Calculating mean and std
2025-02-20 17:13:27,089:INFO:Creating metrics dataframe
2025-02-20 17:13:27,094:INFO:Uploading results into container
2025-02-20 17:13:27,095:INFO:Uploading model into container now
2025-02-20 17:13:27,096:INFO:_master_model_container: 28
2025-02-20 17:13:27,096:INFO:_display_container: 8
2025-02-20 17:13:27,096:INFO:BayesianRidge()
2025-02-20 17:13:27,096:INFO:create_model() successfully completed......................................
2025-02-20 17:13:27,240:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:27,241:INFO:Creating metrics dataframe
2025-02-20 17:13:27,253:INFO:Initializing Passive Aggressive Regressor
2025-02-20 17:13:27,254:INFO:Total runtime is 0.10304869016011556 minutes
2025-02-20 17:13:27,258:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:27,259:INFO:Initializing create_model()
2025-02-20 17:13:27,259:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:27,260:INFO:Checking exceptions
2025-02-20 17:13:27,260:INFO:Importing libraries
2025-02-20 17:13:27,260:INFO:Copying training dataset
2025-02-20 17:13:27,266:INFO:Defining folds
2025-02-20 17:13:27,266:INFO:Declaring metric variables
2025-02-20 17:13:27,271:INFO:Importing untrained model
2025-02-20 17:13:27,276:INFO:Passive Aggressive Regressor Imported successfully
2025-02-20 17:13:27,283:INFO:Starting cross validation
2025-02-20 17:13:27,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:27,932:INFO:Calculating mean and std
2025-02-20 17:13:27,934:INFO:Creating metrics dataframe
2025-02-20 17:13:27,939:INFO:Uploading results into container
2025-02-20 17:13:27,941:INFO:Uploading model into container now
2025-02-20 17:13:27,942:INFO:_master_model_container: 29
2025-02-20 17:13:27,942:INFO:_display_container: 8
2025-02-20 17:13:27,943:INFO:PassiveAggressiveRegressor(random_state=8273)
2025-02-20 17:13:27,943:INFO:create_model() successfully completed......................................
2025-02-20 17:13:28,095:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:28,095:INFO:Creating metrics dataframe
2025-02-20 17:13:28,108:INFO:Initializing Huber Regressor
2025-02-20 17:13:28,108:INFO:Total runtime is 0.11728339592615764 minutes
2025-02-20 17:13:28,112:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:28,113:INFO:Initializing create_model()
2025-02-20 17:13:28,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:28,113:INFO:Checking exceptions
2025-02-20 17:13:28,113:INFO:Importing libraries
2025-02-20 17:13:28,113:INFO:Copying training dataset
2025-02-20 17:13:28,120:INFO:Defining folds
2025-02-20 17:13:28,120:INFO:Declaring metric variables
2025-02-20 17:13:28,124:INFO:Importing untrained model
2025-02-20 17:13:28,130:INFO:Huber Regressor Imported successfully
2025-02-20 17:13:28,143:INFO:Starting cross validation
2025-02-20 17:13:28,157:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:28,474:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,524:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,614:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,619:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,696:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,704:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,725:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,752:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,853:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,891:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:28,912:INFO:Calculating mean and std
2025-02-20 17:13:28,913:INFO:Creating metrics dataframe
2025-02-20 17:13:28,915:INFO:Uploading results into container
2025-02-20 17:13:28,916:INFO:Uploading model into container now
2025-02-20 17:13:28,916:INFO:_master_model_container: 30
2025-02-20 17:13:28,917:INFO:_display_container: 8
2025-02-20 17:13:28,917:INFO:HuberRegressor()
2025-02-20 17:13:28,917:INFO:create_model() successfully completed......................................
2025-02-20 17:13:29,022:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:29,022:INFO:Creating metrics dataframe
2025-02-20 17:13:29,032:INFO:Initializing K Neighbors Regressor
2025-02-20 17:13:29,032:INFO:Total runtime is 0.1326834003130595 minutes
2025-02-20 17:13:29,036:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:29,036:INFO:Initializing create_model()
2025-02-20 17:13:29,036:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:29,036:INFO:Checking exceptions
2025-02-20 17:13:29,037:INFO:Importing libraries
2025-02-20 17:13:29,037:INFO:Copying training dataset
2025-02-20 17:13:29,043:INFO:Defining folds
2025-02-20 17:13:29,044:INFO:Declaring metric variables
2025-02-20 17:13:29,048:INFO:Importing untrained model
2025-02-20 17:13:29,053:INFO:K Neighbors Regressor Imported successfully
2025-02-20 17:13:29,060:INFO:Starting cross validation
2025-02-20 17:13:29,078:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:29,818:INFO:Calculating mean and std
2025-02-20 17:13:29,819:INFO:Creating metrics dataframe
2025-02-20 17:13:29,821:INFO:Uploading results into container
2025-02-20 17:13:29,822:INFO:Uploading model into container now
2025-02-20 17:13:29,822:INFO:_master_model_container: 31
2025-02-20 17:13:29,822:INFO:_display_container: 8
2025-02-20 17:13:29,822:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-20 17:13:29,823:INFO:create_model() successfully completed......................................
2025-02-20 17:13:29,927:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:29,927:INFO:Creating metrics dataframe
2025-02-20 17:13:29,937:INFO:Initializing Decision Tree Regressor
2025-02-20 17:13:29,937:INFO:Total runtime is 0.14776674509048462 minutes
2025-02-20 17:13:29,940:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:29,941:INFO:Initializing create_model()
2025-02-20 17:13:29,941:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:29,941:INFO:Checking exceptions
2025-02-20 17:13:29,941:INFO:Importing libraries
2025-02-20 17:13:29,941:INFO:Copying training dataset
2025-02-20 17:13:29,948:INFO:Defining folds
2025-02-20 17:13:29,948:INFO:Declaring metric variables
2025-02-20 17:13:29,956:INFO:Importing untrained model
2025-02-20 17:13:29,964:INFO:Decision Tree Regressor Imported successfully
2025-02-20 17:13:29,980:INFO:Starting cross validation
2025-02-20 17:13:29,997:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:30,608:INFO:Calculating mean and std
2025-02-20 17:13:30,609:INFO:Creating metrics dataframe
2025-02-20 17:13:30,613:INFO:Uploading results into container
2025-02-20 17:13:30,613:INFO:Uploading model into container now
2025-02-20 17:13:30,614:INFO:_master_model_container: 32
2025-02-20 17:13:30,614:INFO:_display_container: 8
2025-02-20 17:13:30,614:INFO:DecisionTreeRegressor(random_state=8273)
2025-02-20 17:13:30,614:INFO:create_model() successfully completed......................................
2025-02-20 17:13:30,726:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:30,727:INFO:Creating metrics dataframe
2025-02-20 17:13:30,736:INFO:Initializing Random Forest Regressor
2025-02-20 17:13:30,737:INFO:Total runtime is 0.1611000657081604 minutes
2025-02-20 17:13:30,740:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:30,740:INFO:Initializing create_model()
2025-02-20 17:13:30,740:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:30,741:INFO:Checking exceptions
2025-02-20 17:13:30,741:INFO:Importing libraries
2025-02-20 17:13:30,741:INFO:Copying training dataset
2025-02-20 17:13:30,747:INFO:Defining folds
2025-02-20 17:13:30,747:INFO:Declaring metric variables
2025-02-20 17:13:30,752:INFO:Importing untrained model
2025-02-20 17:13:30,756:INFO:Random Forest Regressor Imported successfully
2025-02-20 17:13:30,763:INFO:Starting cross validation
2025-02-20 17:13:30,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:31,950:INFO:Calculating mean and std
2025-02-20 17:13:31,951:INFO:Creating metrics dataframe
2025-02-20 17:13:31,953:INFO:Uploading results into container
2025-02-20 17:13:31,953:INFO:Uploading model into container now
2025-02-20 17:13:31,954:INFO:_master_model_container: 33
2025-02-20 17:13:31,954:INFO:_display_container: 8
2025-02-20 17:13:31,954:INFO:RandomForestRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:31,954:INFO:create_model() successfully completed......................................
2025-02-20 17:13:32,048:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:32,048:INFO:Creating metrics dataframe
2025-02-20 17:13:32,057:INFO:Initializing Extra Trees Regressor
2025-02-20 17:13:32,057:INFO:Total runtime is 0.1831000844637553 minutes
2025-02-20 17:13:32,060:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:32,061:INFO:Initializing create_model()
2025-02-20 17:13:32,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:32,061:INFO:Checking exceptions
2025-02-20 17:13:32,061:INFO:Importing libraries
2025-02-20 17:13:32,061:INFO:Copying training dataset
2025-02-20 17:13:32,067:INFO:Defining folds
2025-02-20 17:13:32,067:INFO:Declaring metric variables
2025-02-20 17:13:32,071:INFO:Importing untrained model
2025-02-20 17:13:32,075:INFO:Extra Trees Regressor Imported successfully
2025-02-20 17:13:32,086:INFO:Starting cross validation
2025-02-20 17:13:32,097:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:33,079:INFO:Calculating mean and std
2025-02-20 17:13:33,080:INFO:Creating metrics dataframe
2025-02-20 17:13:33,081:INFO:Uploading results into container
2025-02-20 17:13:33,082:INFO:Uploading model into container now
2025-02-20 17:13:33,083:INFO:_master_model_container: 34
2025-02-20 17:13:33,083:INFO:_display_container: 8
2025-02-20 17:13:33,083:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:33,084:INFO:create_model() successfully completed......................................
2025-02-20 17:13:33,181:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:33,182:INFO:Creating metrics dataframe
2025-02-20 17:13:33,190:INFO:Initializing AdaBoost Regressor
2025-02-20 17:13:33,191:INFO:Total runtime is 0.20200009346008302 minutes
2025-02-20 17:13:33,195:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:33,196:INFO:Initializing create_model()
2025-02-20 17:13:33,196:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:33,196:INFO:Checking exceptions
2025-02-20 17:13:33,196:INFO:Importing libraries
2025-02-20 17:13:33,196:INFO:Copying training dataset
2025-02-20 17:13:33,201:INFO:Defining folds
2025-02-20 17:13:33,201:INFO:Declaring metric variables
2025-02-20 17:13:33,205:INFO:Importing untrained model
2025-02-20 17:13:33,211:INFO:AdaBoost Regressor Imported successfully
2025-02-20 17:13:33,221:INFO:Starting cross validation
2025-02-20 17:13:33,233:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:34,083:INFO:Calculating mean and std
2025-02-20 17:13:34,085:INFO:Creating metrics dataframe
2025-02-20 17:13:34,088:INFO:Uploading results into container
2025-02-20 17:13:34,088:INFO:Uploading model into container now
2025-02-20 17:13:34,089:INFO:_master_model_container: 35
2025-02-20 17:13:34,089:INFO:_display_container: 8
2025-02-20 17:13:34,089:INFO:AdaBoostRegressor(random_state=8273)
2025-02-20 17:13:34,089:INFO:create_model() successfully completed......................................
2025-02-20 17:13:34,184:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:34,185:INFO:Creating metrics dataframe
2025-02-20 17:13:34,195:INFO:Initializing Gradient Boosting Regressor
2025-02-20 17:13:34,195:INFO:Total runtime is 0.2187330762545268 minutes
2025-02-20 17:13:34,198:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:34,198:INFO:Initializing create_model()
2025-02-20 17:13:34,198:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:34,199:INFO:Checking exceptions
2025-02-20 17:13:34,199:INFO:Importing libraries
2025-02-20 17:13:34,199:INFO:Copying training dataset
2025-02-20 17:13:34,205:INFO:Defining folds
2025-02-20 17:13:34,205:INFO:Declaring metric variables
2025-02-20 17:13:34,210:INFO:Importing untrained model
2025-02-20 17:13:34,215:INFO:Gradient Boosting Regressor Imported successfully
2025-02-20 17:13:34,225:INFO:Starting cross validation
2025-02-20 17:13:34,239:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:35,094:INFO:Calculating mean and std
2025-02-20 17:13:35,095:INFO:Creating metrics dataframe
2025-02-20 17:13:35,098:INFO:Uploading results into container
2025-02-20 17:13:35,098:INFO:Uploading model into container now
2025-02-20 17:13:35,099:INFO:_master_model_container: 36
2025-02-20 17:13:35,099:INFO:_display_container: 8
2025-02-20 17:13:35,100:INFO:GradientBoostingRegressor(random_state=8273)
2025-02-20 17:13:35,100:INFO:create_model() successfully completed......................................
2025-02-20 17:13:35,206:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:35,206:INFO:Creating metrics dataframe
2025-02-20 17:13:35,216:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 17:13:35,216:INFO:Total runtime is 0.23574980099995932 minutes
2025-02-20 17:13:35,221:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:35,222:INFO:Initializing create_model()
2025-02-20 17:13:35,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:35,222:INFO:Checking exceptions
2025-02-20 17:13:35,222:INFO:Importing libraries
2025-02-20 17:13:35,222:INFO:Copying training dataset
2025-02-20 17:13:35,227:INFO:Defining folds
2025-02-20 17:13:35,227:INFO:Declaring metric variables
2025-02-20 17:13:35,230:INFO:Importing untrained model
2025-02-20 17:13:35,243:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 17:13:35,259:INFO:Starting cross validation
2025-02-20 17:13:35,276:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:36,091:INFO:Calculating mean and std
2025-02-20 17:13:36,093:INFO:Creating metrics dataframe
2025-02-20 17:13:36,095:INFO:Uploading results into container
2025-02-20 17:13:36,096:INFO:Uploading model into container now
2025-02-20 17:13:36,097:INFO:_master_model_container: 37
2025-02-20 17:13:36,097:INFO:_display_container: 8
2025-02-20 17:13:36,097:INFO:LGBMRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:36,097:INFO:create_model() successfully completed......................................
2025-02-20 17:13:36,215:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:36,215:INFO:Creating metrics dataframe
2025-02-20 17:13:36,225:INFO:Initializing Dummy Regressor
2025-02-20 17:13:36,225:INFO:Total runtime is 0.25256640116373696 minutes
2025-02-20 17:13:36,228:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:36,228:INFO:Initializing create_model()
2025-02-20 17:13:36,228:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D5041B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:36,229:INFO:Checking exceptions
2025-02-20 17:13:36,229:INFO:Importing libraries
2025-02-20 17:13:36,229:INFO:Copying training dataset
2025-02-20 17:13:36,234:INFO:Defining folds
2025-02-20 17:13:36,234:INFO:Declaring metric variables
2025-02-20 17:13:36,237:INFO:Importing untrained model
2025-02-20 17:13:36,240:INFO:Dummy Regressor Imported successfully
2025-02-20 17:13:36,253:INFO:Starting cross validation
2025-02-20 17:13:36,263:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:36,836:INFO:Calculating mean and std
2025-02-20 17:13:36,837:INFO:Creating metrics dataframe
2025-02-20 17:13:36,839:INFO:Uploading results into container
2025-02-20 17:13:36,840:INFO:Uploading model into container now
2025-02-20 17:13:36,840:INFO:_master_model_container: 38
2025-02-20 17:13:36,840:INFO:_display_container: 8
2025-02-20 17:13:36,840:INFO:DummyRegressor()
2025-02-20 17:13:36,840:INFO:create_model() successfully completed......................................
2025-02-20 17:13:36,934:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:36,934:INFO:Creating metrics dataframe
2025-02-20 17:13:36,946:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-02-20 17:13:36,955:INFO:Initializing create_model()
2025-02-20 17:13:36,956:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8273), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:36,956:INFO:Checking exceptions
2025-02-20 17:13:36,957:INFO:Importing libraries
2025-02-20 17:13:36,957:INFO:Copying training dataset
2025-02-20 17:13:36,963:INFO:Defining folds
2025-02-20 17:13:36,963:INFO:Declaring metric variables
2025-02-20 17:13:36,963:INFO:Importing untrained model
2025-02-20 17:13:36,963:INFO:Declaring custom model
2025-02-20 17:13:36,964:INFO:Extra Trees Regressor Imported successfully
2025-02-20 17:13:36,973:INFO:Cross validation set to False
2025-02-20 17:13:36,973:INFO:Fitting Model
2025-02-20 17:13:37,216:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:37,216:INFO:create_model() successfully completed......................................
2025-02-20 17:13:37,344:INFO:_master_model_container: 38
2025-02-20 17:13:37,344:INFO:_display_container: 8
2025-02-20 17:13:37,345:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:37,345:INFO:compare_models() successfully completed......................................
2025-02-20 17:13:37,346:INFO:Initializing finalize_model()
2025-02-20 17:13:37,346:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8273), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-20 17:13:37,346:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=8273)
2025-02-20 17:13:37,350:INFO:Initializing create_model()
2025-02-20 17:13:37,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=8273), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:37,350:INFO:Checking exceptions
2025-02-20 17:13:37,352:INFO:Importing libraries
2025-02-20 17:13:37,352:INFO:Copying training dataset
2025-02-20 17:13:37,352:INFO:Defining folds
2025-02-20 17:13:37,352:INFO:Declaring metric variables
2025-02-20 17:13:37,353:INFO:Importing untrained model
2025-02-20 17:13:37,353:INFO:Declaring custom model
2025-02-20 17:13:37,353:INFO:Extra Trees Regressor Imported successfully
2025-02-20 17:13:37,363:INFO:Cross validation set to False
2025-02-20 17:13:37,364:INFO:Fitting Model
2025-02-20 17:13:37,663:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=8273))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8273))])
2025-02-20 17:13:37,664:INFO:create_model() successfully completed......................................
2025-02-20 17:13:37,756:INFO:_master_model_container: 38
2025-02-20 17:13:37,756:INFO:_display_container: 8
2025-02-20 17:13:37,765:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=8273))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8273))])
2025-02-20 17:13:37,765:INFO:finalize_model() successfully completed......................................
2025-02-20 17:13:37,870:INFO:Initializing predict_model()
2025-02-20 17:13:37,870:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D17D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('oneh...
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('remove_outliers',
                 TransformerWrapper(transformer=RemoveOutliers(random_state=8273))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=8273))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E2D48FFBA0>)
2025-02-20 17:13:37,871:INFO:Checking exceptions
2025-02-20 17:13:37,871:INFO:Preloading libraries
2025-02-20 17:13:37,873:INFO:Set up data.
2025-02-20 17:13:37,878:INFO:Set up index.
2025-02-20 17:13:37,912:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-20 17:13:40,366:INFO:PyCaret RegressionExperiment
2025-02-20 17:13:40,366:INFO:Logging name: reg-default-name
2025-02-20 17:13:40,366:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-20 17:13:40,366:INFO:version 3.3.2
2025-02-20 17:13:40,366:INFO:Initializing setup()
2025-02-20 17:13:40,366:INFO:self.USI: cf4f
2025-02-20 17:13:40,366:INFO:self._variable_keys: {'gpu_n_jobs_param', 'log_plots_param', 'gpu_param', 'USI', 'exp_id', 'pipeline', 'y', '_available_plots', 'fold_generator', 'transform_target_param', 'logging_param', 'y_train', 'data', 'X_test', 'idx', 'html_param', 'fold_groups_param', 'X_train', '_ml_usecase', 'seed', 'y_test', 'n_jobs_param', 'target_param', 'fold_shuffle_param', 'X', 'exp_name_log', 'memory'}
2025-02-20 17:13:40,366:INFO:Checking environment
2025-02-20 17:13:40,367:INFO:python_version: 3.11.7
2025-02-20 17:13:40,367:INFO:python_build: ('main', 'Dec 15 2023 18:05:47')
2025-02-20 17:13:40,367:INFO:machine: AMD64
2025-02-20 17:13:40,367:INFO:platform: Windows-10-10.0.19045-SP0
2025-02-20 17:13:40,367:INFO:Memory: svmem(total=14515879936, available=2233896960, percent=84.6, used=12281982976, free=2233896960)
2025-02-20 17:13:40,367:INFO:Physical Core: 4
2025-02-20 17:13:40,367:INFO:Logical Core: 8
2025-02-20 17:13:40,367:INFO:Checking libraries
2025-02-20 17:13:40,367:INFO:System:
2025-02-20 17:13:40,367:INFO:    python: 3.11.7 | packaged by Anaconda, Inc. | (main, Dec 15 2023, 18:05:47) [MSC v.1916 64 bit (AMD64)]
2025-02-20 17:13:40,367:INFO:executable: C:\Users\Mihai\anaconda3\python.exe
2025-02-20 17:13:40,367:INFO:   machine: Windows-10-10.0.19045-SP0
2025-02-20 17:13:40,368:INFO:PyCaret required dependencies:
2025-02-20 17:13:40,368:INFO:                 pip: 23.3.1
2025-02-20 17:13:40,368:INFO:          setuptools: 68.2.2
2025-02-20 17:13:40,368:INFO:             pycaret: 3.3.2
2025-02-20 17:13:40,368:INFO:             IPython: 8.20.0
2025-02-20 17:13:40,368:INFO:          ipywidgets: 7.6.5
2025-02-20 17:13:40,368:INFO:                tqdm: 4.65.0
2025-02-20 17:13:40,368:INFO:               numpy: 1.26.4
2025-02-20 17:13:40,368:INFO:              pandas: 2.1.4
2025-02-20 17:13:40,368:INFO:              jinja2: 3.1.3
2025-02-20 17:13:40,368:INFO:               scipy: 1.11.4
2025-02-20 17:13:40,369:INFO:              joblib: 1.2.0
2025-02-20 17:13:40,369:INFO:             sklearn: 1.4.2
2025-02-20 17:13:40,369:INFO:                pyod: 2.0.3
2025-02-20 17:13:40,369:INFO:            imblearn: 0.13.0
2025-02-20 17:13:40,369:INFO:   category_encoders: 2.7.0
2025-02-20 17:13:40,369:INFO:            lightgbm: 4.6.0
2025-02-20 17:13:40,369:INFO:               numba: 0.59.0
2025-02-20 17:13:40,369:INFO:            requests: 2.31.0
2025-02-20 17:13:40,369:INFO:          matplotlib: 3.7.5
2025-02-20 17:13:40,369:INFO:          scikitplot: 0.3.7
2025-02-20 17:13:40,369:INFO:         yellowbrick: 1.5
2025-02-20 17:13:40,369:INFO:              plotly: 5.24.1
2025-02-20 17:13:40,369:INFO:    plotly-resampler: Not installed
2025-02-20 17:13:40,369:INFO:             kaleido: 0.2.1
2025-02-20 17:13:40,369:INFO:           schemdraw: 0.15
2025-02-20 17:13:40,369:INFO:         statsmodels: 0.14.0
2025-02-20 17:13:40,369:INFO:              sktime: 0.26.0
2025-02-20 17:13:40,369:INFO:               tbats: 1.1.3
2025-02-20 17:13:40,369:INFO:            pmdarima: 2.0.4
2025-02-20 17:13:40,369:INFO:              psutil: 5.9.0
2025-02-20 17:13:40,369:INFO:          markupsafe: 2.1.3
2025-02-20 17:13:40,369:INFO:             pickle5: Not installed
2025-02-20 17:13:40,369:INFO:         cloudpickle: 2.2.1
2025-02-20 17:13:40,369:INFO:         deprecation: 2.1.0
2025-02-20 17:13:40,369:INFO:              xxhash: 3.5.0
2025-02-20 17:13:40,369:INFO:           wurlitzer: Not installed
2025-02-20 17:13:40,369:INFO:PyCaret optional dependencies:
2025-02-20 17:13:40,370:INFO:                shap: Not installed
2025-02-20 17:13:40,370:INFO:           interpret: Not installed
2025-02-20 17:13:40,370:INFO:                umap: Not installed
2025-02-20 17:13:40,370:INFO:     ydata_profiling: Not installed
2025-02-20 17:13:40,370:INFO:  explainerdashboard: Not installed
2025-02-20 17:13:40,370:INFO:             autoviz: Not installed
2025-02-20 17:13:40,370:INFO:           fairlearn: Not installed
2025-02-20 17:13:40,370:INFO:          deepchecks: Not installed
2025-02-20 17:13:40,370:INFO:             xgboost: Not installed
2025-02-20 17:13:40,370:INFO:            catboost: Not installed
2025-02-20 17:13:40,370:INFO:              kmodes: Not installed
2025-02-20 17:13:40,370:INFO:             mlxtend: Not installed
2025-02-20 17:13:40,370:INFO:       statsforecast: Not installed
2025-02-20 17:13:40,370:INFO:        tune_sklearn: Not installed
2025-02-20 17:13:40,370:INFO:                 ray: Not installed
2025-02-20 17:13:40,370:INFO:            hyperopt: Not installed
2025-02-20 17:13:40,370:INFO:              optuna: Not installed
2025-02-20 17:13:40,370:INFO:               skopt: Not installed
2025-02-20 17:13:40,370:INFO:              mlflow: Not installed
2025-02-20 17:13:40,370:INFO:              gradio: Not installed
2025-02-20 17:13:40,370:INFO:             fastapi: Not installed
2025-02-20 17:13:40,370:INFO:             uvicorn: Not installed
2025-02-20 17:13:40,370:INFO:              m2cgen: Not installed
2025-02-20 17:13:40,370:INFO:           evidently: Not installed
2025-02-20 17:13:40,370:INFO:               fugue: Not installed
2025-02-20 17:13:40,371:INFO:           streamlit: 1.30.0
2025-02-20 17:13:40,371:INFO:             prophet: Not installed
2025-02-20 17:13:40,371:INFO:None
2025-02-20 17:13:40,371:INFO:Set up data.
2025-02-20 17:13:40,378:INFO:Set up folding strategy.
2025-02-20 17:13:40,378:INFO:Set up train/test split.
2025-02-20 17:13:40,381:INFO:Set up index.
2025-02-20 17:13:40,381:INFO:Assigning column types.
2025-02-20 17:13:40,385:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-20 17:13:40,385:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,390:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,394:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,450:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,492:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,493:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,500:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,505:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,563:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,609:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,609:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-20 17:13:40,614:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,618:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,670:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,713:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,719:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,725:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,788:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,835:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,835:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,835:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,835:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-20 17:13:40,844:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,903:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,952:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:13:40,952:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,952:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:40,962:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,019:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,062:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-20 17:13:41,125:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,169:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,169:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,169:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,234:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,278:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,279:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-20 17:13:41,343:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,454:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-20 17:13:41,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,498:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,498:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-20 17:13:41,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:41,718:INFO:Preparing preprocessing pipeline...
2025-02-20 17:13:41,718:INFO:Set up simple imputation.
2025-02-20 17:13:41,720:INFO:Set up encoding of categorical features.
2025-02-20 17:13:41,721:INFO:Set up removing multicollinearity.
2025-02-20 17:13:41,792:INFO:Finished creating preprocessing pipeline.
2025-02-20 17:13:41,802:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Mihai\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9)))])
2025-02-20 17:13:41,802:INFO:Creating final display dataframe.
2025-02-20 17:13:41,978:INFO:Setup _display_container:                     Description             Value
0                    Session id              3532
1                        Target               cnt
2                   Target type        Regression
3           Original data shape         (480, 13)
4        Transformed data shape         (480, 12)
5   Transformed train set shape         (336, 12)
6    Transformed test set shape         (144, 12)
7              Numeric features                11
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15     Remove multicollinearity              True
16  Multicollinearity threshold               0.9
17               Fold Generator             KFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  reg-default-name
23                          USI              cf4f
2025-02-20 17:13:42,102:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:42,102:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:42,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:42,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-20 17:13:42,211:INFO:setup() successfully completed in 1.85s...............
2025-02-20 17:13:42,215:INFO:Initializing compare_models()
2025-02-20 17:13:42,215:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>})
2025-02-20 17:13:42,215:INFO:Checking exceptions
2025-02-20 17:13:42,218:INFO:Preparing display monitor
2025-02-20 17:13:42,246:INFO:Initializing Linear Regression
2025-02-20 17:13:42,247:INFO:Total runtime is 1.6677379608154298e-05 minutes
2025-02-20 17:13:42,253:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:42,253:INFO:Initializing create_model()
2025-02-20 17:13:42,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:42,254:INFO:Checking exceptions
2025-02-20 17:13:42,254:INFO:Importing libraries
2025-02-20 17:13:42,254:INFO:Copying training dataset
2025-02-20 17:13:42,260:INFO:Defining folds
2025-02-20 17:13:42,260:INFO:Declaring metric variables
2025-02-20 17:13:42,265:INFO:Importing untrained model
2025-02-20 17:13:42,270:INFO:Linear Regression Imported successfully
2025-02-20 17:13:42,277:INFO:Starting cross validation
2025-02-20 17:13:42,279:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:42,446:INFO:Calculating mean and std
2025-02-20 17:13:42,446:INFO:Creating metrics dataframe
2025-02-20 17:13:42,447:INFO:Uploading results into container
2025-02-20 17:13:42,448:INFO:Uploading model into container now
2025-02-20 17:13:42,448:INFO:_master_model_container: 1
2025-02-20 17:13:42,448:INFO:_display_container: 2
2025-02-20 17:13:42,449:INFO:LinearRegression(n_jobs=-1)
2025-02-20 17:13:42,449:INFO:create_model() successfully completed......................................
2025-02-20 17:13:42,564:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:42,564:INFO:Creating metrics dataframe
2025-02-20 17:13:42,571:INFO:Initializing Lasso Regression
2025-02-20 17:13:42,571:INFO:Total runtime is 0.0054172158241271974 minutes
2025-02-20 17:13:42,574:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:42,574:INFO:Initializing create_model()
2025-02-20 17:13:42,575:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:42,575:INFO:Checking exceptions
2025-02-20 17:13:42,575:INFO:Importing libraries
2025-02-20 17:13:42,575:INFO:Copying training dataset
2025-02-20 17:13:42,579:INFO:Defining folds
2025-02-20 17:13:42,579:INFO:Declaring metric variables
2025-02-20 17:13:42,583:INFO:Importing untrained model
2025-02-20 17:13:42,586:INFO:Lasso Regression Imported successfully
2025-02-20 17:13:42,595:INFO:Starting cross validation
2025-02-20 17:13:42,596:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:42,765:INFO:Calculating mean and std
2025-02-20 17:13:42,765:INFO:Creating metrics dataframe
2025-02-20 17:13:42,767:INFO:Uploading results into container
2025-02-20 17:13:42,767:INFO:Uploading model into container now
2025-02-20 17:13:42,767:INFO:_master_model_container: 2
2025-02-20 17:13:42,768:INFO:_display_container: 2
2025-02-20 17:13:42,768:INFO:Lasso(random_state=3532)
2025-02-20 17:13:42,768:INFO:create_model() successfully completed......................................
2025-02-20 17:13:42,877:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:42,877:INFO:Creating metrics dataframe
2025-02-20 17:13:42,883:INFO:Initializing Ridge Regression
2025-02-20 17:13:42,884:INFO:Total runtime is 0.010633333524068197 minutes
2025-02-20 17:13:42,887:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:42,887:INFO:Initializing create_model()
2025-02-20 17:13:42,887:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:42,887:INFO:Checking exceptions
2025-02-20 17:13:42,888:INFO:Importing libraries
2025-02-20 17:13:42,888:INFO:Copying training dataset
2025-02-20 17:13:42,893:INFO:Defining folds
2025-02-20 17:13:42,893:INFO:Declaring metric variables
2025-02-20 17:13:42,897:INFO:Importing untrained model
2025-02-20 17:13:42,902:INFO:Ridge Regression Imported successfully
2025-02-20 17:13:42,910:INFO:Starting cross validation
2025-02-20 17:13:42,911:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:43,079:INFO:Calculating mean and std
2025-02-20 17:13:43,080:INFO:Creating metrics dataframe
2025-02-20 17:13:43,081:INFO:Uploading results into container
2025-02-20 17:13:43,082:INFO:Uploading model into container now
2025-02-20 17:13:43,082:INFO:_master_model_container: 3
2025-02-20 17:13:43,082:INFO:_display_container: 2
2025-02-20 17:13:43,083:INFO:Ridge(random_state=3532)
2025-02-20 17:13:43,083:INFO:create_model() successfully completed......................................
2025-02-20 17:13:43,189:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:43,189:INFO:Creating metrics dataframe
2025-02-20 17:13:43,196:INFO:Initializing Elastic Net
2025-02-20 17:13:43,196:INFO:Total runtime is 0.01583337386449178 minutes
2025-02-20 17:13:43,199:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:43,200:INFO:Initializing create_model()
2025-02-20 17:13:43,200:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:43,200:INFO:Checking exceptions
2025-02-20 17:13:43,200:INFO:Importing libraries
2025-02-20 17:13:43,200:INFO:Copying training dataset
2025-02-20 17:13:43,204:INFO:Defining folds
2025-02-20 17:13:43,204:INFO:Declaring metric variables
2025-02-20 17:13:43,210:INFO:Importing untrained model
2025-02-20 17:13:43,215:INFO:Elastic Net Imported successfully
2025-02-20 17:13:43,224:INFO:Starting cross validation
2025-02-20 17:13:43,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:43,412:INFO:Calculating mean and std
2025-02-20 17:13:43,413:INFO:Creating metrics dataframe
2025-02-20 17:13:43,416:INFO:Uploading results into container
2025-02-20 17:13:43,417:INFO:Uploading model into container now
2025-02-20 17:13:43,417:INFO:_master_model_container: 4
2025-02-20 17:13:43,417:INFO:_display_container: 2
2025-02-20 17:13:43,418:INFO:ElasticNet(random_state=3532)
2025-02-20 17:13:43,418:INFO:create_model() successfully completed......................................
2025-02-20 17:13:43,536:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:43,536:INFO:Creating metrics dataframe
2025-02-20 17:13:43,546:INFO:Initializing Least Angle Regression
2025-02-20 17:13:43,546:INFO:Total runtime is 0.021666685740152996 minutes
2025-02-20 17:13:43,550:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:43,551:INFO:Initializing create_model()
2025-02-20 17:13:43,551:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:43,551:INFO:Checking exceptions
2025-02-20 17:13:43,551:INFO:Importing libraries
2025-02-20 17:13:43,552:INFO:Copying training dataset
2025-02-20 17:13:43,558:INFO:Defining folds
2025-02-20 17:13:43,558:INFO:Declaring metric variables
2025-02-20 17:13:43,562:INFO:Importing untrained model
2025-02-20 17:13:43,566:INFO:Least Angle Regression Imported successfully
2025-02-20 17:13:43,575:INFO:Starting cross validation
2025-02-20 17:13:43,578:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:43,772:INFO:Calculating mean and std
2025-02-20 17:13:43,773:INFO:Creating metrics dataframe
2025-02-20 17:13:43,776:INFO:Uploading results into container
2025-02-20 17:13:43,777:INFO:Uploading model into container now
2025-02-20 17:13:43,778:INFO:_master_model_container: 5
2025-02-20 17:13:43,778:INFO:_display_container: 2
2025-02-20 17:13:43,778:INFO:Lars(random_state=3532)
2025-02-20 17:13:43,778:INFO:create_model() successfully completed......................................
2025-02-20 17:13:43,914:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:43,914:INFO:Creating metrics dataframe
2025-02-20 17:13:43,923:INFO:Initializing Lasso Least Angle Regression
2025-02-20 17:13:43,923:INFO:Total runtime is 0.027951085567474367 minutes
2025-02-20 17:13:43,928:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:43,929:INFO:Initializing create_model()
2025-02-20 17:13:43,929:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:43,929:INFO:Checking exceptions
2025-02-20 17:13:43,929:INFO:Importing libraries
2025-02-20 17:13:43,930:INFO:Copying training dataset
2025-02-20 17:13:43,935:INFO:Defining folds
2025-02-20 17:13:43,935:INFO:Declaring metric variables
2025-02-20 17:13:43,939:INFO:Importing untrained model
2025-02-20 17:13:43,945:INFO:Lasso Least Angle Regression Imported successfully
2025-02-20 17:13:43,955:INFO:Starting cross validation
2025-02-20 17:13:43,958:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:44,157:INFO:Calculating mean and std
2025-02-20 17:13:44,158:INFO:Creating metrics dataframe
2025-02-20 17:13:44,161:INFO:Uploading results into container
2025-02-20 17:13:44,162:INFO:Uploading model into container now
2025-02-20 17:13:44,162:INFO:_master_model_container: 6
2025-02-20 17:13:44,162:INFO:_display_container: 2
2025-02-20 17:13:44,163:INFO:LassoLars(random_state=3532)
2025-02-20 17:13:44,163:INFO:create_model() successfully completed......................................
2025-02-20 17:13:44,294:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:44,294:INFO:Creating metrics dataframe
2025-02-20 17:13:44,302:INFO:Initializing Orthogonal Matching Pursuit
2025-02-20 17:13:44,302:INFO:Total runtime is 0.03426776329676311 minutes
2025-02-20 17:13:44,306:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:44,307:INFO:Initializing create_model()
2025-02-20 17:13:44,307:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:44,307:INFO:Checking exceptions
2025-02-20 17:13:44,307:INFO:Importing libraries
2025-02-20 17:13:44,307:INFO:Copying training dataset
2025-02-20 17:13:44,312:INFO:Defining folds
2025-02-20 17:13:44,312:INFO:Declaring metric variables
2025-02-20 17:13:44,316:INFO:Importing untrained model
2025-02-20 17:13:44,320:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-20 17:13:44,333:INFO:Starting cross validation
2025-02-20 17:13:44,336:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:44,527:INFO:Calculating mean and std
2025-02-20 17:13:44,529:INFO:Creating metrics dataframe
2025-02-20 17:13:44,532:INFO:Uploading results into container
2025-02-20 17:13:44,533:INFO:Uploading model into container now
2025-02-20 17:13:44,534:INFO:_master_model_container: 7
2025-02-20 17:13:44,534:INFO:_display_container: 2
2025-02-20 17:13:44,534:INFO:OrthogonalMatchingPursuit()
2025-02-20 17:13:44,535:INFO:create_model() successfully completed......................................
2025-02-20 17:13:44,666:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:44,667:INFO:Creating metrics dataframe
2025-02-20 17:13:44,677:INFO:Initializing Bayesian Ridge
2025-02-20 17:13:44,678:INFO:Total runtime is 0.04053443670272828 minutes
2025-02-20 17:13:44,682:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:44,682:INFO:Initializing create_model()
2025-02-20 17:13:44,682:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:44,682:INFO:Checking exceptions
2025-02-20 17:13:44,683:INFO:Importing libraries
2025-02-20 17:13:44,683:INFO:Copying training dataset
2025-02-20 17:13:44,689:INFO:Defining folds
2025-02-20 17:13:44,690:INFO:Declaring metric variables
2025-02-20 17:13:44,695:INFO:Importing untrained model
2025-02-20 17:13:44,704:INFO:Bayesian Ridge Imported successfully
2025-02-20 17:13:44,713:INFO:Starting cross validation
2025-02-20 17:13:44,715:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:44,919:INFO:Calculating mean and std
2025-02-20 17:13:44,920:INFO:Creating metrics dataframe
2025-02-20 17:13:44,922:INFO:Uploading results into container
2025-02-20 17:13:44,923:INFO:Uploading model into container now
2025-02-20 17:13:44,923:INFO:_master_model_container: 8
2025-02-20 17:13:44,923:INFO:_display_container: 2
2025-02-20 17:13:44,924:INFO:BayesianRidge()
2025-02-20 17:13:44,924:INFO:create_model() successfully completed......................................
2025-02-20 17:13:45,056:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:45,057:INFO:Creating metrics dataframe
2025-02-20 17:13:45,065:INFO:Initializing Passive Aggressive Regressor
2025-02-20 17:13:45,066:INFO:Total runtime is 0.04700111150741578 minutes
2025-02-20 17:13:45,069:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:45,070:INFO:Initializing create_model()
2025-02-20 17:13:45,070:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:45,070:INFO:Checking exceptions
2025-02-20 17:13:45,070:INFO:Importing libraries
2025-02-20 17:13:45,070:INFO:Copying training dataset
2025-02-20 17:13:45,076:INFO:Defining folds
2025-02-20 17:13:45,076:INFO:Declaring metric variables
2025-02-20 17:13:45,082:INFO:Importing untrained model
2025-02-20 17:13:45,086:INFO:Passive Aggressive Regressor Imported successfully
2025-02-20 17:13:45,097:INFO:Starting cross validation
2025-02-20 17:13:45,098:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:45,307:INFO:Calculating mean and std
2025-02-20 17:13:45,308:INFO:Creating metrics dataframe
2025-02-20 17:13:45,310:INFO:Uploading results into container
2025-02-20 17:13:45,310:INFO:Uploading model into container now
2025-02-20 17:13:45,311:INFO:_master_model_container: 9
2025-02-20 17:13:45,311:INFO:_display_container: 2
2025-02-20 17:13:45,311:INFO:PassiveAggressiveRegressor(random_state=3532)
2025-02-20 17:13:45,312:INFO:create_model() successfully completed......................................
2025-02-20 17:13:45,438:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:45,439:INFO:Creating metrics dataframe
2025-02-20 17:13:45,448:INFO:Initializing Huber Regressor
2025-02-20 17:13:45,448:INFO:Total runtime is 0.05336776574452719 minutes
2025-02-20 17:13:45,452:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:45,452:INFO:Initializing create_model()
2025-02-20 17:13:45,452:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:45,452:INFO:Checking exceptions
2025-02-20 17:13:45,452:INFO:Importing libraries
2025-02-20 17:13:45,453:INFO:Copying training dataset
2025-02-20 17:13:45,458:INFO:Defining folds
2025-02-20 17:13:45,458:INFO:Declaring metric variables
2025-02-20 17:13:45,462:INFO:Importing untrained model
2025-02-20 17:13:45,467:INFO:Huber Regressor Imported successfully
2025-02-20 17:13:45,474:INFO:Starting cross validation
2025-02-20 17:13:45,477:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:45,575:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,589:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,612:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,618:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,630:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,642:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,649:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,654:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,686:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,698:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2025-02-20 17:13:45,724:INFO:Calculating mean and std
2025-02-20 17:13:45,725:INFO:Creating metrics dataframe
2025-02-20 17:13:45,729:INFO:Uploading results into container
2025-02-20 17:13:45,730:INFO:Uploading model into container now
2025-02-20 17:13:45,730:INFO:_master_model_container: 10
2025-02-20 17:13:45,731:INFO:_display_container: 2
2025-02-20 17:13:45,731:INFO:HuberRegressor()
2025-02-20 17:13:45,731:INFO:create_model() successfully completed......................................
2025-02-20 17:13:45,869:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:45,869:INFO:Creating metrics dataframe
2025-02-20 17:13:45,878:INFO:Initializing K Neighbors Regressor
2025-02-20 17:13:45,879:INFO:Total runtime is 0.060551110903422044 minutes
2025-02-20 17:13:45,883:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:45,884:INFO:Initializing create_model()
2025-02-20 17:13:45,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:45,884:INFO:Checking exceptions
2025-02-20 17:13:45,884:INFO:Importing libraries
2025-02-20 17:13:45,884:INFO:Copying training dataset
2025-02-20 17:13:45,891:INFO:Defining folds
2025-02-20 17:13:45,892:INFO:Declaring metric variables
2025-02-20 17:13:45,897:INFO:Importing untrained model
2025-02-20 17:13:45,902:INFO:K Neighbors Regressor Imported successfully
2025-02-20 17:13:45,913:INFO:Starting cross validation
2025-02-20 17:13:45,915:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:46,173:INFO:Calculating mean and std
2025-02-20 17:13:46,174:INFO:Creating metrics dataframe
2025-02-20 17:13:46,177:INFO:Uploading results into container
2025-02-20 17:13:46,178:INFO:Uploading model into container now
2025-02-20 17:13:46,178:INFO:_master_model_container: 11
2025-02-20 17:13:46,178:INFO:_display_container: 2
2025-02-20 17:13:46,179:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-20 17:13:46,179:INFO:create_model() successfully completed......................................
2025-02-20 17:13:46,300:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:46,300:INFO:Creating metrics dataframe
2025-02-20 17:13:46,310:INFO:Initializing Decision Tree Regressor
2025-02-20 17:13:46,310:INFO:Total runtime is 0.06773440837860108 minutes
2025-02-20 17:13:46,314:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:46,315:INFO:Initializing create_model()
2025-02-20 17:13:46,315:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:46,315:INFO:Checking exceptions
2025-02-20 17:13:46,315:INFO:Importing libraries
2025-02-20 17:13:46,315:INFO:Copying training dataset
2025-02-20 17:13:46,321:INFO:Defining folds
2025-02-20 17:13:46,322:INFO:Declaring metric variables
2025-02-20 17:13:46,327:INFO:Importing untrained model
2025-02-20 17:13:46,331:INFO:Decision Tree Regressor Imported successfully
2025-02-20 17:13:46,343:INFO:Starting cross validation
2025-02-20 17:13:46,344:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:46,528:INFO:Calculating mean and std
2025-02-20 17:13:46,529:INFO:Creating metrics dataframe
2025-02-20 17:13:46,530:INFO:Uploading results into container
2025-02-20 17:13:46,531:INFO:Uploading model into container now
2025-02-20 17:13:46,532:INFO:_master_model_container: 12
2025-02-20 17:13:46,532:INFO:_display_container: 2
2025-02-20 17:13:46,533:INFO:DecisionTreeRegressor(random_state=3532)
2025-02-20 17:13:46,533:INFO:create_model() successfully completed......................................
2025-02-20 17:13:46,647:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:46,647:INFO:Creating metrics dataframe
2025-02-20 17:13:46,658:INFO:Initializing Random Forest Regressor
2025-02-20 17:13:46,658:INFO:Total runtime is 0.07353442112604777 minutes
2025-02-20 17:13:46,661:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:46,662:INFO:Initializing create_model()
2025-02-20 17:13:46,662:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:46,662:INFO:Checking exceptions
2025-02-20 17:13:46,662:INFO:Importing libraries
2025-02-20 17:13:46,662:INFO:Copying training dataset
2025-02-20 17:13:46,668:INFO:Defining folds
2025-02-20 17:13:46,668:INFO:Declaring metric variables
2025-02-20 17:13:46,672:INFO:Importing untrained model
2025-02-20 17:13:46,680:INFO:Random Forest Regressor Imported successfully
2025-02-20 17:13:46,693:INFO:Starting cross validation
2025-02-20 17:13:46,695:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:47,482:INFO:Calculating mean and std
2025-02-20 17:13:47,483:INFO:Creating metrics dataframe
2025-02-20 17:13:47,484:INFO:Uploading results into container
2025-02-20 17:13:47,485:INFO:Uploading model into container now
2025-02-20 17:13:47,485:INFO:_master_model_container: 13
2025-02-20 17:13:47,486:INFO:_display_container: 2
2025-02-20 17:13:47,486:INFO:RandomForestRegressor(n_jobs=-1, random_state=3532)
2025-02-20 17:13:47,486:INFO:create_model() successfully completed......................................
2025-02-20 17:13:47,597:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:47,597:INFO:Creating metrics dataframe
2025-02-20 17:13:47,607:INFO:Initializing Extra Trees Regressor
2025-02-20 17:13:47,607:INFO:Total runtime is 0.08935166994730631 minutes
2025-02-20 17:13:47,611:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:47,611:INFO:Initializing create_model()
2025-02-20 17:13:47,612:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:47,612:INFO:Checking exceptions
2025-02-20 17:13:47,612:INFO:Importing libraries
2025-02-20 17:13:47,612:INFO:Copying training dataset
2025-02-20 17:13:47,617:INFO:Defining folds
2025-02-20 17:13:47,617:INFO:Declaring metric variables
2025-02-20 17:13:47,621:INFO:Importing untrained model
2025-02-20 17:13:47,629:INFO:Extra Trees Regressor Imported successfully
2025-02-20 17:13:47,637:INFO:Starting cross validation
2025-02-20 17:13:47,639:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:48,224:INFO:Calculating mean and std
2025-02-20 17:13:48,225:INFO:Creating metrics dataframe
2025-02-20 17:13:48,227:INFO:Uploading results into container
2025-02-20 17:13:48,228:INFO:Uploading model into container now
2025-02-20 17:13:48,228:INFO:_master_model_container: 14
2025-02-20 17:13:48,228:INFO:_display_container: 2
2025-02-20 17:13:48,229:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=3532)
2025-02-20 17:13:48,229:INFO:create_model() successfully completed......................................
2025-02-20 17:13:48,340:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:48,340:INFO:Creating metrics dataframe
2025-02-20 17:13:48,348:INFO:Initializing AdaBoost Regressor
2025-02-20 17:13:48,349:INFO:Total runtime is 0.10171831051508586 minutes
2025-02-20 17:13:48,352:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:48,352:INFO:Initializing create_model()
2025-02-20 17:13:48,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:48,352:INFO:Checking exceptions
2025-02-20 17:13:48,352:INFO:Importing libraries
2025-02-20 17:13:48,353:INFO:Copying training dataset
2025-02-20 17:13:48,359:INFO:Defining folds
2025-02-20 17:13:48,359:INFO:Declaring metric variables
2025-02-20 17:13:48,363:INFO:Importing untrained model
2025-02-20 17:13:48,369:INFO:AdaBoost Regressor Imported successfully
2025-02-20 17:13:48,376:INFO:Starting cross validation
2025-02-20 17:13:48,378:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:48,760:INFO:Calculating mean and std
2025-02-20 17:13:48,761:INFO:Creating metrics dataframe
2025-02-20 17:13:48,763:INFO:Uploading results into container
2025-02-20 17:13:48,764:INFO:Uploading model into container now
2025-02-20 17:13:48,764:INFO:_master_model_container: 15
2025-02-20 17:13:48,764:INFO:_display_container: 2
2025-02-20 17:13:48,765:INFO:AdaBoostRegressor(random_state=3532)
2025-02-20 17:13:48,765:INFO:create_model() successfully completed......................................
2025-02-20 17:13:48,882:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:48,882:INFO:Creating metrics dataframe
2025-02-20 17:13:48,892:INFO:Initializing Gradient Boosting Regressor
2025-02-20 17:13:48,892:INFO:Total runtime is 0.1107683499654134 minutes
2025-02-20 17:13:48,895:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:48,896:INFO:Initializing create_model()
2025-02-20 17:13:48,896:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:48,896:INFO:Checking exceptions
2025-02-20 17:13:48,896:INFO:Importing libraries
2025-02-20 17:13:48,896:INFO:Copying training dataset
2025-02-20 17:13:48,901:INFO:Defining folds
2025-02-20 17:13:48,901:INFO:Declaring metric variables
2025-02-20 17:13:48,905:INFO:Importing untrained model
2025-02-20 17:13:48,912:INFO:Gradient Boosting Regressor Imported successfully
2025-02-20 17:13:48,920:INFO:Starting cross validation
2025-02-20 17:13:48,921:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:49,312:INFO:Calculating mean and std
2025-02-20 17:13:49,313:INFO:Creating metrics dataframe
2025-02-20 17:13:49,315:INFO:Uploading results into container
2025-02-20 17:13:49,316:INFO:Uploading model into container now
2025-02-20 17:13:49,317:INFO:_master_model_container: 16
2025-02-20 17:13:49,317:INFO:_display_container: 2
2025-02-20 17:13:49,317:INFO:GradientBoostingRegressor(random_state=3532)
2025-02-20 17:13:49,317:INFO:create_model() successfully completed......................................
2025-02-20 17:13:49,427:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:49,428:INFO:Creating metrics dataframe
2025-02-20 17:13:49,439:INFO:Initializing Light Gradient Boosting Machine
2025-02-20 17:13:49,439:INFO:Total runtime is 0.11988499561945597 minutes
2025-02-20 17:13:49,444:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:49,444:INFO:Initializing create_model()
2025-02-20 17:13:49,444:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:49,444:INFO:Checking exceptions
2025-02-20 17:13:49,444:INFO:Importing libraries
2025-02-20 17:13:49,445:INFO:Copying training dataset
2025-02-20 17:13:49,450:INFO:Defining folds
2025-02-20 17:13:49,450:INFO:Declaring metric variables
2025-02-20 17:13:49,454:INFO:Importing untrained model
2025-02-20 17:13:49,458:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 17:13:49,468:INFO:Starting cross validation
2025-02-20 17:13:49,470:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:49,910:INFO:Calculating mean and std
2025-02-20 17:13:49,911:INFO:Creating metrics dataframe
2025-02-20 17:13:49,913:INFO:Uploading results into container
2025-02-20 17:13:49,914:INFO:Uploading model into container now
2025-02-20 17:13:49,914:INFO:_master_model_container: 17
2025-02-20 17:13:49,914:INFO:_display_container: 2
2025-02-20 17:13:49,915:INFO:LGBMRegressor(n_jobs=-1, random_state=3532)
2025-02-20 17:13:49,915:INFO:create_model() successfully completed......................................
2025-02-20 17:13:50,069:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:50,069:INFO:Creating metrics dataframe
2025-02-20 17:13:50,081:INFO:Initializing Dummy Regressor
2025-02-20 17:13:50,081:INFO:Total runtime is 0.13058499097824097 minutes
2025-02-20 17:13:50,085:INFO:SubProcess create_model() called ==================================
2025-02-20 17:13:50,085:INFO:Initializing create_model()
2025-02-20 17:13:50,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E2D84E3110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:50,085:INFO:Checking exceptions
2025-02-20 17:13:50,086:INFO:Importing libraries
2025-02-20 17:13:50,086:INFO:Copying training dataset
2025-02-20 17:13:50,092:INFO:Defining folds
2025-02-20 17:13:50,093:INFO:Declaring metric variables
2025-02-20 17:13:50,097:INFO:Importing untrained model
2025-02-20 17:13:50,103:INFO:Dummy Regressor Imported successfully
2025-02-20 17:13:50,112:INFO:Starting cross validation
2025-02-20 17:13:50,113:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:50,273:INFO:Calculating mean and std
2025-02-20 17:13:50,274:INFO:Creating metrics dataframe
2025-02-20 17:13:50,276:INFO:Uploading results into container
2025-02-20 17:13:50,277:INFO:Uploading model into container now
2025-02-20 17:13:50,277:INFO:_master_model_container: 18
2025-02-20 17:13:50,277:INFO:_display_container: 2
2025-02-20 17:13:50,277:INFO:DummyRegressor()
2025-02-20 17:13:50,277:INFO:create_model() successfully completed......................................
2025-02-20 17:13:50,405:INFO:SubProcess create_model() end ==================================
2025-02-20 17:13:50,405:INFO:Creating metrics dataframe
2025-02-20 17:13:50,426:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-02-20 17:13:50,436:INFO:Initializing create_model()
2025-02-20 17:13:50,436:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=GradientBoostingRegressor(random_state=3532), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:50,436:INFO:Checking exceptions
2025-02-20 17:13:50,438:INFO:Importing libraries
2025-02-20 17:13:50,438:INFO:Copying training dataset
2025-02-20 17:13:50,442:INFO:Defining folds
2025-02-20 17:13:50,442:INFO:Declaring metric variables
2025-02-20 17:13:50,442:INFO:Importing untrained model
2025-02-20 17:13:50,442:INFO:Declaring custom model
2025-02-20 17:13:50,443:INFO:Gradient Boosting Regressor Imported successfully
2025-02-20 17:13:50,445:INFO:Cross validation set to False
2025-02-20 17:13:50,445:INFO:Fitting Model
2025-02-20 17:13:50,595:INFO:GradientBoostingRegressor(random_state=3532)
2025-02-20 17:13:50,595:INFO:create_model() successfully completed......................................
2025-02-20 17:13:50,778:INFO:_master_model_container: 18
2025-02-20 17:13:50,779:INFO:_display_container: 2
2025-02-20 17:13:50,779:INFO:GradientBoostingRegressor(random_state=3532)
2025-02-20 17:13:50,779:INFO:compare_models() successfully completed......................................
2025-02-20 17:13:50,781:INFO:Initializing finalize_model()
2025-02-20 17:13:50,782:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=GradientBoostingRegressor(random_state=3532), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-20 17:13:50,782:INFO:Finalizing GradientBoostingRegressor(random_state=3532)
2025-02-20 17:13:50,787:INFO:Initializing create_model()
2025-02-20 17:13:50,787:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=GradientBoostingRegressor(random_state=3532), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:50,787:INFO:Checking exceptions
2025-02-20 17:13:50,789:INFO:Importing libraries
2025-02-20 17:13:50,790:INFO:Copying training dataset
2025-02-20 17:13:50,791:INFO:Defining folds
2025-02-20 17:13:50,791:INFO:Declaring metric variables
2025-02-20 17:13:50,792:INFO:Importing untrained model
2025-02-20 17:13:50,792:INFO:Declaring custom model
2025-02-20 17:13:50,793:INFO:Gradient Boosting Regressor Imported successfully
2025-02-20 17:13:50,794:INFO:Cross validation set to False
2025-02-20 17:13:50,794:INFO:Fitting Model
2025-02-20 17:13:50,950:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=3532))])
2025-02-20 17:13:50,950:INFO:create_model() successfully completed......................................
2025-02-20 17:13:51,069:INFO:_master_model_container: 18
2025-02-20 17:13:51,069:INFO:_display_container: 2
2025-02-20 17:13:51,078:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=3532))])
2025-02-20 17:13:51,078:INFO:finalize_model() successfully completed......................................
2025-02-20 17:13:51,205:INFO:Initializing predict_model()
2025-02-20 17:13:51,205:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=3532))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E2D4A7F9C0>)
2025-02-20 17:13:51,205:INFO:Checking exceptions
2025-02-20 17:13:51,205:INFO:Preloading libraries
2025-02-20 17:13:51,207:INFO:Set up data.
2025-02-20 17:13:51,212:INFO:Set up index.
2025-02-20 17:13:51,230:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-20 17:13:51,358:INFO:Initializing get_config()
2025-02-20 17:13:51,359:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, variable=X)
2025-02-20 17:13:51,365:INFO:Variable:  returned as      season  yr  mnth  holiday  weekday  workingday  weathersit      temp  \
97        2   0     4        0        5           1           2  0.335833   
488       2   1     5        0        1           1           2  0.598333   
68        1   0     3        0        4           1           3  0.389091   
370       1   1     1        0        4           1           2  0.382500   
524       3   1     7        0        6           0           1  0.861667   
..      ...  ..   ...      ...      ...         ...         ...       ...   
23        1   0     1        0        1           1           1  0.097391   
372       1   1     1        0        6           0           1  0.180000   
265       4   0     9        0        3           1           2  0.635000   
664       4   1    12        0        0           0           2  0.384167   
101       2   0     4        0        2           1           2  0.502500   

        atemp       hum  windspeed  rider_type  
97   0.324479  0.836250   0.226992  registered  
488  0.565667  0.811250   0.233204  registered  
68   0.385668  0.000000   0.261877  registered  
370  0.381938  0.802917   0.180967  registered  
524  0.804913  0.492083   0.163554  registered  
..        ...       ...        ...         ...  
23   0.117930  0.491739   0.158330  registered  
372  0.183087  0.457500   0.187183  registered  
265  0.575158  0.848750   0.148629  registered  
664  0.390146  0.905417   0.157975  registered  
101  0.493054  0.739167   0.274879  registered  

[480 rows x 12 columns]
2025-02-20 17:13:51,365:INFO:get_config() successfully completed......................................
2025-02-20 17:13:51,375:INFO:Initializing predict_model()
2025-02-20 17:13:51,375:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=3532))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E2D4B86E80>)
2025-02-20 17:13:51,375:INFO:Checking exceptions
2025-02-20 17:13:51,375:INFO:Preloading libraries
2025-02-20 17:13:51,378:INFO:Set up data.
2025-02-20 17:13:51,382:INFO:Set up index.
2025-02-20 17:13:51,410:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

2025-02-20 17:13:51,572:INFO:Initializing get_config()
2025-02-20 17:13:51,572:INFO:get_config(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, variable=X)
2025-02-20 17:13:51,579:INFO:Variable:  returned as      season  yr  mnth  holiday  weekday  workingday  weathersit      temp  \
97        2   0     4        0        5           1           2  0.335833   
488       2   1     5        0        1           1           2  0.598333   
68        1   0     3        0        4           1           3  0.389091   
370       1   1     1        0        4           1           2  0.382500   
524       3   1     7        0        6           0           1  0.861667   
..      ...  ..   ...      ...      ...         ...         ...       ...   
23        1   0     1        0        1           1           1  0.097391   
372       1   1     1        0        6           0           1  0.180000   
265       4   0     9        0        3           1           2  0.635000   
664       4   1    12        0        0           0           2  0.384167   
101       2   0     4        0        2           1           2  0.502500   

        atemp       hum  windspeed  rider_type  
97   0.324479  0.836250   0.226992  registered  
488  0.565667  0.811250   0.233204  registered  
68   0.385668  0.000000   0.261877  registered  
370  0.381938  0.802917   0.180967  registered  
524  0.804913  0.492083   0.163554  registered  
..        ...       ...        ...         ...  
23   0.117930  0.491739   0.158330  registered  
372  0.183087  0.457500   0.187183  registered  
265  0.575158  0.848750   0.148629  registered  
664  0.390146  0.905417   0.157975  registered  
101  0.493054  0.739167   0.274879  registered  

[480 rows x 12 columns]
2025-02-20 17:13:51,579:INFO:get_config() successfully completed......................................
2025-02-20 17:13:51,587:INFO:Initializing create_model()
2025-02-20 17:13:51,588:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=lightgbm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:51,588:INFO:Checking exceptions
2025-02-20 17:13:51,613:INFO:Importing libraries
2025-02-20 17:13:51,613:INFO:Copying training dataset
2025-02-20 17:13:51,622:INFO:Defining folds
2025-02-20 17:13:51,622:INFO:Declaring metric variables
2025-02-20 17:13:51,629:INFO:Importing untrained model
2025-02-20 17:13:51,636:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 17:13:51,647:INFO:Starting cross validation
2025-02-20 17:13:51,648:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-20 17:13:52,104:INFO:Calculating mean and std
2025-02-20 17:13:52,105:INFO:Creating metrics dataframe
2025-02-20 17:13:52,112:INFO:Finalizing model
2025-02-20 17:13:52,154:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000143 seconds.
2025-02-20 17:13:52,154:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-20 17:13:52,155:INFO:[LightGBM] [Info] Total Bins 371
2025-02-20 17:13:52,155:INFO:[LightGBM] [Info] Number of data points in the train set: 336, number of used features: 9
2025-02-20 17:13:52,156:INFO:[LightGBM] [Info] Start training from score 4336.991071
2025-02-20 17:13:52,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,219:INFO:Uploading results into container
2025-02-20 17:13:52,220:INFO:Uploading model into container now
2025-02-20 17:13:52,233:INFO:_master_model_container: 19
2025-02-20 17:13:52,233:INFO:_display_container: 5
2025-02-20 17:13:52,234:INFO:LGBMRegressor(n_jobs=-1, random_state=3532)
2025-02-20 17:13:52,234:INFO:create_model() successfully completed......................................
2025-02-20 17:13:52,378:INFO:Initializing finalize_model()
2025-02-20 17:13:52,378:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=LGBMRegressor(n_jobs=-1, random_state=3532), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-20 17:13:52,379:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=3532)
2025-02-20 17:13:52,383:INFO:Initializing create_model()
2025-02-20 17:13:52,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=LGBMRegressor(n_jobs=-1, random_state=3532), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-20 17:13:52,383:INFO:Checking exceptions
2025-02-20 17:13:52,385:INFO:Importing libraries
2025-02-20 17:13:52,385:INFO:Copying training dataset
2025-02-20 17:13:52,385:INFO:Defining folds
2025-02-20 17:13:52,385:INFO:Declaring metric variables
2025-02-20 17:13:52,386:INFO:Importing untrained model
2025-02-20 17:13:52,386:INFO:Declaring custom model
2025-02-20 17:13:52,387:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-20 17:13:52,388:INFO:Cross validation set to False
2025-02-20 17:13:52,388:INFO:Fitting Model
2025-02-20 17:13:52,424:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000169 seconds.
2025-02-20 17:13:52,424:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-20 17:13:52,424:INFO:[LightGBM] [Info] Total Bins 515
2025-02-20 17:13:52,425:INFO:[LightGBM] [Info] Number of data points in the train set: 480, number of used features: 9
2025-02-20 17:13:52,425:INFO:[LightGBM] [Info] Start training from score 4298.460417
2025-02-20 17:13:52,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,439:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,441:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,441:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,443:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-20 17:13:52,491:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=3532))])
2025-02-20 17:13:52,491:INFO:create_model() successfully completed......................................
2025-02-20 17:13:52,629:INFO:_master_model_container: 19
2025-02-20 17:13:52,630:INFO:_display_container: 5
2025-02-20 17:13:52,638:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=3532))])
2025-02-20 17:13:52,638:INFO:finalize_model() successfully completed......................................
2025-02-20 17:13:52,754:INFO:Initializing predict_model()
2025-02-20 17:13:52,754:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001E2D27D2490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['season', 'yr', 'mnth', 'holiday',
                                             'weekday', 'workingday',
                                             'weathersit', 'temp', 'atemp',
                                             'hum', 'windspeed'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['rider_type'],
                                    transformer=OneHotEncoder(cols=['rider_type'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('remove_multicollinearity',
                 TransformerWrapper(exclude=[],
                                    transformer=RemoveMulticollinearity(threshold=0.9))),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=3532))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001E2D4B86E80>)
2025-02-20 17:13:52,754:INFO:Checking exceptions
2025-02-20 17:13:52,754:INFO:Preloading libraries
2025-02-20 17:13:52,756:INFO:Set up data.
2025-02-20 17:13:52,763:INFO:Set up index.
2025-02-20 17:13:52,783:WARNING:C:\Users\Mihai\anaconda3\Lib\site-packages\sklearn\metrics\_regression.py:483: FutureWarning: 'squared' is deprecated in version 1.4 and will be removed in 1.6. To calculate the root mean squared error, use the function'root_mean_squared_error'.
  warnings.warn(

